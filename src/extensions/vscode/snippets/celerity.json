{
  "record expression": {
    "prefix": "rec",
    "body": [
      "rec {",
      "\t$0",
      "}"
    ]
  },
  "error expression": {
    "prefix": "err",
    "body": [
      "err ${1:name} {",
      "\t$0",
      "}"
    ]
  },
  "if expression": {
    "prefix": "if",
    "body": [
      "if ${1:condition} {",
      "\t$0",
      "}"
    ]
  },
  "if-else expression": {
    "prefix": "ifelse",
    "body": [
      "if ${1:condition} {",
      "\t$0",
      "} else {",
      "}"
    ]
  },
  "match expression": {
    "prefix": "match",
    "body": [
      "match ${1:operand} {",
      "\t${2:pattern} -> $0,",
      "}"
    ]
  },
  "receive expression": {
    "prefix": "recv",
    "body": [
      "recv {",
      "\t${1:name}(${2:parameters}) -> $0,",
      "}"
    ]
  },
  "receive-else expression": {
    "prefix": "recvelse",
    "body": [
      "recv {",
      "\t${1:name}(${2:parameters}) -> $0,",
      "} else {",
      "}"
    ]
  },
  "while expression": {
    "prefix": "while",
    "body": [
      "while ${1:condition} {",
      "\t$0",
      "}"
    ]
  },
  "while-else expression": {
    "prefix": "whileelse",
    "body": [
      "while ${1:condition} {",
      "\t$0",
      "} else {",
      "}"
    ]
  },
  "for expression": {
    "prefix": "for",
    "body": [
      "for ${1:pattern} in ${2:collection} {",
      "\t$0",
      "}"
    ]
  },
  "for-else expression": {
    "prefix": "forelse",
    "body": [
      "for ${1:pattern} in ${2:collection} {",
      "\t$0",
      "} else {",
      "}"
    ]
  },
  "try expression": {
    "prefix": "try",
    "body": [
      "try ${1:operand} catch {",
      "\t${2:pattern} -> $0,",
      "}"
    ]
  }
}
