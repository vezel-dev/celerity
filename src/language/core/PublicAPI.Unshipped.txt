#nullable enable
abstract Vezel.Celerity.Language.Quality.LintPass.Run(Vezel.Celerity.Language.Quality.LintPassContext! context) -> void
abstract Vezel.Celerity.Language.Semantics.Binding.Symbol.Assignments.get -> System.Collections.Immutable.ImmutableArray<Vezel.Celerity.Language.Semantics.Tree.AssignmentExpressionSemantics!>
abstract Vezel.Celerity.Language.Semantics.Binding.Symbol.Bindings.get -> System.Collections.Immutable.ImmutableArray<Vezel.Celerity.Language.Semantics.Tree.SemanticNode!>
abstract Vezel.Celerity.Language.Semantics.Binding.Symbol.GetSpans() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Text.SourceTextSpan>!
abstract Vezel.Celerity.Language.Semantics.Binding.Symbol.IsDiscard.get -> bool
abstract Vezel.Celerity.Language.Semantics.Binding.Symbol.IsMutable.get -> bool
abstract Vezel.Celerity.Language.Semantics.Binding.Symbol.Name.get -> string!
abstract Vezel.Celerity.Language.Semantics.Binding.Symbol.References.get -> System.Collections.Immutable.ImmutableArray<Vezel.Celerity.Language.Semantics.Tree.IdentifierExpressionSemantics!>
abstract Vezel.Celerity.Language.Semantics.DiagnosticAnalyzer.Analyze(Vezel.Celerity.Language.Semantics.DiagnosticAnalyzerContext! context) -> void
abstract Vezel.Celerity.Language.Semantics.Tree.AggregateExpressionSemantics.Fields.get -> Vezel.Celerity.Language.Semantics.Tree.SeparatedSemanticNodeList<Vezel.Celerity.Language.Semantics.Tree.AggregateExpressionFieldSemantics!, Vezel.Celerity.Language.Syntax.Tree.AggregateExpressionFieldSyntax!>
abstract Vezel.Celerity.Language.Semantics.Tree.AggregateExpressionSemantics.With.get -> Vezel.Celerity.Language.Semantics.Tree.ExpressionSemantics?
abstract Vezel.Celerity.Language.Semantics.Tree.AggregatePatternSemantics.Fields.get -> Vezel.Celerity.Language.Semantics.Tree.SeparatedSemanticNodeList<Vezel.Celerity.Language.Semantics.Tree.AggregatePatternFieldSemantics!, Vezel.Celerity.Language.Syntax.Tree.AggregatePatternFieldSyntax!>
abstract Vezel.Celerity.Language.Semantics.Tree.BindingSemantics.Symbol.get -> Vezel.Celerity.Language.Semantics.Binding.VariableSymbol?
abstract Vezel.Celerity.Language.Semantics.Tree.BranchExpressionSemantics.Defers.get -> System.Collections.Immutable.ImmutableArray<Vezel.Celerity.Language.Semantics.Tree.DeferStatementSemantics!>
abstract Vezel.Celerity.Language.Semantics.Tree.CodeDeclarationSemantics.Body.get -> Vezel.Celerity.Language.Semantics.Tree.ExpressionSemantics?
abstract Vezel.Celerity.Language.Semantics.Tree.CodeDeclarationSemantics.Symbol.get -> Vezel.Celerity.Language.Semantics.Binding.DeclarationSymbol?
abstract Vezel.Celerity.Language.Semantics.Tree.CodeParameterSemantics.Attributes.get -> Vezel.Celerity.Language.Semantics.Tree.SemanticNodeList<Vezel.Celerity.Language.Semantics.Tree.AttributeSemantics!, Vezel.Celerity.Language.Syntax.Tree.AttributeSyntax!>
abstract Vezel.Celerity.Language.Semantics.Tree.CodeParameterSemantics.Symbol.get -> Vezel.Celerity.Language.Semantics.Binding.ParameterSymbol?
abstract Vezel.Celerity.Language.Semantics.Tree.DeclarationSemantics.Attributes.get -> Vezel.Celerity.Language.Semantics.Tree.SemanticNodeList<Vezel.Celerity.Language.Semantics.Tree.AttributeSemantics!, Vezel.Celerity.Language.Syntax.Tree.AttributeSyntax!>
abstract Vezel.Celerity.Language.Semantics.Tree.ExpressionArmSemantics.Body.get -> Vezel.Celerity.Language.Semantics.Tree.ExpressionSemantics!
abstract Vezel.Celerity.Language.Semantics.Tree.LoopExpressionSemantics.Branches.get -> System.Collections.Immutable.ImmutableArray<Vezel.Celerity.Language.Semantics.Tree.LoopBranchExpressionSemantics!>
abstract Vezel.Celerity.Language.Semantics.Tree.PatternSemantics.Alias.get -> Vezel.Celerity.Language.Semantics.Tree.VariableBindingSemantics?
abstract Vezel.Celerity.Language.Semantics.Tree.PostfixExpressionSemantics.Subject.get -> Vezel.Celerity.Language.Semantics.Tree.ExpressionSemantics!
abstract Vezel.Celerity.Language.Semantics.Tree.SemanticNode.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Semantics.Tree.SemanticNode!>!
abstract Vezel.Celerity.Language.Semantics.Tree.SemanticNode.HasChildren.get -> bool
abstract Vezel.Celerity.Language.Semantics.Tree.StatementSemantics.Attributes.get -> Vezel.Celerity.Language.Semantics.Tree.SemanticNodeList<Vezel.Celerity.Language.Semantics.Tree.AttributeSemantics!, Vezel.Celerity.Language.Syntax.Tree.AttributeSyntax!>
abstract Vezel.Celerity.Language.Syntax.Tree.AggregateExpressionSyntax.CloseBraceToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
abstract Vezel.Celerity.Language.Syntax.Tree.AggregateExpressionSyntax.Fields.get -> Vezel.Celerity.Language.Syntax.Tree.SeparatedSyntaxItemList<Vezel.Celerity.Language.Syntax.Tree.AggregateExpressionFieldSyntax!>
abstract Vezel.Celerity.Language.Syntax.Tree.AggregateExpressionSyntax.OpenBraceToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
abstract Vezel.Celerity.Language.Syntax.Tree.AggregateExpressionSyntax.With.get -> Vezel.Celerity.Language.Syntax.Tree.AggregateExpressionWithSyntax?
abstract Vezel.Celerity.Language.Syntax.Tree.AggregatePatternSyntax.CloseBraceToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
abstract Vezel.Celerity.Language.Syntax.Tree.AggregatePatternSyntax.Fields.get -> Vezel.Celerity.Language.Syntax.Tree.SeparatedSyntaxItemList<Vezel.Celerity.Language.Syntax.Tree.AggregatePatternFieldSyntax!>
abstract Vezel.Celerity.Language.Syntax.Tree.AggregatePatternSyntax.OpenBraceToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
abstract Vezel.Celerity.Language.Syntax.Tree.AggregateTypeSyntax.CloseBraceToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
abstract Vezel.Celerity.Language.Syntax.Tree.AggregateTypeSyntax.Fields.get -> Vezel.Celerity.Language.Syntax.Tree.SeparatedSyntaxItemList<Vezel.Celerity.Language.Syntax.Tree.AggregateTypeFieldSyntax!>
abstract Vezel.Celerity.Language.Syntax.Tree.AggregateTypeSyntax.OpenBraceToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
abstract Vezel.Celerity.Language.Syntax.Tree.BindingSyntax.NameToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
abstract Vezel.Celerity.Language.Syntax.Tree.CodeDeclarationSyntax.Body.get -> Vezel.Celerity.Language.Syntax.Tree.ExpressionSyntax?
abstract Vezel.Celerity.Language.Syntax.Tree.CodeDeclarationSyntax.NameToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
abstract Vezel.Celerity.Language.Syntax.Tree.CodeParameterSyntax.Attributes.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxItemList<Vezel.Celerity.Language.Syntax.Tree.AttributeSyntax!>
abstract Vezel.Celerity.Language.Syntax.Tree.CodeParameterSyntax.NameToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
abstract Vezel.Celerity.Language.Syntax.Tree.DeclarationSyntax.Attributes.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxItemList<Vezel.Celerity.Language.Syntax.Tree.AttributeSyntax!>
abstract Vezel.Celerity.Language.Syntax.Tree.DocumentSyntax.EndOfInputToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
abstract Vezel.Celerity.Language.Syntax.Tree.ExpressionArmSyntax.ArrowToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
abstract Vezel.Celerity.Language.Syntax.Tree.ExpressionArmSyntax.Body.get -> Vezel.Celerity.Language.Syntax.Tree.ExpressionSyntax!
abstract Vezel.Celerity.Language.Syntax.Tree.PatternSyntax.Alias.get -> Vezel.Celerity.Language.Syntax.Tree.PatternAliasSyntax?
abstract Vezel.Celerity.Language.Syntax.Tree.PostfixExpressionSyntax.Subject.get -> Vezel.Celerity.Language.Syntax.Tree.ExpressionSyntax!
abstract Vezel.Celerity.Language.Syntax.Tree.StatementSyntax.Attributes.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxItemList<Vezel.Celerity.Language.Syntax.Tree.AttributeSyntax!>
abstract Vezel.Celerity.Language.Syntax.Tree.StatementSyntax.SemicolonToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken?
abstract Vezel.Celerity.Language.Syntax.Tree.SyntaxItem.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxItem!>!
abstract Vezel.Celerity.Language.Syntax.Tree.SyntaxItem.Descendants() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxItem!>!
abstract Vezel.Celerity.Language.Syntax.Tree.SyntaxItem.FullSpan.get -> Vezel.Celerity.Language.Text.SourceTextSpan
abstract Vezel.Celerity.Language.Syntax.Tree.SyntaxItem.HasChildren.get -> bool
abstract Vezel.Celerity.Language.Syntax.Tree.SyntaxItem.Span.get -> Vezel.Celerity.Language.Text.SourceTextSpan
abstract Vezel.Celerity.Language.Syntax.Tree.SyntaxNode.ChildNodes() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!>!
abstract Vezel.Celerity.Language.Syntax.Tree.SyntaxNode.ChildTokens() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!>!
abstract Vezel.Celerity.Language.Syntax.Tree.SyntaxNode.HasNodes.get -> bool
abstract Vezel.Celerity.Language.Syntax.Tree.SyntaxNode.HasTokens.get -> bool
abstract Vezel.Celerity.Language.Text.SourceText.Count.get -> int
abstract Vezel.Celerity.Language.Text.SourceText.GetEnumerator() -> System.Collections.Generic.IEnumerator<char>!
abstract Vezel.Celerity.Language.Text.SourceText.this[int index].get -> char
abstract Vezel.Celerity.Language.Text.SourceText.ToString(Vezel.Celerity.Language.Text.SourceTextSpan span) -> string!
override abstract Vezel.Celerity.Language.Syntax.Tree.SyntaxTerminal.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxTerminal!>!
override abstract Vezel.Celerity.Language.Syntax.Tree.SyntaxTerminal.Descendants() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxTerminal!>!
override sealed Vezel.Celerity.Language.Semantics.Binding.LocalSymbol.Assignments.get -> System.Collections.Immutable.ImmutableArray<Vezel.Celerity.Language.Semantics.Tree.AssignmentExpressionSemantics!>
override sealed Vezel.Celerity.Language.Semantics.Binding.LocalSymbol.Bindings.get -> System.Collections.Immutable.ImmutableArray<Vezel.Celerity.Language.Semantics.Tree.SemanticNode!>
override sealed Vezel.Celerity.Language.Semantics.Binding.LocalSymbol.GetSpans() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Text.SourceTextSpan>!
override sealed Vezel.Celerity.Language.Semantics.Binding.LocalSymbol.Name.get -> string!
override sealed Vezel.Celerity.Language.Semantics.Binding.LocalSymbol.References.get -> System.Collections.Immutable.ImmutableArray<Vezel.Celerity.Language.Semantics.Tree.IdentifierExpressionSemantics!>
override sealed Vezel.Celerity.Language.Semantics.Binding.Symbol.ToString() -> string!
override sealed Vezel.Celerity.Language.Semantics.Tree.SemanticNode.ToString() -> string!
override sealed Vezel.Celerity.Language.Syntax.Tree.SyntaxNode.Descendants() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxItem!>!
override sealed Vezel.Celerity.Language.Syntax.Tree.SyntaxNode.FullSpan.get -> Vezel.Celerity.Language.Text.SourceTextSpan
override sealed Vezel.Celerity.Language.Syntax.Tree.SyntaxNode.HasChildren.get -> bool
override sealed Vezel.Celerity.Language.Syntax.Tree.SyntaxNode.Span.get -> Vezel.Celerity.Language.Text.SourceTextSpan
override sealed Vezel.Celerity.Language.Syntax.Tree.SyntaxNode.ToFullString() -> string!
override sealed Vezel.Celerity.Language.Syntax.Tree.SyntaxNode.ToString() -> string!
override sealed Vezel.Celerity.Language.Syntax.Tree.SyntaxTerminal.ToString() -> string!
override sealed Vezel.Celerity.Language.Text.SourceText.ToString() -> string!
override Vezel.Celerity.Language.Diagnostics.Diagnostic.ToString() -> string!
override Vezel.Celerity.Language.Diagnostics.DiagnosticCode.Equals(object? obj) -> bool
override Vezel.Celerity.Language.Diagnostics.DiagnosticCode.GetHashCode() -> int
override Vezel.Celerity.Language.Diagnostics.DiagnosticCode.ToString() -> string!
override Vezel.Celerity.Language.Diagnostics.DiagnosticNote.ToString() -> string!
override Vezel.Celerity.Language.ModulePath.Equals(object? obj) -> bool
override Vezel.Celerity.Language.ModulePath.GetHashCode() -> int
override Vezel.Celerity.Language.ModulePath.ToString() -> string!
override Vezel.Celerity.Language.Nil.Equals(object? obj) -> bool
override Vezel.Celerity.Language.Nil.GetHashCode() -> int
override Vezel.Celerity.Language.Nil.ToString() -> string!
override Vezel.Celerity.Language.Semantics.Binding.DeclarationSymbol.IsDiscard.get -> bool
override Vezel.Celerity.Language.Semantics.Binding.DeclarationSymbol.IsMutable.get -> bool
override Vezel.Celerity.Language.Semantics.Binding.InteractiveSymbol.IsDiscard.get -> bool
override Vezel.Celerity.Language.Semantics.Binding.InteractiveSymbol.IsMutable.get -> bool
override Vezel.Celerity.Language.Semantics.Binding.ParameterSymbol.IsDiscard.get -> bool
override Vezel.Celerity.Language.Semantics.Binding.ParameterSymbol.IsMutable.get -> bool
override Vezel.Celerity.Language.Semantics.Binding.UpvalueSymbol.Assignments.get -> System.Collections.Immutable.ImmutableArray<Vezel.Celerity.Language.Semantics.Tree.AssignmentExpressionSemantics!>
override Vezel.Celerity.Language.Semantics.Binding.UpvalueSymbol.Bindings.get -> System.Collections.Immutable.ImmutableArray<Vezel.Celerity.Language.Semantics.Tree.SemanticNode!>
override Vezel.Celerity.Language.Semantics.Binding.UpvalueSymbol.GetSpans() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Text.SourceTextSpan>!
override Vezel.Celerity.Language.Semantics.Binding.UpvalueSymbol.IsDiscard.get -> bool
override Vezel.Celerity.Language.Semantics.Binding.UpvalueSymbol.IsMutable.get -> bool
override Vezel.Celerity.Language.Semantics.Binding.UpvalueSymbol.Name.get -> string!
override Vezel.Celerity.Language.Semantics.Binding.UpvalueSymbol.References.get -> System.Collections.Immutable.ImmutableArray<Vezel.Celerity.Language.Semantics.Tree.IdentifierExpressionSemantics!>
override Vezel.Celerity.Language.Semantics.Binding.VariableSymbol.IsDiscard.get -> bool
override Vezel.Celerity.Language.Semantics.Binding.VariableSymbol.IsMutable.get -> bool
override Vezel.Celerity.Language.Semantics.Tree.AdditiveExpressionSemantics.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Semantics.Tree.SemanticNode!>!
override Vezel.Celerity.Language.Semantics.Tree.AdditiveExpressionSemantics.HasChildren.get -> bool
override Vezel.Celerity.Language.Semantics.Tree.AggregateExpressionFieldSemantics.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Semantics.Tree.SemanticNode!>!
override Vezel.Celerity.Language.Semantics.Tree.AggregateExpressionFieldSemantics.HasChildren.get -> bool
override Vezel.Celerity.Language.Semantics.Tree.AggregatePatternFieldSemantics.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Semantics.Tree.SemanticNode!>!
override Vezel.Celerity.Language.Semantics.Tree.AggregatePatternFieldSemantics.HasChildren.get -> bool
override Vezel.Celerity.Language.Semantics.Tree.ArrayExpressionSemantics.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Semantics.Tree.SemanticNode!>!
override Vezel.Celerity.Language.Semantics.Tree.ArrayExpressionSemantics.HasChildren.get -> bool
override Vezel.Celerity.Language.Semantics.Tree.ArrayPatternSemantics.Alias.get -> Vezel.Celerity.Language.Semantics.Tree.VariableBindingSemantics?
override Vezel.Celerity.Language.Semantics.Tree.ArrayPatternSemantics.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Semantics.Tree.SemanticNode!>!
override Vezel.Celerity.Language.Semantics.Tree.ArrayPatternSemantics.HasChildren.get -> bool
override Vezel.Celerity.Language.Semantics.Tree.AssertExpressionSemantics.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Semantics.Tree.SemanticNode!>!
override Vezel.Celerity.Language.Semantics.Tree.AssertExpressionSemantics.HasChildren.get -> bool
override Vezel.Celerity.Language.Semantics.Tree.AssignmentExpressionSemantics.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Semantics.Tree.SemanticNode!>!
override Vezel.Celerity.Language.Semantics.Tree.AssignmentExpressionSemantics.HasChildren.get -> bool
override Vezel.Celerity.Language.Semantics.Tree.AttributeSemantics.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Semantics.Tree.SemanticNode!>!
override Vezel.Celerity.Language.Semantics.Tree.AttributeSemantics.HasChildren.get -> bool
override Vezel.Celerity.Language.Semantics.Tree.BitwiseExpressionSemantics.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Semantics.Tree.SemanticNode!>!
override Vezel.Celerity.Language.Semantics.Tree.BitwiseExpressionSemantics.HasChildren.get -> bool
override Vezel.Celerity.Language.Semantics.Tree.BlockExpressionSemantics.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Semantics.Tree.SemanticNode!>!
override Vezel.Celerity.Language.Semantics.Tree.BlockExpressionSemantics.HasChildren.get -> bool
override Vezel.Celerity.Language.Semantics.Tree.BreakExpressionSemantics.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Semantics.Tree.SemanticNode!>!
override Vezel.Celerity.Language.Semantics.Tree.BreakExpressionSemantics.Defers.get -> System.Collections.Immutable.ImmutableArray<Vezel.Celerity.Language.Semantics.Tree.DeferStatementSemantics!>
override Vezel.Celerity.Language.Semantics.Tree.BreakExpressionSemantics.HasChildren.get -> bool
override Vezel.Celerity.Language.Semantics.Tree.CallExpressionSemantics.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Semantics.Tree.SemanticNode!>!
override Vezel.Celerity.Language.Semantics.Tree.CallExpressionSemantics.HasChildren.get -> bool
override Vezel.Celerity.Language.Semantics.Tree.CallExpressionSemantics.Subject.get -> Vezel.Celerity.Language.Semantics.Tree.ExpressionSemantics!
override Vezel.Celerity.Language.Semantics.Tree.ConditionExpressionArmSemantics.Body.get -> Vezel.Celerity.Language.Semantics.Tree.ExpressionSemantics!
override Vezel.Celerity.Language.Semantics.Tree.ConditionExpressionArmSemantics.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Semantics.Tree.SemanticNode!>!
override Vezel.Celerity.Language.Semantics.Tree.ConditionExpressionArmSemantics.HasChildren.get -> bool
override Vezel.Celerity.Language.Semantics.Tree.ConditionExpressionSemantics.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Semantics.Tree.SemanticNode!>!
override Vezel.Celerity.Language.Semantics.Tree.ConditionExpressionSemantics.HasChildren.get -> bool
override Vezel.Celerity.Language.Semantics.Tree.ConstantDeclarationSemantics.Attributes.get -> Vezel.Celerity.Language.Semantics.Tree.SemanticNodeList<Vezel.Celerity.Language.Semantics.Tree.AttributeSemantics!, Vezel.Celerity.Language.Syntax.Tree.AttributeSyntax!>
override Vezel.Celerity.Language.Semantics.Tree.ConstantDeclarationSemantics.Body.get -> Vezel.Celerity.Language.Semantics.Tree.ExpressionSemantics!
override Vezel.Celerity.Language.Semantics.Tree.ConstantDeclarationSemantics.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Semantics.Tree.SemanticNode!>!
override Vezel.Celerity.Language.Semantics.Tree.ConstantDeclarationSemantics.HasChildren.get -> bool
override Vezel.Celerity.Language.Semantics.Tree.ConstantDeclarationSemantics.Symbol.get -> Vezel.Celerity.Language.Semantics.Binding.DeclarationSymbol?
override Vezel.Celerity.Language.Semantics.Tree.DeclarationSubmissionSemantics.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Semantics.Tree.SemanticNode!>!
override Vezel.Celerity.Language.Semantics.Tree.DeclarationSubmissionSemantics.HasChildren.get -> bool
override Vezel.Celerity.Language.Semantics.Tree.DeferStatementSemantics.Attributes.get -> Vezel.Celerity.Language.Semantics.Tree.SemanticNodeList<Vezel.Celerity.Language.Semantics.Tree.AttributeSemantics!, Vezel.Celerity.Language.Syntax.Tree.AttributeSyntax!>
override Vezel.Celerity.Language.Semantics.Tree.DeferStatementSemantics.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Semantics.Tree.SemanticNode!>!
override Vezel.Celerity.Language.Semantics.Tree.DeferStatementSemantics.HasChildren.get -> bool
override Vezel.Celerity.Language.Semantics.Tree.DiscardBindingSemantics.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Semantics.Tree.SemanticNode!>!
override Vezel.Celerity.Language.Semantics.Tree.DiscardBindingSemantics.HasChildren.get -> bool
override Vezel.Celerity.Language.Semantics.Tree.DiscardBindingSemantics.Symbol.get -> Vezel.Celerity.Language.Semantics.Binding.VariableSymbol?
override Vezel.Celerity.Language.Semantics.Tree.ErrorExpressionSemantics.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Semantics.Tree.SemanticNode!>!
override Vezel.Celerity.Language.Semantics.Tree.ErrorExpressionSemantics.Fields.get -> Vezel.Celerity.Language.Semantics.Tree.SeparatedSemanticNodeList<Vezel.Celerity.Language.Semantics.Tree.AggregateExpressionFieldSemantics!, Vezel.Celerity.Language.Syntax.Tree.AggregateExpressionFieldSyntax!>
override Vezel.Celerity.Language.Semantics.Tree.ErrorExpressionSemantics.HasChildren.get -> bool
override Vezel.Celerity.Language.Semantics.Tree.ErrorExpressionSemantics.With.get -> Vezel.Celerity.Language.Semantics.Tree.ExpressionSemantics?
override Vezel.Celerity.Language.Semantics.Tree.ErrorPatternSemantics.Alias.get -> Vezel.Celerity.Language.Semantics.Tree.VariableBindingSemantics?
override Vezel.Celerity.Language.Semantics.Tree.ErrorPatternSemantics.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Semantics.Tree.SemanticNode!>!
override Vezel.Celerity.Language.Semantics.Tree.ErrorPatternSemantics.Fields.get -> Vezel.Celerity.Language.Semantics.Tree.SeparatedSemanticNodeList<Vezel.Celerity.Language.Semantics.Tree.AggregatePatternFieldSemantics!, Vezel.Celerity.Language.Syntax.Tree.AggregatePatternFieldSyntax!>
override Vezel.Celerity.Language.Semantics.Tree.ErrorPatternSemantics.HasChildren.get -> bool
override Vezel.Celerity.Language.Semantics.Tree.ExpressionPatternArmSemantics.Body.get -> Vezel.Celerity.Language.Semantics.Tree.ExpressionSemantics!
override Vezel.Celerity.Language.Semantics.Tree.ExpressionPatternArmSemantics.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Semantics.Tree.SemanticNode!>!
override Vezel.Celerity.Language.Semantics.Tree.ExpressionPatternArmSemantics.HasChildren.get -> bool
override Vezel.Celerity.Language.Semantics.Tree.ExpressionStatementSemantics.Attributes.get -> Vezel.Celerity.Language.Semantics.Tree.SemanticNodeList<Vezel.Celerity.Language.Semantics.Tree.AttributeSemantics!, Vezel.Celerity.Language.Syntax.Tree.AttributeSyntax!>
override Vezel.Celerity.Language.Semantics.Tree.ExpressionStatementSemantics.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Semantics.Tree.SemanticNode!>!
override Vezel.Celerity.Language.Semantics.Tree.ExpressionStatementSemantics.HasChildren.get -> bool
override Vezel.Celerity.Language.Semantics.Tree.FieldExpressionSemantics.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Semantics.Tree.SemanticNode!>!
override Vezel.Celerity.Language.Semantics.Tree.FieldExpressionSemantics.HasChildren.get -> bool
override Vezel.Celerity.Language.Semantics.Tree.FieldExpressionSemantics.Subject.get -> Vezel.Celerity.Language.Semantics.Tree.ExpressionSemantics!
override Vezel.Celerity.Language.Semantics.Tree.ForExpressionSemantics.Branches.get -> System.Collections.Immutable.ImmutableArray<Vezel.Celerity.Language.Semantics.Tree.LoopBranchExpressionSemantics!>
override Vezel.Celerity.Language.Semantics.Tree.ForExpressionSemantics.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Semantics.Tree.SemanticNode!>!
override Vezel.Celerity.Language.Semantics.Tree.ForExpressionSemantics.HasChildren.get -> bool
override Vezel.Celerity.Language.Semantics.Tree.FunctionDeclarationSemantics.Attributes.get -> Vezel.Celerity.Language.Semantics.Tree.SemanticNodeList<Vezel.Celerity.Language.Semantics.Tree.AttributeSemantics!, Vezel.Celerity.Language.Syntax.Tree.AttributeSyntax!>
override Vezel.Celerity.Language.Semantics.Tree.FunctionDeclarationSemantics.Body.get -> Vezel.Celerity.Language.Semantics.Tree.BlockExpressionSemantics?
override Vezel.Celerity.Language.Semantics.Tree.FunctionDeclarationSemantics.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Semantics.Tree.SemanticNode!>!
override Vezel.Celerity.Language.Semantics.Tree.FunctionDeclarationSemantics.HasChildren.get -> bool
override Vezel.Celerity.Language.Semantics.Tree.FunctionDeclarationSemantics.Symbol.get -> Vezel.Celerity.Language.Semantics.Binding.DeclarationSymbol?
override Vezel.Celerity.Language.Semantics.Tree.FunctionParameterSemantics.Attributes.get -> Vezel.Celerity.Language.Semantics.Tree.SemanticNodeList<Vezel.Celerity.Language.Semantics.Tree.AttributeSemantics!, Vezel.Celerity.Language.Syntax.Tree.AttributeSyntax!>
override Vezel.Celerity.Language.Semantics.Tree.FunctionParameterSemantics.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Semantics.Tree.SemanticNode!>!
override Vezel.Celerity.Language.Semantics.Tree.FunctionParameterSemantics.HasChildren.get -> bool
override Vezel.Celerity.Language.Semantics.Tree.FunctionParameterSemantics.Symbol.get -> Vezel.Celerity.Language.Semantics.Binding.ParameterSymbol?
override Vezel.Celerity.Language.Semantics.Tree.IdentifierExpressionSemantics.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Semantics.Tree.SemanticNode!>!
override Vezel.Celerity.Language.Semantics.Tree.IdentifierExpressionSemantics.HasChildren.get -> bool
override Vezel.Celerity.Language.Semantics.Tree.IfExpressionSemantics.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Semantics.Tree.SemanticNode!>!
override Vezel.Celerity.Language.Semantics.Tree.IfExpressionSemantics.HasChildren.get -> bool
override Vezel.Celerity.Language.Semantics.Tree.IndexExpressionSemantics.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Semantics.Tree.SemanticNode!>!
override Vezel.Celerity.Language.Semantics.Tree.IndexExpressionSemantics.HasChildren.get -> bool
override Vezel.Celerity.Language.Semantics.Tree.IndexExpressionSemantics.Subject.get -> Vezel.Celerity.Language.Semantics.Tree.ExpressionSemantics!
override Vezel.Celerity.Language.Semantics.Tree.InteractiveDocumentSemantics.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Semantics.Tree.SemanticNode!>!
override Vezel.Celerity.Language.Semantics.Tree.InteractiveDocumentSemantics.HasChildren.get -> bool
override Vezel.Celerity.Language.Semantics.Tree.LambdaExpressionSemantics.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Semantics.Tree.SemanticNode!>!
override Vezel.Celerity.Language.Semantics.Tree.LambdaExpressionSemantics.HasChildren.get -> bool
override Vezel.Celerity.Language.Semantics.Tree.LambdaParameterSemantics.Attributes.get -> Vezel.Celerity.Language.Semantics.Tree.SemanticNodeList<Vezel.Celerity.Language.Semantics.Tree.AttributeSemantics!, Vezel.Celerity.Language.Syntax.Tree.AttributeSyntax!>
override Vezel.Celerity.Language.Semantics.Tree.LambdaParameterSemantics.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Semantics.Tree.SemanticNode!>!
override Vezel.Celerity.Language.Semantics.Tree.LambdaParameterSemantics.HasChildren.get -> bool
override Vezel.Celerity.Language.Semantics.Tree.LambdaParameterSemantics.Symbol.get -> Vezel.Celerity.Language.Semantics.Binding.ParameterSymbol?
override Vezel.Celerity.Language.Semantics.Tree.LetStatementSemantics.Attributes.get -> Vezel.Celerity.Language.Semantics.Tree.SemanticNodeList<Vezel.Celerity.Language.Semantics.Tree.AttributeSemantics!, Vezel.Celerity.Language.Syntax.Tree.AttributeSyntax!>
override Vezel.Celerity.Language.Semantics.Tree.LetStatementSemantics.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Semantics.Tree.SemanticNode!>!
override Vezel.Celerity.Language.Semantics.Tree.LetStatementSemantics.HasChildren.get -> bool
override Vezel.Celerity.Language.Semantics.Tree.LiteralExpressionSemantics.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Semantics.Tree.SemanticNode!>!
override Vezel.Celerity.Language.Semantics.Tree.LiteralExpressionSemantics.HasChildren.get -> bool
override Vezel.Celerity.Language.Semantics.Tree.LiteralPatternSemantics.Alias.get -> Vezel.Celerity.Language.Semantics.Tree.VariableBindingSemantics?
override Vezel.Celerity.Language.Semantics.Tree.LiteralPatternSemantics.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Semantics.Tree.SemanticNode!>!
override Vezel.Celerity.Language.Semantics.Tree.LiteralPatternSemantics.HasChildren.get -> bool
override Vezel.Celerity.Language.Semantics.Tree.LogicalExpressionSemantics.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Semantics.Tree.SemanticNode!>!
override Vezel.Celerity.Language.Semantics.Tree.LogicalExpressionSemantics.HasChildren.get -> bool
override Vezel.Celerity.Language.Semantics.Tree.MapExpressionPairSemantics.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Semantics.Tree.SemanticNode!>!
override Vezel.Celerity.Language.Semantics.Tree.MapExpressionPairSemantics.HasChildren.get -> bool
override Vezel.Celerity.Language.Semantics.Tree.MapExpressionSemantics.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Semantics.Tree.SemanticNode!>!
override Vezel.Celerity.Language.Semantics.Tree.MapExpressionSemantics.HasChildren.get -> bool
override Vezel.Celerity.Language.Semantics.Tree.MapPatternPairSemantics.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Semantics.Tree.SemanticNode!>!
override Vezel.Celerity.Language.Semantics.Tree.MapPatternPairSemantics.HasChildren.get -> bool
override Vezel.Celerity.Language.Semantics.Tree.MapPatternSemantics.Alias.get -> Vezel.Celerity.Language.Semantics.Tree.VariableBindingSemantics?
override Vezel.Celerity.Language.Semantics.Tree.MapPatternSemantics.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Semantics.Tree.SemanticNode!>!
override Vezel.Celerity.Language.Semantics.Tree.MapPatternSemantics.HasChildren.get -> bool
override Vezel.Celerity.Language.Semantics.Tree.MatchExpressionSemantics.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Semantics.Tree.SemanticNode!>!
override Vezel.Celerity.Language.Semantics.Tree.MatchExpressionSemantics.HasChildren.get -> bool
override Vezel.Celerity.Language.Semantics.Tree.MetaExpressionSemantics.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Semantics.Tree.SemanticNode!>!
override Vezel.Celerity.Language.Semantics.Tree.MetaExpressionSemantics.HasChildren.get -> bool
override Vezel.Celerity.Language.Semantics.Tree.ModuleDocumentSemantics.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Semantics.Tree.SemanticNode!>!
override Vezel.Celerity.Language.Semantics.Tree.ModuleDocumentSemantics.HasChildren.get -> bool
override Vezel.Celerity.Language.Semantics.Tree.ModuleExpressionSemantics.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Semantics.Tree.SemanticNode!>!
override Vezel.Celerity.Language.Semantics.Tree.ModuleExpressionSemantics.HasChildren.get -> bool
override Vezel.Celerity.Language.Semantics.Tree.ModulePatternSemantics.Alias.get -> Vezel.Celerity.Language.Semantics.Tree.VariableBindingSemantics?
override Vezel.Celerity.Language.Semantics.Tree.ModulePatternSemantics.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Semantics.Tree.SemanticNode!>!
override Vezel.Celerity.Language.Semantics.Tree.ModulePatternSemantics.Fields.get -> Vezel.Celerity.Language.Semantics.Tree.SeparatedSemanticNodeList<Vezel.Celerity.Language.Semantics.Tree.AggregatePatternFieldSemantics!, Vezel.Celerity.Language.Syntax.Tree.AggregatePatternFieldSyntax!>
override Vezel.Celerity.Language.Semantics.Tree.ModulePatternSemantics.HasChildren.get -> bool
override Vezel.Celerity.Language.Semantics.Tree.MultiplicativeExpressionSemantics.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Semantics.Tree.SemanticNode!>!
override Vezel.Celerity.Language.Semantics.Tree.MultiplicativeExpressionSemantics.HasChildren.get -> bool
override Vezel.Celerity.Language.Semantics.Tree.NextExpressionSemantics.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Semantics.Tree.SemanticNode!>!
override Vezel.Celerity.Language.Semantics.Tree.NextExpressionSemantics.Defers.get -> System.Collections.Immutable.ImmutableArray<Vezel.Celerity.Language.Semantics.Tree.DeferStatementSemantics!>
override Vezel.Celerity.Language.Semantics.Tree.NextExpressionSemantics.HasChildren.get -> bool
override Vezel.Celerity.Language.Semantics.Tree.ParenthesizedExpressionSemantics.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Semantics.Tree.SemanticNode!>!
override Vezel.Celerity.Language.Semantics.Tree.ParenthesizedExpressionSemantics.HasChildren.get -> bool
override Vezel.Celerity.Language.Semantics.Tree.RaiseExpressionSemantics.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Semantics.Tree.SemanticNode!>!
override Vezel.Celerity.Language.Semantics.Tree.RaiseExpressionSemantics.Defers.get -> System.Collections.Immutable.ImmutableArray<Vezel.Celerity.Language.Semantics.Tree.DeferStatementSemantics!>
override Vezel.Celerity.Language.Semantics.Tree.RaiseExpressionSemantics.HasChildren.get -> bool
override Vezel.Celerity.Language.Semantics.Tree.ReceiveExpressionArmSemantics.Body.get -> Vezel.Celerity.Language.Semantics.Tree.ExpressionSemantics!
override Vezel.Celerity.Language.Semantics.Tree.ReceiveExpressionArmSemantics.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Semantics.Tree.SemanticNode!>!
override Vezel.Celerity.Language.Semantics.Tree.ReceiveExpressionArmSemantics.HasChildren.get -> bool
override Vezel.Celerity.Language.Semantics.Tree.ReceiveExpressionSemantics.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Semantics.Tree.SemanticNode!>!
override Vezel.Celerity.Language.Semantics.Tree.ReceiveExpressionSemantics.HasChildren.get -> bool
override Vezel.Celerity.Language.Semantics.Tree.ReceiveParameterSemantics.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Semantics.Tree.SemanticNode!>!
override Vezel.Celerity.Language.Semantics.Tree.ReceiveParameterSemantics.HasChildren.get -> bool
override Vezel.Celerity.Language.Semantics.Tree.RecordExpressionSemantics.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Semantics.Tree.SemanticNode!>!
override Vezel.Celerity.Language.Semantics.Tree.RecordExpressionSemantics.Fields.get -> Vezel.Celerity.Language.Semantics.Tree.SeparatedSemanticNodeList<Vezel.Celerity.Language.Semantics.Tree.AggregateExpressionFieldSemantics!, Vezel.Celerity.Language.Syntax.Tree.AggregateExpressionFieldSyntax!>
override Vezel.Celerity.Language.Semantics.Tree.RecordExpressionSemantics.HasChildren.get -> bool
override Vezel.Celerity.Language.Semantics.Tree.RecordExpressionSemantics.With.get -> Vezel.Celerity.Language.Semantics.Tree.ExpressionSemantics?
override Vezel.Celerity.Language.Semantics.Tree.RecordPatternSemantics.Alias.get -> Vezel.Celerity.Language.Semantics.Tree.VariableBindingSemantics?
override Vezel.Celerity.Language.Semantics.Tree.RecordPatternSemantics.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Semantics.Tree.SemanticNode!>!
override Vezel.Celerity.Language.Semantics.Tree.RecordPatternSemantics.Fields.get -> Vezel.Celerity.Language.Semantics.Tree.SeparatedSemanticNodeList<Vezel.Celerity.Language.Semantics.Tree.AggregatePatternFieldSemantics!, Vezel.Celerity.Language.Syntax.Tree.AggregatePatternFieldSyntax!>
override Vezel.Celerity.Language.Semantics.Tree.RecordPatternSemantics.HasChildren.get -> bool
override Vezel.Celerity.Language.Semantics.Tree.RelationalExpressionSemantics.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Semantics.Tree.SemanticNode!>!
override Vezel.Celerity.Language.Semantics.Tree.RelationalExpressionSemantics.HasChildren.get -> bool
override Vezel.Celerity.Language.Semantics.Tree.ReturnExpressionSemantics.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Semantics.Tree.SemanticNode!>!
override Vezel.Celerity.Language.Semantics.Tree.ReturnExpressionSemantics.Defers.get -> System.Collections.Immutable.ImmutableArray<Vezel.Celerity.Language.Semantics.Tree.DeferStatementSemantics!>
override Vezel.Celerity.Language.Semantics.Tree.ReturnExpressionSemantics.HasChildren.get -> bool
override Vezel.Celerity.Language.Semantics.Tree.SemanticNodeList<TSemantics, TSyntax>.ToString() -> string!
override Vezel.Celerity.Language.Semantics.Tree.SendExpressionSemantics.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Semantics.Tree.SemanticNode!>!
override Vezel.Celerity.Language.Semantics.Tree.SendExpressionSemantics.HasChildren.get -> bool
override Vezel.Celerity.Language.Semantics.Tree.SendExpressionSemantics.Subject.get -> Vezel.Celerity.Language.Semantics.Tree.ExpressionSemantics!
override Vezel.Celerity.Language.Semantics.Tree.SeparatedSemanticNodeList<TSemantics, TSyntax>.ToString() -> string!
override Vezel.Celerity.Language.Semantics.Tree.SetExpressionSemantics.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Semantics.Tree.SemanticNode!>!
override Vezel.Celerity.Language.Semantics.Tree.SetExpressionSemantics.HasChildren.get -> bool
override Vezel.Celerity.Language.Semantics.Tree.SetPatternSemantics.Alias.get -> Vezel.Celerity.Language.Semantics.Tree.VariableBindingSemantics?
override Vezel.Celerity.Language.Semantics.Tree.SetPatternSemantics.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Semantics.Tree.SemanticNode!>!
override Vezel.Celerity.Language.Semantics.Tree.SetPatternSemantics.HasChildren.get -> bool
override Vezel.Celerity.Language.Semantics.Tree.ShiftExpressionSemantics.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Semantics.Tree.SemanticNode!>!
override Vezel.Celerity.Language.Semantics.Tree.ShiftExpressionSemantics.HasChildren.get -> bool
override Vezel.Celerity.Language.Semantics.Tree.StatementSubmissionSemantics.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Semantics.Tree.SemanticNode!>!
override Vezel.Celerity.Language.Semantics.Tree.StatementSubmissionSemantics.HasChildren.get -> bool
override Vezel.Celerity.Language.Semantics.Tree.StringPatternSemantics.Alias.get -> Vezel.Celerity.Language.Semantics.Tree.VariableBindingSemantics?
override Vezel.Celerity.Language.Semantics.Tree.StringPatternSemantics.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Semantics.Tree.SemanticNode!>!
override Vezel.Celerity.Language.Semantics.Tree.StringPatternSemantics.HasChildren.get -> bool
override Vezel.Celerity.Language.Semantics.Tree.TestDeclarationSemantics.Attributes.get -> Vezel.Celerity.Language.Semantics.Tree.SemanticNodeList<Vezel.Celerity.Language.Semantics.Tree.AttributeSemantics!, Vezel.Celerity.Language.Syntax.Tree.AttributeSyntax!>
override Vezel.Celerity.Language.Semantics.Tree.TestDeclarationSemantics.Body.get -> Vezel.Celerity.Language.Semantics.Tree.BlockExpressionSemantics!
override Vezel.Celerity.Language.Semantics.Tree.TestDeclarationSemantics.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Semantics.Tree.SemanticNode!>!
override Vezel.Celerity.Language.Semantics.Tree.TestDeclarationSemantics.HasChildren.get -> bool
override Vezel.Celerity.Language.Semantics.Tree.TestDeclarationSemantics.Symbol.get -> Vezel.Celerity.Language.Semantics.Binding.DeclarationSymbol?
override Vezel.Celerity.Language.Semantics.Tree.ThisExpressionSemantics.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Semantics.Tree.SemanticNode!>!
override Vezel.Celerity.Language.Semantics.Tree.ThisExpressionSemantics.HasChildren.get -> bool
override Vezel.Celerity.Language.Semantics.Tree.TryExpressionSemantics.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Semantics.Tree.SemanticNode!>!
override Vezel.Celerity.Language.Semantics.Tree.TryExpressionSemantics.HasChildren.get -> bool
override Vezel.Celerity.Language.Semantics.Tree.TupleExpressionSemantics.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Semantics.Tree.SemanticNode!>!
override Vezel.Celerity.Language.Semantics.Tree.TupleExpressionSemantics.HasChildren.get -> bool
override Vezel.Celerity.Language.Semantics.Tree.TuplePatternSemantics.Alias.get -> Vezel.Celerity.Language.Semantics.Tree.VariableBindingSemantics?
override Vezel.Celerity.Language.Semantics.Tree.TuplePatternSemantics.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Semantics.Tree.SemanticNode!>!
override Vezel.Celerity.Language.Semantics.Tree.TuplePatternSemantics.HasChildren.get -> bool
override Vezel.Celerity.Language.Semantics.Tree.UnaryExpressionSemantics.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Semantics.Tree.SemanticNode!>!
override Vezel.Celerity.Language.Semantics.Tree.UnaryExpressionSemantics.HasChildren.get -> bool
override Vezel.Celerity.Language.Semantics.Tree.UseDeclarationSemantics.Attributes.get -> Vezel.Celerity.Language.Semantics.Tree.SemanticNodeList<Vezel.Celerity.Language.Semantics.Tree.AttributeSemantics!, Vezel.Celerity.Language.Syntax.Tree.AttributeSyntax!>
override Vezel.Celerity.Language.Semantics.Tree.UseDeclarationSemantics.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Semantics.Tree.SemanticNode!>!
override Vezel.Celerity.Language.Semantics.Tree.UseDeclarationSemantics.HasChildren.get -> bool
override Vezel.Celerity.Language.Semantics.Tree.VariableBindingSemantics.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Semantics.Tree.SemanticNode!>!
override Vezel.Celerity.Language.Semantics.Tree.VariableBindingSemantics.HasChildren.get -> bool
override Vezel.Celerity.Language.Semantics.Tree.VariableBindingSemantics.Symbol.get -> Vezel.Celerity.Language.Semantics.Binding.VariableSymbol?
override Vezel.Celerity.Language.Semantics.Tree.WhileExpressionSemantics.Branches.get -> System.Collections.Immutable.ImmutableArray<Vezel.Celerity.Language.Semantics.Tree.LoopBranchExpressionSemantics!>
override Vezel.Celerity.Language.Semantics.Tree.WhileExpressionSemantics.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Semantics.Tree.SemanticNode!>!
override Vezel.Celerity.Language.Semantics.Tree.WhileExpressionSemantics.HasChildren.get -> bool
override Vezel.Celerity.Language.Semantics.Tree.WildcardPatternSemantics.Alias.get -> Vezel.Celerity.Language.Semantics.Tree.VariableBindingSemantics?
override Vezel.Celerity.Language.Semantics.Tree.WildcardPatternSemantics.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Semantics.Tree.SemanticNode!>!
override Vezel.Celerity.Language.Semantics.Tree.WildcardPatternSemantics.HasChildren.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.AdditiveExpressionSyntax.ChildNodes() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!>!
override Vezel.Celerity.Language.Syntax.Tree.AdditiveExpressionSyntax.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxItem!>!
override Vezel.Celerity.Language.Syntax.Tree.AdditiveExpressionSyntax.ChildTokens() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!>!
override Vezel.Celerity.Language.Syntax.Tree.AdditiveExpressionSyntax.HasNodes.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.AdditiveExpressionSyntax.HasTokens.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.AgentTypeMessageParameterListSyntax.ChildNodes() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!>!
override Vezel.Celerity.Language.Syntax.Tree.AgentTypeMessageParameterListSyntax.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxItem!>!
override Vezel.Celerity.Language.Syntax.Tree.AgentTypeMessageParameterListSyntax.ChildTokens() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!>!
override Vezel.Celerity.Language.Syntax.Tree.AgentTypeMessageParameterListSyntax.HasNodes.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.AgentTypeMessageParameterListSyntax.HasTokens.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.AgentTypeMessageParameterSyntax.ChildNodes() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!>!
override Vezel.Celerity.Language.Syntax.Tree.AgentTypeMessageParameterSyntax.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxItem!>!
override Vezel.Celerity.Language.Syntax.Tree.AgentTypeMessageParameterSyntax.ChildTokens() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!>!
override Vezel.Celerity.Language.Syntax.Tree.AgentTypeMessageParameterSyntax.HasNodes.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.AgentTypeMessageParameterSyntax.HasTokens.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.AgentTypeMessageSyntax.ChildNodes() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!>!
override Vezel.Celerity.Language.Syntax.Tree.AgentTypeMessageSyntax.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxItem!>!
override Vezel.Celerity.Language.Syntax.Tree.AgentTypeMessageSyntax.ChildTokens() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!>!
override Vezel.Celerity.Language.Syntax.Tree.AgentTypeMessageSyntax.HasNodes.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.AgentTypeMessageSyntax.HasTokens.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.AgentTypeProtocolSyntax.ChildNodes() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!>!
override Vezel.Celerity.Language.Syntax.Tree.AgentTypeProtocolSyntax.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxItem!>!
override Vezel.Celerity.Language.Syntax.Tree.AgentTypeProtocolSyntax.ChildTokens() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!>!
override Vezel.Celerity.Language.Syntax.Tree.AgentTypeProtocolSyntax.HasNodes.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.AgentTypeProtocolSyntax.HasTokens.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.AgentTypeSyntax.ChildNodes() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!>!
override Vezel.Celerity.Language.Syntax.Tree.AgentTypeSyntax.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxItem!>!
override Vezel.Celerity.Language.Syntax.Tree.AgentTypeSyntax.ChildTokens() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!>!
override Vezel.Celerity.Language.Syntax.Tree.AgentTypeSyntax.HasNodes.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.AgentTypeSyntax.HasTokens.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.AggregateExpressionFieldSyntax.ChildNodes() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!>!
override Vezel.Celerity.Language.Syntax.Tree.AggregateExpressionFieldSyntax.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxItem!>!
override Vezel.Celerity.Language.Syntax.Tree.AggregateExpressionFieldSyntax.ChildTokens() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!>!
override Vezel.Celerity.Language.Syntax.Tree.AggregateExpressionFieldSyntax.HasNodes.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.AggregateExpressionFieldSyntax.HasTokens.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.AggregateExpressionWithSyntax.ChildNodes() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!>!
override Vezel.Celerity.Language.Syntax.Tree.AggregateExpressionWithSyntax.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxItem!>!
override Vezel.Celerity.Language.Syntax.Tree.AggregateExpressionWithSyntax.ChildTokens() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!>!
override Vezel.Celerity.Language.Syntax.Tree.AggregateExpressionWithSyntax.HasNodes.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.AggregateExpressionWithSyntax.HasTokens.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.AggregatePatternFieldSyntax.ChildNodes() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!>!
override Vezel.Celerity.Language.Syntax.Tree.AggregatePatternFieldSyntax.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxItem!>!
override Vezel.Celerity.Language.Syntax.Tree.AggregatePatternFieldSyntax.ChildTokens() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!>!
override Vezel.Celerity.Language.Syntax.Tree.AggregatePatternFieldSyntax.HasNodes.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.AggregatePatternFieldSyntax.HasTokens.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.AggregateTypeFieldSyntax.ChildNodes() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!>!
override Vezel.Celerity.Language.Syntax.Tree.AggregateTypeFieldSyntax.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxItem!>!
override Vezel.Celerity.Language.Syntax.Tree.AggregateTypeFieldSyntax.ChildTokens() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!>!
override Vezel.Celerity.Language.Syntax.Tree.AggregateTypeFieldSyntax.HasNodes.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.AggregateTypeFieldSyntax.HasTokens.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.AnyTypeSyntax.ChildNodes() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!>!
override Vezel.Celerity.Language.Syntax.Tree.AnyTypeSyntax.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxItem!>!
override Vezel.Celerity.Language.Syntax.Tree.AnyTypeSyntax.ChildTokens() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!>!
override Vezel.Celerity.Language.Syntax.Tree.AnyTypeSyntax.HasNodes.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.AnyTypeSyntax.HasTokens.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.ArrayExpressionSyntax.ChildNodes() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!>!
override Vezel.Celerity.Language.Syntax.Tree.ArrayExpressionSyntax.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxItem!>!
override Vezel.Celerity.Language.Syntax.Tree.ArrayExpressionSyntax.ChildTokens() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!>!
override Vezel.Celerity.Language.Syntax.Tree.ArrayExpressionSyntax.HasNodes.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.ArrayExpressionSyntax.HasTokens.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.ArrayPatternSyntax.Alias.get -> Vezel.Celerity.Language.Syntax.Tree.PatternAliasSyntax?
override Vezel.Celerity.Language.Syntax.Tree.ArrayPatternSyntax.ChildNodes() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!>!
override Vezel.Celerity.Language.Syntax.Tree.ArrayPatternSyntax.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxItem!>!
override Vezel.Celerity.Language.Syntax.Tree.ArrayPatternSyntax.ChildTokens() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!>!
override Vezel.Celerity.Language.Syntax.Tree.ArrayPatternSyntax.HasNodes.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.ArrayPatternSyntax.HasTokens.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.ArrayTypeSyntax.ChildNodes() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!>!
override Vezel.Celerity.Language.Syntax.Tree.ArrayTypeSyntax.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxItem!>!
override Vezel.Celerity.Language.Syntax.Tree.ArrayTypeSyntax.ChildTokens() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!>!
override Vezel.Celerity.Language.Syntax.Tree.ArrayTypeSyntax.HasNodes.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.ArrayTypeSyntax.HasTokens.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.AssertExpressionSyntax.ChildNodes() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!>!
override Vezel.Celerity.Language.Syntax.Tree.AssertExpressionSyntax.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxItem!>!
override Vezel.Celerity.Language.Syntax.Tree.AssertExpressionSyntax.ChildTokens() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!>!
override Vezel.Celerity.Language.Syntax.Tree.AssertExpressionSyntax.HasNodes.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.AssertExpressionSyntax.HasTokens.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.AssignmentExpressionSyntax.ChildNodes() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!>!
override Vezel.Celerity.Language.Syntax.Tree.AssignmentExpressionSyntax.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxItem!>!
override Vezel.Celerity.Language.Syntax.Tree.AssignmentExpressionSyntax.ChildTokens() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!>!
override Vezel.Celerity.Language.Syntax.Tree.AssignmentExpressionSyntax.HasNodes.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.AssignmentExpressionSyntax.HasTokens.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.AtomTypeSyntax.ChildNodes() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!>!
override Vezel.Celerity.Language.Syntax.Tree.AtomTypeSyntax.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxItem!>!
override Vezel.Celerity.Language.Syntax.Tree.AtomTypeSyntax.ChildTokens() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!>!
override Vezel.Celerity.Language.Syntax.Tree.AtomTypeSyntax.HasNodes.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.AtomTypeSyntax.HasTokens.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.AttributeSyntax.ChildNodes() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!>!
override Vezel.Celerity.Language.Syntax.Tree.AttributeSyntax.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxItem!>!
override Vezel.Celerity.Language.Syntax.Tree.AttributeSyntax.ChildTokens() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!>!
override Vezel.Celerity.Language.Syntax.Tree.AttributeSyntax.HasNodes.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.AttributeSyntax.HasTokens.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.BitwiseExpressionSyntax.ChildNodes() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!>!
override Vezel.Celerity.Language.Syntax.Tree.BitwiseExpressionSyntax.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxItem!>!
override Vezel.Celerity.Language.Syntax.Tree.BitwiseExpressionSyntax.ChildTokens() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!>!
override Vezel.Celerity.Language.Syntax.Tree.BitwiseExpressionSyntax.HasNodes.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.BitwiseExpressionSyntax.HasTokens.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.BlockExpressionSyntax.ChildNodes() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!>!
override Vezel.Celerity.Language.Syntax.Tree.BlockExpressionSyntax.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxItem!>!
override Vezel.Celerity.Language.Syntax.Tree.BlockExpressionSyntax.ChildTokens() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!>!
override Vezel.Celerity.Language.Syntax.Tree.BlockExpressionSyntax.HasNodes.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.BlockExpressionSyntax.HasTokens.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.BooleanTypeSyntax.ChildNodes() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!>!
override Vezel.Celerity.Language.Syntax.Tree.BooleanTypeSyntax.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxItem!>!
override Vezel.Celerity.Language.Syntax.Tree.BooleanTypeSyntax.ChildTokens() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!>!
override Vezel.Celerity.Language.Syntax.Tree.BooleanTypeSyntax.HasNodes.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.BooleanTypeSyntax.HasTokens.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.BreakExpressionResultSyntax.ChildNodes() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!>!
override Vezel.Celerity.Language.Syntax.Tree.BreakExpressionResultSyntax.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxItem!>!
override Vezel.Celerity.Language.Syntax.Tree.BreakExpressionResultSyntax.ChildTokens() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!>!
override Vezel.Celerity.Language.Syntax.Tree.BreakExpressionResultSyntax.HasNodes.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.BreakExpressionResultSyntax.HasTokens.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.BreakExpressionSyntax.ChildNodes() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!>!
override Vezel.Celerity.Language.Syntax.Tree.BreakExpressionSyntax.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxItem!>!
override Vezel.Celerity.Language.Syntax.Tree.BreakExpressionSyntax.ChildTokens() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!>!
override Vezel.Celerity.Language.Syntax.Tree.BreakExpressionSyntax.HasNodes.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.BreakExpressionSyntax.HasTokens.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.CallArgumentListSyntax.ChildNodes() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!>!
override Vezel.Celerity.Language.Syntax.Tree.CallArgumentListSyntax.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxItem!>!
override Vezel.Celerity.Language.Syntax.Tree.CallArgumentListSyntax.ChildTokens() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!>!
override Vezel.Celerity.Language.Syntax.Tree.CallArgumentListSyntax.HasNodes.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.CallArgumentListSyntax.HasTokens.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.CallExpressionSyntax.ChildNodes() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!>!
override Vezel.Celerity.Language.Syntax.Tree.CallExpressionSyntax.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxItem!>!
override Vezel.Celerity.Language.Syntax.Tree.CallExpressionSyntax.ChildTokens() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!>!
override Vezel.Celerity.Language.Syntax.Tree.CallExpressionSyntax.HasNodes.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.CallExpressionSyntax.HasTokens.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.CallExpressionSyntax.Subject.get -> Vezel.Celerity.Language.Syntax.Tree.ExpressionSyntax!
override Vezel.Celerity.Language.Syntax.Tree.ConditionExpressionArmSyntax.ArrowToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
override Vezel.Celerity.Language.Syntax.Tree.ConditionExpressionArmSyntax.Body.get -> Vezel.Celerity.Language.Syntax.Tree.ExpressionSyntax!
override Vezel.Celerity.Language.Syntax.Tree.ConditionExpressionArmSyntax.ChildNodes() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!>!
override Vezel.Celerity.Language.Syntax.Tree.ConditionExpressionArmSyntax.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxItem!>!
override Vezel.Celerity.Language.Syntax.Tree.ConditionExpressionArmSyntax.ChildTokens() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!>!
override Vezel.Celerity.Language.Syntax.Tree.ConditionExpressionArmSyntax.HasNodes.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.ConditionExpressionArmSyntax.HasTokens.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.ConditionExpressionSyntax.ChildNodes() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!>!
override Vezel.Celerity.Language.Syntax.Tree.ConditionExpressionSyntax.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxItem!>!
override Vezel.Celerity.Language.Syntax.Tree.ConditionExpressionSyntax.ChildTokens() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!>!
override Vezel.Celerity.Language.Syntax.Tree.ConditionExpressionSyntax.HasNodes.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.ConditionExpressionSyntax.HasTokens.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.ConstantDeclarationSyntax.Attributes.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxItemList<Vezel.Celerity.Language.Syntax.Tree.AttributeSyntax!>
override Vezel.Celerity.Language.Syntax.Tree.ConstantDeclarationSyntax.Body.get -> Vezel.Celerity.Language.Syntax.Tree.ExpressionSyntax!
override Vezel.Celerity.Language.Syntax.Tree.ConstantDeclarationSyntax.ChildNodes() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!>!
override Vezel.Celerity.Language.Syntax.Tree.ConstantDeclarationSyntax.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxItem!>!
override Vezel.Celerity.Language.Syntax.Tree.ConstantDeclarationSyntax.ChildTokens() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!>!
override Vezel.Celerity.Language.Syntax.Tree.ConstantDeclarationSyntax.HasNodes.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.ConstantDeclarationSyntax.HasTokens.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.ConstantDeclarationSyntax.NameToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
override Vezel.Celerity.Language.Syntax.Tree.DeclarationSubmissionSyntax.ChildNodes() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!>!
override Vezel.Celerity.Language.Syntax.Tree.DeclarationSubmissionSyntax.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxItem!>!
override Vezel.Celerity.Language.Syntax.Tree.DeclarationSubmissionSyntax.ChildTokens() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!>!
override Vezel.Celerity.Language.Syntax.Tree.DeclarationSubmissionSyntax.HasNodes.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.DeclarationSubmissionSyntax.HasTokens.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.DeferStatementSyntax.Attributes.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxItemList<Vezel.Celerity.Language.Syntax.Tree.AttributeSyntax!>
override Vezel.Celerity.Language.Syntax.Tree.DeferStatementSyntax.ChildNodes() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!>!
override Vezel.Celerity.Language.Syntax.Tree.DeferStatementSyntax.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxItem!>!
override Vezel.Celerity.Language.Syntax.Tree.DeferStatementSyntax.ChildTokens() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!>!
override Vezel.Celerity.Language.Syntax.Tree.DeferStatementSyntax.HasNodes.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.DeferStatementSyntax.HasTokens.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.DeferStatementSyntax.SemicolonToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
override Vezel.Celerity.Language.Syntax.Tree.DiscardBindingSyntax.ChildNodes() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!>!
override Vezel.Celerity.Language.Syntax.Tree.DiscardBindingSyntax.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxItem!>!
override Vezel.Celerity.Language.Syntax.Tree.DiscardBindingSyntax.ChildTokens() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!>!
override Vezel.Celerity.Language.Syntax.Tree.DiscardBindingSyntax.HasNodes.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.DiscardBindingSyntax.HasTokens.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.DiscardBindingSyntax.NameToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
override Vezel.Celerity.Language.Syntax.Tree.ErrorExpressionSyntax.ChildNodes() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!>!
override Vezel.Celerity.Language.Syntax.Tree.ErrorExpressionSyntax.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxItem!>!
override Vezel.Celerity.Language.Syntax.Tree.ErrorExpressionSyntax.ChildTokens() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!>!
override Vezel.Celerity.Language.Syntax.Tree.ErrorExpressionSyntax.CloseBraceToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
override Vezel.Celerity.Language.Syntax.Tree.ErrorExpressionSyntax.Fields.get -> Vezel.Celerity.Language.Syntax.Tree.SeparatedSyntaxItemList<Vezel.Celerity.Language.Syntax.Tree.AggregateExpressionFieldSyntax!>
override Vezel.Celerity.Language.Syntax.Tree.ErrorExpressionSyntax.HasNodes.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.ErrorExpressionSyntax.HasTokens.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.ErrorExpressionSyntax.OpenBraceToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
override Vezel.Celerity.Language.Syntax.Tree.ErrorExpressionSyntax.With.get -> Vezel.Celerity.Language.Syntax.Tree.AggregateExpressionWithSyntax?
override Vezel.Celerity.Language.Syntax.Tree.ErrorPatternSyntax.Alias.get -> Vezel.Celerity.Language.Syntax.Tree.PatternAliasSyntax?
override Vezel.Celerity.Language.Syntax.Tree.ErrorPatternSyntax.ChildNodes() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!>!
override Vezel.Celerity.Language.Syntax.Tree.ErrorPatternSyntax.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxItem!>!
override Vezel.Celerity.Language.Syntax.Tree.ErrorPatternSyntax.ChildTokens() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!>!
override Vezel.Celerity.Language.Syntax.Tree.ErrorPatternSyntax.CloseBraceToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
override Vezel.Celerity.Language.Syntax.Tree.ErrorPatternSyntax.Fields.get -> Vezel.Celerity.Language.Syntax.Tree.SeparatedSyntaxItemList<Vezel.Celerity.Language.Syntax.Tree.AggregatePatternFieldSyntax!>
override Vezel.Celerity.Language.Syntax.Tree.ErrorPatternSyntax.HasNodes.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.ErrorPatternSyntax.HasTokens.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.ErrorPatternSyntax.OpenBraceToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
override Vezel.Celerity.Language.Syntax.Tree.ErrorTypeSyntax.ChildNodes() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!>!
override Vezel.Celerity.Language.Syntax.Tree.ErrorTypeSyntax.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxItem!>!
override Vezel.Celerity.Language.Syntax.Tree.ErrorTypeSyntax.ChildTokens() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!>!
override Vezel.Celerity.Language.Syntax.Tree.ErrorTypeSyntax.CloseBraceToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
override Vezel.Celerity.Language.Syntax.Tree.ErrorTypeSyntax.Fields.get -> Vezel.Celerity.Language.Syntax.Tree.SeparatedSyntaxItemList<Vezel.Celerity.Language.Syntax.Tree.AggregateTypeFieldSyntax!>
override Vezel.Celerity.Language.Syntax.Tree.ErrorTypeSyntax.HasNodes.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.ErrorTypeSyntax.HasTokens.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.ErrorTypeSyntax.OpenBraceToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
override Vezel.Celerity.Language.Syntax.Tree.ExpressionArmGuardSyntax.ChildNodes() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!>!
override Vezel.Celerity.Language.Syntax.Tree.ExpressionArmGuardSyntax.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxItem!>!
override Vezel.Celerity.Language.Syntax.Tree.ExpressionArmGuardSyntax.ChildTokens() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!>!
override Vezel.Celerity.Language.Syntax.Tree.ExpressionArmGuardSyntax.HasNodes.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.ExpressionArmGuardSyntax.HasTokens.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.ExpressionElseSyntax.ChildNodes() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!>!
override Vezel.Celerity.Language.Syntax.Tree.ExpressionElseSyntax.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxItem!>!
override Vezel.Celerity.Language.Syntax.Tree.ExpressionElseSyntax.ChildTokens() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!>!
override Vezel.Celerity.Language.Syntax.Tree.ExpressionElseSyntax.HasNodes.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.ExpressionElseSyntax.HasTokens.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.ExpressionPatternArmSyntax.ArrowToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
override Vezel.Celerity.Language.Syntax.Tree.ExpressionPatternArmSyntax.Body.get -> Vezel.Celerity.Language.Syntax.Tree.ExpressionSyntax!
override Vezel.Celerity.Language.Syntax.Tree.ExpressionPatternArmSyntax.ChildNodes() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!>!
override Vezel.Celerity.Language.Syntax.Tree.ExpressionPatternArmSyntax.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxItem!>!
override Vezel.Celerity.Language.Syntax.Tree.ExpressionPatternArmSyntax.ChildTokens() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!>!
override Vezel.Celerity.Language.Syntax.Tree.ExpressionPatternArmSyntax.HasNodes.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.ExpressionPatternArmSyntax.HasTokens.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.ExpressionStatementSyntax.Attributes.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxItemList<Vezel.Celerity.Language.Syntax.Tree.AttributeSyntax!>
override Vezel.Celerity.Language.Syntax.Tree.ExpressionStatementSyntax.ChildNodes() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!>!
override Vezel.Celerity.Language.Syntax.Tree.ExpressionStatementSyntax.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxItem!>!
override Vezel.Celerity.Language.Syntax.Tree.ExpressionStatementSyntax.ChildTokens() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!>!
override Vezel.Celerity.Language.Syntax.Tree.ExpressionStatementSyntax.HasNodes.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.ExpressionStatementSyntax.HasTokens.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.ExpressionStatementSyntax.SemicolonToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken?
override Vezel.Celerity.Language.Syntax.Tree.FieldExpressionSyntax.ChildNodes() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!>!
override Vezel.Celerity.Language.Syntax.Tree.FieldExpressionSyntax.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxItem!>!
override Vezel.Celerity.Language.Syntax.Tree.FieldExpressionSyntax.ChildTokens() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!>!
override Vezel.Celerity.Language.Syntax.Tree.FieldExpressionSyntax.HasNodes.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.FieldExpressionSyntax.HasTokens.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.FieldExpressionSyntax.Subject.get -> Vezel.Celerity.Language.Syntax.Tree.ExpressionSyntax!
override Vezel.Celerity.Language.Syntax.Tree.ForExpressionSyntax.ChildNodes() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!>!
override Vezel.Celerity.Language.Syntax.Tree.ForExpressionSyntax.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxItem!>!
override Vezel.Celerity.Language.Syntax.Tree.ForExpressionSyntax.ChildTokens() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!>!
override Vezel.Celerity.Language.Syntax.Tree.ForExpressionSyntax.HasNodes.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.ForExpressionSyntax.HasTokens.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.FunctionDeclarationSyntax.Attributes.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxItemList<Vezel.Celerity.Language.Syntax.Tree.AttributeSyntax!>
override Vezel.Celerity.Language.Syntax.Tree.FunctionDeclarationSyntax.Body.get -> Vezel.Celerity.Language.Syntax.Tree.BlockExpressionSyntax?
override Vezel.Celerity.Language.Syntax.Tree.FunctionDeclarationSyntax.ChildNodes() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!>!
override Vezel.Celerity.Language.Syntax.Tree.FunctionDeclarationSyntax.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxItem!>!
override Vezel.Celerity.Language.Syntax.Tree.FunctionDeclarationSyntax.ChildTokens() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!>!
override Vezel.Celerity.Language.Syntax.Tree.FunctionDeclarationSyntax.HasNodes.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.FunctionDeclarationSyntax.HasTokens.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.FunctionDeclarationSyntax.NameToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
override Vezel.Celerity.Language.Syntax.Tree.FunctionParameterListSyntax.ChildNodes() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!>!
override Vezel.Celerity.Language.Syntax.Tree.FunctionParameterListSyntax.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxItem!>!
override Vezel.Celerity.Language.Syntax.Tree.FunctionParameterListSyntax.ChildTokens() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!>!
override Vezel.Celerity.Language.Syntax.Tree.FunctionParameterListSyntax.HasNodes.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.FunctionParameterListSyntax.HasTokens.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.FunctionParameterSyntax.Attributes.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxItemList<Vezel.Celerity.Language.Syntax.Tree.AttributeSyntax!>
override Vezel.Celerity.Language.Syntax.Tree.FunctionParameterSyntax.ChildNodes() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!>!
override Vezel.Celerity.Language.Syntax.Tree.FunctionParameterSyntax.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxItem!>!
override Vezel.Celerity.Language.Syntax.Tree.FunctionParameterSyntax.ChildTokens() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!>!
override Vezel.Celerity.Language.Syntax.Tree.FunctionParameterSyntax.HasNodes.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.FunctionParameterSyntax.HasTokens.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.FunctionParameterSyntax.NameToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
override Vezel.Celerity.Language.Syntax.Tree.FunctionTypeParameterListSyntax.ChildNodes() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!>!
override Vezel.Celerity.Language.Syntax.Tree.FunctionTypeParameterListSyntax.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxItem!>!
override Vezel.Celerity.Language.Syntax.Tree.FunctionTypeParameterListSyntax.ChildTokens() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!>!
override Vezel.Celerity.Language.Syntax.Tree.FunctionTypeParameterListSyntax.HasNodes.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.FunctionTypeParameterListSyntax.HasTokens.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.FunctionTypeParameterSyntax.ChildNodes() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!>!
override Vezel.Celerity.Language.Syntax.Tree.FunctionTypeParameterSyntax.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxItem!>!
override Vezel.Celerity.Language.Syntax.Tree.FunctionTypeParameterSyntax.ChildTokens() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!>!
override Vezel.Celerity.Language.Syntax.Tree.FunctionTypeParameterSyntax.HasNodes.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.FunctionTypeParameterSyntax.HasTokens.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.FunctionTypeSignatureSyntax.ChildNodes() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!>!
override Vezel.Celerity.Language.Syntax.Tree.FunctionTypeSignatureSyntax.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxItem!>!
override Vezel.Celerity.Language.Syntax.Tree.FunctionTypeSignatureSyntax.ChildTokens() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!>!
override Vezel.Celerity.Language.Syntax.Tree.FunctionTypeSignatureSyntax.HasNodes.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.FunctionTypeSignatureSyntax.HasTokens.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.FunctionTypeSyntax.ChildNodes() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!>!
override Vezel.Celerity.Language.Syntax.Tree.FunctionTypeSyntax.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxItem!>!
override Vezel.Celerity.Language.Syntax.Tree.FunctionTypeSyntax.ChildTokens() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!>!
override Vezel.Celerity.Language.Syntax.Tree.FunctionTypeSyntax.HasNodes.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.FunctionTypeSyntax.HasTokens.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.HandleTypeSyntax.ChildNodes() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!>!
override Vezel.Celerity.Language.Syntax.Tree.HandleTypeSyntax.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxItem!>!
override Vezel.Celerity.Language.Syntax.Tree.HandleTypeSyntax.ChildTokens() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!>!
override Vezel.Celerity.Language.Syntax.Tree.HandleTypeSyntax.HasNodes.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.HandleTypeSyntax.HasTokens.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.IdentifierExpressionSyntax.ChildNodes() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!>!
override Vezel.Celerity.Language.Syntax.Tree.IdentifierExpressionSyntax.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxItem!>!
override Vezel.Celerity.Language.Syntax.Tree.IdentifierExpressionSyntax.ChildTokens() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!>!
override Vezel.Celerity.Language.Syntax.Tree.IdentifierExpressionSyntax.HasNodes.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.IdentifierExpressionSyntax.HasTokens.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.IfExpressionSyntax.ChildNodes() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!>!
override Vezel.Celerity.Language.Syntax.Tree.IfExpressionSyntax.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxItem!>!
override Vezel.Celerity.Language.Syntax.Tree.IfExpressionSyntax.ChildTokens() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!>!
override Vezel.Celerity.Language.Syntax.Tree.IfExpressionSyntax.HasNodes.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.IfExpressionSyntax.HasTokens.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.IndexArgumentListSyntax.ChildNodes() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!>!
override Vezel.Celerity.Language.Syntax.Tree.IndexArgumentListSyntax.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxItem!>!
override Vezel.Celerity.Language.Syntax.Tree.IndexArgumentListSyntax.ChildTokens() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!>!
override Vezel.Celerity.Language.Syntax.Tree.IndexArgumentListSyntax.HasNodes.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.IndexArgumentListSyntax.HasTokens.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.IndexExpressionSyntax.ChildNodes() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!>!
override Vezel.Celerity.Language.Syntax.Tree.IndexExpressionSyntax.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxItem!>!
override Vezel.Celerity.Language.Syntax.Tree.IndexExpressionSyntax.ChildTokens() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!>!
override Vezel.Celerity.Language.Syntax.Tree.IndexExpressionSyntax.HasNodes.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.IndexExpressionSyntax.HasTokens.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.IndexExpressionSyntax.Subject.get -> Vezel.Celerity.Language.Syntax.Tree.ExpressionSyntax!
override Vezel.Celerity.Language.Syntax.Tree.IntegerTypeRangeBoundSyntax.ChildNodes() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!>!
override Vezel.Celerity.Language.Syntax.Tree.IntegerTypeRangeBoundSyntax.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxItem!>!
override Vezel.Celerity.Language.Syntax.Tree.IntegerTypeRangeBoundSyntax.ChildTokens() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!>!
override Vezel.Celerity.Language.Syntax.Tree.IntegerTypeRangeBoundSyntax.HasNodes.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.IntegerTypeRangeBoundSyntax.HasTokens.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.IntegerTypeRangeSyntax.ChildNodes() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!>!
override Vezel.Celerity.Language.Syntax.Tree.IntegerTypeRangeSyntax.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxItem!>!
override Vezel.Celerity.Language.Syntax.Tree.IntegerTypeRangeSyntax.ChildTokens() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!>!
override Vezel.Celerity.Language.Syntax.Tree.IntegerTypeRangeSyntax.HasNodes.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.IntegerTypeRangeSyntax.HasTokens.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.IntegerTypeSyntax.ChildNodes() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!>!
override Vezel.Celerity.Language.Syntax.Tree.IntegerTypeSyntax.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxItem!>!
override Vezel.Celerity.Language.Syntax.Tree.IntegerTypeSyntax.ChildTokens() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!>!
override Vezel.Celerity.Language.Syntax.Tree.IntegerTypeSyntax.HasNodes.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.IntegerTypeSyntax.HasTokens.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.InteractiveDocumentSyntax.ChildNodes() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!>!
override Vezel.Celerity.Language.Syntax.Tree.InteractiveDocumentSyntax.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxItem!>!
override Vezel.Celerity.Language.Syntax.Tree.InteractiveDocumentSyntax.ChildTokens() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!>!
override Vezel.Celerity.Language.Syntax.Tree.InteractiveDocumentSyntax.EndOfInputToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
override Vezel.Celerity.Language.Syntax.Tree.InteractiveDocumentSyntax.HasNodes.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.InteractiveDocumentSyntax.HasTokens.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.LambdaExpressionSyntax.ChildNodes() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!>!
override Vezel.Celerity.Language.Syntax.Tree.LambdaExpressionSyntax.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxItem!>!
override Vezel.Celerity.Language.Syntax.Tree.LambdaExpressionSyntax.ChildTokens() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!>!
override Vezel.Celerity.Language.Syntax.Tree.LambdaExpressionSyntax.HasNodes.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.LambdaExpressionSyntax.HasTokens.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.LambdaParameterListSyntax.ChildNodes() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!>!
override Vezel.Celerity.Language.Syntax.Tree.LambdaParameterListSyntax.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxItem!>!
override Vezel.Celerity.Language.Syntax.Tree.LambdaParameterListSyntax.ChildTokens() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!>!
override Vezel.Celerity.Language.Syntax.Tree.LambdaParameterListSyntax.HasNodes.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.LambdaParameterListSyntax.HasTokens.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.LambdaParameterSyntax.Attributes.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxItemList<Vezel.Celerity.Language.Syntax.Tree.AttributeSyntax!>
override Vezel.Celerity.Language.Syntax.Tree.LambdaParameterSyntax.ChildNodes() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!>!
override Vezel.Celerity.Language.Syntax.Tree.LambdaParameterSyntax.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxItem!>!
override Vezel.Celerity.Language.Syntax.Tree.LambdaParameterSyntax.ChildTokens() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!>!
override Vezel.Celerity.Language.Syntax.Tree.LambdaParameterSyntax.HasNodes.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.LambdaParameterSyntax.HasTokens.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.LambdaParameterSyntax.NameToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
override Vezel.Celerity.Language.Syntax.Tree.LetStatementSyntax.Attributes.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxItemList<Vezel.Celerity.Language.Syntax.Tree.AttributeSyntax!>
override Vezel.Celerity.Language.Syntax.Tree.LetStatementSyntax.ChildNodes() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!>!
override Vezel.Celerity.Language.Syntax.Tree.LetStatementSyntax.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxItem!>!
override Vezel.Celerity.Language.Syntax.Tree.LetStatementSyntax.ChildTokens() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!>!
override Vezel.Celerity.Language.Syntax.Tree.LetStatementSyntax.HasNodes.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.LetStatementSyntax.HasTokens.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.LetStatementSyntax.SemicolonToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
override Vezel.Celerity.Language.Syntax.Tree.LiteralExpressionSyntax.ChildNodes() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!>!
override Vezel.Celerity.Language.Syntax.Tree.LiteralExpressionSyntax.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxItem!>!
override Vezel.Celerity.Language.Syntax.Tree.LiteralExpressionSyntax.ChildTokens() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!>!
override Vezel.Celerity.Language.Syntax.Tree.LiteralExpressionSyntax.HasNodes.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.LiteralExpressionSyntax.HasTokens.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.LiteralPatternSyntax.Alias.get -> Vezel.Celerity.Language.Syntax.Tree.PatternAliasSyntax?
override Vezel.Celerity.Language.Syntax.Tree.LiteralPatternSyntax.ChildNodes() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!>!
override Vezel.Celerity.Language.Syntax.Tree.LiteralPatternSyntax.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxItem!>!
override Vezel.Celerity.Language.Syntax.Tree.LiteralPatternSyntax.ChildTokens() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!>!
override Vezel.Celerity.Language.Syntax.Tree.LiteralPatternSyntax.HasNodes.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.LiteralPatternSyntax.HasTokens.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.LiteralTypeSyntax.ChildNodes() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!>!
override Vezel.Celerity.Language.Syntax.Tree.LiteralTypeSyntax.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxItem!>!
override Vezel.Celerity.Language.Syntax.Tree.LiteralTypeSyntax.ChildTokens() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!>!
override Vezel.Celerity.Language.Syntax.Tree.LiteralTypeSyntax.HasNodes.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.LiteralTypeSyntax.HasTokens.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.LogicalExpressionSyntax.ChildNodes() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!>!
override Vezel.Celerity.Language.Syntax.Tree.LogicalExpressionSyntax.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxItem!>!
override Vezel.Celerity.Language.Syntax.Tree.LogicalExpressionSyntax.ChildTokens() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!>!
override Vezel.Celerity.Language.Syntax.Tree.LogicalExpressionSyntax.HasNodes.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.LogicalExpressionSyntax.HasTokens.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.MapExpressionPairSyntax.ChildNodes() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!>!
override Vezel.Celerity.Language.Syntax.Tree.MapExpressionPairSyntax.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxItem!>!
override Vezel.Celerity.Language.Syntax.Tree.MapExpressionPairSyntax.ChildTokens() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!>!
override Vezel.Celerity.Language.Syntax.Tree.MapExpressionPairSyntax.HasNodes.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.MapExpressionPairSyntax.HasTokens.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.MapExpressionSyntax.ChildNodes() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!>!
override Vezel.Celerity.Language.Syntax.Tree.MapExpressionSyntax.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxItem!>!
override Vezel.Celerity.Language.Syntax.Tree.MapExpressionSyntax.ChildTokens() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!>!
override Vezel.Celerity.Language.Syntax.Tree.MapExpressionSyntax.HasNodes.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.MapExpressionSyntax.HasTokens.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.MapPatternPairSyntax.ChildNodes() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!>!
override Vezel.Celerity.Language.Syntax.Tree.MapPatternPairSyntax.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxItem!>!
override Vezel.Celerity.Language.Syntax.Tree.MapPatternPairSyntax.ChildTokens() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!>!
override Vezel.Celerity.Language.Syntax.Tree.MapPatternPairSyntax.HasNodes.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.MapPatternPairSyntax.HasTokens.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.MapPatternSyntax.Alias.get -> Vezel.Celerity.Language.Syntax.Tree.PatternAliasSyntax?
override Vezel.Celerity.Language.Syntax.Tree.MapPatternSyntax.ChildNodes() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!>!
override Vezel.Celerity.Language.Syntax.Tree.MapPatternSyntax.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxItem!>!
override Vezel.Celerity.Language.Syntax.Tree.MapPatternSyntax.ChildTokens() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!>!
override Vezel.Celerity.Language.Syntax.Tree.MapPatternSyntax.HasNodes.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.MapPatternSyntax.HasTokens.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.MapTypeSyntax.ChildNodes() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!>!
override Vezel.Celerity.Language.Syntax.Tree.MapTypeSyntax.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxItem!>!
override Vezel.Celerity.Language.Syntax.Tree.MapTypeSyntax.ChildTokens() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!>!
override Vezel.Celerity.Language.Syntax.Tree.MapTypeSyntax.HasNodes.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.MapTypeSyntax.HasTokens.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.MatchExpressionSyntax.ChildNodes() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!>!
override Vezel.Celerity.Language.Syntax.Tree.MatchExpressionSyntax.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxItem!>!
override Vezel.Celerity.Language.Syntax.Tree.MatchExpressionSyntax.ChildTokens() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!>!
override Vezel.Celerity.Language.Syntax.Tree.MatchExpressionSyntax.HasNodes.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.MatchExpressionSyntax.HasTokens.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.MetaExpressionSyntax.ChildNodes() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!>!
override Vezel.Celerity.Language.Syntax.Tree.MetaExpressionSyntax.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxItem!>!
override Vezel.Celerity.Language.Syntax.Tree.MetaExpressionSyntax.ChildTokens() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!>!
override Vezel.Celerity.Language.Syntax.Tree.MetaExpressionSyntax.HasNodes.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.MetaExpressionSyntax.HasTokens.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.ModuleDocumentSyntax.ChildNodes() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!>!
override Vezel.Celerity.Language.Syntax.Tree.ModuleDocumentSyntax.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxItem!>!
override Vezel.Celerity.Language.Syntax.Tree.ModuleDocumentSyntax.ChildTokens() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!>!
override Vezel.Celerity.Language.Syntax.Tree.ModuleDocumentSyntax.EndOfInputToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
override Vezel.Celerity.Language.Syntax.Tree.ModuleDocumentSyntax.HasNodes.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.ModuleDocumentSyntax.HasTokens.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.ModuleExpressionSyntax.ChildNodes() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!>!
override Vezel.Celerity.Language.Syntax.Tree.ModuleExpressionSyntax.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxItem!>!
override Vezel.Celerity.Language.Syntax.Tree.ModuleExpressionSyntax.ChildTokens() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!>!
override Vezel.Celerity.Language.Syntax.Tree.ModuleExpressionSyntax.HasNodes.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.ModuleExpressionSyntax.HasTokens.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.ModulePathSyntax.ChildNodes() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!>!
override Vezel.Celerity.Language.Syntax.Tree.ModulePathSyntax.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxItem!>!
override Vezel.Celerity.Language.Syntax.Tree.ModulePathSyntax.ChildTokens() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!>!
override Vezel.Celerity.Language.Syntax.Tree.ModulePathSyntax.HasNodes.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.ModulePathSyntax.HasTokens.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.ModulePatternSyntax.Alias.get -> Vezel.Celerity.Language.Syntax.Tree.PatternAliasSyntax?
override Vezel.Celerity.Language.Syntax.Tree.ModulePatternSyntax.ChildNodes() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!>!
override Vezel.Celerity.Language.Syntax.Tree.ModulePatternSyntax.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxItem!>!
override Vezel.Celerity.Language.Syntax.Tree.ModulePatternSyntax.ChildTokens() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!>!
override Vezel.Celerity.Language.Syntax.Tree.ModulePatternSyntax.CloseBraceToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
override Vezel.Celerity.Language.Syntax.Tree.ModulePatternSyntax.Fields.get -> Vezel.Celerity.Language.Syntax.Tree.SeparatedSyntaxItemList<Vezel.Celerity.Language.Syntax.Tree.AggregatePatternFieldSyntax!>
override Vezel.Celerity.Language.Syntax.Tree.ModulePatternSyntax.HasNodes.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.ModulePatternSyntax.HasTokens.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.ModulePatternSyntax.OpenBraceToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
override Vezel.Celerity.Language.Syntax.Tree.ModuleTypeSyntax.ChildNodes() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!>!
override Vezel.Celerity.Language.Syntax.Tree.ModuleTypeSyntax.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxItem!>!
override Vezel.Celerity.Language.Syntax.Tree.ModuleTypeSyntax.ChildTokens() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!>!
override Vezel.Celerity.Language.Syntax.Tree.ModuleTypeSyntax.CloseBraceToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
override Vezel.Celerity.Language.Syntax.Tree.ModuleTypeSyntax.Fields.get -> Vezel.Celerity.Language.Syntax.Tree.SeparatedSyntaxItemList<Vezel.Celerity.Language.Syntax.Tree.AggregateTypeFieldSyntax!>
override Vezel.Celerity.Language.Syntax.Tree.ModuleTypeSyntax.HasNodes.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.ModuleTypeSyntax.HasTokens.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.ModuleTypeSyntax.OpenBraceToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
override Vezel.Celerity.Language.Syntax.Tree.MultiplicativeExpressionSyntax.ChildNodes() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!>!
override Vezel.Celerity.Language.Syntax.Tree.MultiplicativeExpressionSyntax.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxItem!>!
override Vezel.Celerity.Language.Syntax.Tree.MultiplicativeExpressionSyntax.ChildTokens() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!>!
override Vezel.Celerity.Language.Syntax.Tree.MultiplicativeExpressionSyntax.HasNodes.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.MultiplicativeExpressionSyntax.HasTokens.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.NextExpressionSyntax.ChildNodes() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!>!
override Vezel.Celerity.Language.Syntax.Tree.NextExpressionSyntax.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxItem!>!
override Vezel.Celerity.Language.Syntax.Tree.NextExpressionSyntax.ChildTokens() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!>!
override Vezel.Celerity.Language.Syntax.Tree.NextExpressionSyntax.HasNodes.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.NextExpressionSyntax.HasTokens.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.NominalTypeArgumentListSyntax.ChildNodes() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!>!
override Vezel.Celerity.Language.Syntax.Tree.NominalTypeArgumentListSyntax.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxItem!>!
override Vezel.Celerity.Language.Syntax.Tree.NominalTypeArgumentListSyntax.ChildTokens() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!>!
override Vezel.Celerity.Language.Syntax.Tree.NominalTypeArgumentListSyntax.HasNodes.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.NominalTypeArgumentListSyntax.HasTokens.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.NominalTypePathSyntax.ChildNodes() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!>!
override Vezel.Celerity.Language.Syntax.Tree.NominalTypePathSyntax.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxItem!>!
override Vezel.Celerity.Language.Syntax.Tree.NominalTypePathSyntax.ChildTokens() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!>!
override Vezel.Celerity.Language.Syntax.Tree.NominalTypePathSyntax.HasNodes.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.NominalTypePathSyntax.HasTokens.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.NominalTypeSyntax.ChildNodes() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!>!
override Vezel.Celerity.Language.Syntax.Tree.NominalTypeSyntax.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxItem!>!
override Vezel.Celerity.Language.Syntax.Tree.NominalTypeSyntax.ChildTokens() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!>!
override Vezel.Celerity.Language.Syntax.Tree.NominalTypeSyntax.HasNodes.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.NominalTypeSyntax.HasTokens.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.NoneReturnTypeSyntax.ChildNodes() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!>!
override Vezel.Celerity.Language.Syntax.Tree.NoneReturnTypeSyntax.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxItem!>!
override Vezel.Celerity.Language.Syntax.Tree.NoneReturnTypeSyntax.ChildTokens() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!>!
override Vezel.Celerity.Language.Syntax.Tree.NoneReturnTypeSyntax.HasNodes.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.NoneReturnTypeSyntax.HasTokens.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.ParenthesizedExpressionSyntax.ChildNodes() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!>!
override Vezel.Celerity.Language.Syntax.Tree.ParenthesizedExpressionSyntax.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxItem!>!
override Vezel.Celerity.Language.Syntax.Tree.ParenthesizedExpressionSyntax.ChildTokens() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!>!
override Vezel.Celerity.Language.Syntax.Tree.ParenthesizedExpressionSyntax.HasNodes.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.ParenthesizedExpressionSyntax.HasTokens.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.PatternAliasSyntax.ChildNodes() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!>!
override Vezel.Celerity.Language.Syntax.Tree.PatternAliasSyntax.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxItem!>!
override Vezel.Celerity.Language.Syntax.Tree.PatternAliasSyntax.ChildTokens() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!>!
override Vezel.Celerity.Language.Syntax.Tree.PatternAliasSyntax.HasNodes.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.PatternAliasSyntax.HasTokens.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.RaiseExpressionSyntax.ChildNodes() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!>!
override Vezel.Celerity.Language.Syntax.Tree.RaiseExpressionSyntax.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxItem!>!
override Vezel.Celerity.Language.Syntax.Tree.RaiseExpressionSyntax.ChildTokens() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!>!
override Vezel.Celerity.Language.Syntax.Tree.RaiseExpressionSyntax.HasNodes.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.RaiseExpressionSyntax.HasTokens.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.RealTypeSyntax.ChildNodes() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!>!
override Vezel.Celerity.Language.Syntax.Tree.RealTypeSyntax.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxItem!>!
override Vezel.Celerity.Language.Syntax.Tree.RealTypeSyntax.ChildTokens() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!>!
override Vezel.Celerity.Language.Syntax.Tree.RealTypeSyntax.HasNodes.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.RealTypeSyntax.HasTokens.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.ReceiveExpressionArmSyntax.ArrowToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
override Vezel.Celerity.Language.Syntax.Tree.ReceiveExpressionArmSyntax.Body.get -> Vezel.Celerity.Language.Syntax.Tree.ExpressionSyntax!
override Vezel.Celerity.Language.Syntax.Tree.ReceiveExpressionArmSyntax.ChildNodes() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!>!
override Vezel.Celerity.Language.Syntax.Tree.ReceiveExpressionArmSyntax.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxItem!>!
override Vezel.Celerity.Language.Syntax.Tree.ReceiveExpressionArmSyntax.ChildTokens() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!>!
override Vezel.Celerity.Language.Syntax.Tree.ReceiveExpressionArmSyntax.HasNodes.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.ReceiveExpressionArmSyntax.HasTokens.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.ReceiveExpressionSyntax.ChildNodes() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!>!
override Vezel.Celerity.Language.Syntax.Tree.ReceiveExpressionSyntax.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxItem!>!
override Vezel.Celerity.Language.Syntax.Tree.ReceiveExpressionSyntax.ChildTokens() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!>!
override Vezel.Celerity.Language.Syntax.Tree.ReceiveExpressionSyntax.HasNodes.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.ReceiveExpressionSyntax.HasTokens.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.ReceiveParameterListSyntax.ChildNodes() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!>!
override Vezel.Celerity.Language.Syntax.Tree.ReceiveParameterListSyntax.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxItem!>!
override Vezel.Celerity.Language.Syntax.Tree.ReceiveParameterListSyntax.ChildTokens() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!>!
override Vezel.Celerity.Language.Syntax.Tree.ReceiveParameterListSyntax.HasNodes.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.ReceiveParameterListSyntax.HasTokens.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.ReceiveParameterSyntax.ChildNodes() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!>!
override Vezel.Celerity.Language.Syntax.Tree.ReceiveParameterSyntax.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxItem!>!
override Vezel.Celerity.Language.Syntax.Tree.ReceiveParameterSyntax.ChildTokens() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!>!
override Vezel.Celerity.Language.Syntax.Tree.ReceiveParameterSyntax.HasNodes.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.ReceiveParameterSyntax.HasTokens.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.RecordExpressionMetaSyntax.ChildNodes() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!>!
override Vezel.Celerity.Language.Syntax.Tree.RecordExpressionMetaSyntax.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxItem!>!
override Vezel.Celerity.Language.Syntax.Tree.RecordExpressionMetaSyntax.ChildTokens() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!>!
override Vezel.Celerity.Language.Syntax.Tree.RecordExpressionMetaSyntax.HasNodes.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.RecordExpressionMetaSyntax.HasTokens.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.RecordExpressionSyntax.ChildNodes() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!>!
override Vezel.Celerity.Language.Syntax.Tree.RecordExpressionSyntax.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxItem!>!
override Vezel.Celerity.Language.Syntax.Tree.RecordExpressionSyntax.ChildTokens() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!>!
override Vezel.Celerity.Language.Syntax.Tree.RecordExpressionSyntax.CloseBraceToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
override Vezel.Celerity.Language.Syntax.Tree.RecordExpressionSyntax.Fields.get -> Vezel.Celerity.Language.Syntax.Tree.SeparatedSyntaxItemList<Vezel.Celerity.Language.Syntax.Tree.AggregateExpressionFieldSyntax!>
override Vezel.Celerity.Language.Syntax.Tree.RecordExpressionSyntax.HasNodes.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.RecordExpressionSyntax.HasTokens.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.RecordExpressionSyntax.OpenBraceToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
override Vezel.Celerity.Language.Syntax.Tree.RecordExpressionSyntax.With.get -> Vezel.Celerity.Language.Syntax.Tree.AggregateExpressionWithSyntax?
override Vezel.Celerity.Language.Syntax.Tree.RecordPatternSyntax.Alias.get -> Vezel.Celerity.Language.Syntax.Tree.PatternAliasSyntax?
override Vezel.Celerity.Language.Syntax.Tree.RecordPatternSyntax.ChildNodes() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!>!
override Vezel.Celerity.Language.Syntax.Tree.RecordPatternSyntax.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxItem!>!
override Vezel.Celerity.Language.Syntax.Tree.RecordPatternSyntax.ChildTokens() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!>!
override Vezel.Celerity.Language.Syntax.Tree.RecordPatternSyntax.CloseBraceToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
override Vezel.Celerity.Language.Syntax.Tree.RecordPatternSyntax.Fields.get -> Vezel.Celerity.Language.Syntax.Tree.SeparatedSyntaxItemList<Vezel.Celerity.Language.Syntax.Tree.AggregatePatternFieldSyntax!>
override Vezel.Celerity.Language.Syntax.Tree.RecordPatternSyntax.HasNodes.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.RecordPatternSyntax.HasTokens.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.RecordPatternSyntax.OpenBraceToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
override Vezel.Celerity.Language.Syntax.Tree.RecordTypeMetaSyntax.ChildNodes() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!>!
override Vezel.Celerity.Language.Syntax.Tree.RecordTypeMetaSyntax.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxItem!>!
override Vezel.Celerity.Language.Syntax.Tree.RecordTypeMetaSyntax.ChildTokens() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!>!
override Vezel.Celerity.Language.Syntax.Tree.RecordTypeMetaSyntax.HasNodes.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.RecordTypeMetaSyntax.HasTokens.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.RecordTypeSyntax.ChildNodes() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!>!
override Vezel.Celerity.Language.Syntax.Tree.RecordTypeSyntax.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxItem!>!
override Vezel.Celerity.Language.Syntax.Tree.RecordTypeSyntax.ChildTokens() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!>!
override Vezel.Celerity.Language.Syntax.Tree.RecordTypeSyntax.CloseBraceToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
override Vezel.Celerity.Language.Syntax.Tree.RecordTypeSyntax.Fields.get -> Vezel.Celerity.Language.Syntax.Tree.SeparatedSyntaxItemList<Vezel.Celerity.Language.Syntax.Tree.AggregateTypeFieldSyntax!>
override Vezel.Celerity.Language.Syntax.Tree.RecordTypeSyntax.HasNodes.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.RecordTypeSyntax.HasTokens.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.RecordTypeSyntax.OpenBraceToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
override Vezel.Celerity.Language.Syntax.Tree.ReferenceTypeSyntax.ChildNodes() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!>!
override Vezel.Celerity.Language.Syntax.Tree.ReferenceTypeSyntax.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxItem!>!
override Vezel.Celerity.Language.Syntax.Tree.ReferenceTypeSyntax.ChildTokens() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!>!
override Vezel.Celerity.Language.Syntax.Tree.ReferenceTypeSyntax.HasNodes.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.ReferenceTypeSyntax.HasTokens.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.RegularReturnTypeSyntax.ChildNodes() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!>!
override Vezel.Celerity.Language.Syntax.Tree.RegularReturnTypeSyntax.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxItem!>!
override Vezel.Celerity.Language.Syntax.Tree.RegularReturnTypeSyntax.ChildTokens() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!>!
override Vezel.Celerity.Language.Syntax.Tree.RegularReturnTypeSyntax.HasNodes.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.RegularReturnTypeSyntax.HasTokens.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.RelationalExpressionSyntax.ChildNodes() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!>!
override Vezel.Celerity.Language.Syntax.Tree.RelationalExpressionSyntax.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxItem!>!
override Vezel.Celerity.Language.Syntax.Tree.RelationalExpressionSyntax.ChildTokens() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!>!
override Vezel.Celerity.Language.Syntax.Tree.RelationalExpressionSyntax.HasNodes.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.RelationalExpressionSyntax.HasTokens.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.ReturnExpressionSyntax.ChildNodes() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!>!
override Vezel.Celerity.Language.Syntax.Tree.ReturnExpressionSyntax.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxItem!>!
override Vezel.Celerity.Language.Syntax.Tree.ReturnExpressionSyntax.ChildTokens() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!>!
override Vezel.Celerity.Language.Syntax.Tree.ReturnExpressionSyntax.HasNodes.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.ReturnExpressionSyntax.HasTokens.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.ReturnTypeAnnotationRaiseSyntax.ChildNodes() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!>!
override Vezel.Celerity.Language.Syntax.Tree.ReturnTypeAnnotationRaiseSyntax.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxItem!>!
override Vezel.Celerity.Language.Syntax.Tree.ReturnTypeAnnotationRaiseSyntax.ChildTokens() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!>!
override Vezel.Celerity.Language.Syntax.Tree.ReturnTypeAnnotationRaiseSyntax.HasNodes.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.ReturnTypeAnnotationRaiseSyntax.HasTokens.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.ReturnTypeAnnotationSyntax.ChildNodes() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!>!
override Vezel.Celerity.Language.Syntax.Tree.ReturnTypeAnnotationSyntax.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxItem!>!
override Vezel.Celerity.Language.Syntax.Tree.ReturnTypeAnnotationSyntax.ChildTokens() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!>!
override Vezel.Celerity.Language.Syntax.Tree.ReturnTypeAnnotationSyntax.HasNodes.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.ReturnTypeAnnotationSyntax.HasTokens.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.SendArgumentListSyntax.ChildNodes() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!>!
override Vezel.Celerity.Language.Syntax.Tree.SendArgumentListSyntax.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxItem!>!
override Vezel.Celerity.Language.Syntax.Tree.SendArgumentListSyntax.ChildTokens() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!>!
override Vezel.Celerity.Language.Syntax.Tree.SendArgumentListSyntax.HasNodes.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.SendArgumentListSyntax.HasTokens.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.SendExpressionSyntax.ChildNodes() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!>!
override Vezel.Celerity.Language.Syntax.Tree.SendExpressionSyntax.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxItem!>!
override Vezel.Celerity.Language.Syntax.Tree.SendExpressionSyntax.ChildTokens() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!>!
override Vezel.Celerity.Language.Syntax.Tree.SendExpressionSyntax.HasNodes.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.SendExpressionSyntax.HasTokens.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.SendExpressionSyntax.Subject.get -> Vezel.Celerity.Language.Syntax.Tree.ExpressionSyntax!
override Vezel.Celerity.Language.Syntax.Tree.SeparatedSyntaxItemList<T>.ToString() -> string!
override Vezel.Celerity.Language.Syntax.Tree.SetExpressionSyntax.ChildNodes() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!>!
override Vezel.Celerity.Language.Syntax.Tree.SetExpressionSyntax.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxItem!>!
override Vezel.Celerity.Language.Syntax.Tree.SetExpressionSyntax.ChildTokens() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!>!
override Vezel.Celerity.Language.Syntax.Tree.SetExpressionSyntax.HasNodes.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.SetExpressionSyntax.HasTokens.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.SetPatternSyntax.Alias.get -> Vezel.Celerity.Language.Syntax.Tree.PatternAliasSyntax?
override Vezel.Celerity.Language.Syntax.Tree.SetPatternSyntax.ChildNodes() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!>!
override Vezel.Celerity.Language.Syntax.Tree.SetPatternSyntax.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxItem!>!
override Vezel.Celerity.Language.Syntax.Tree.SetPatternSyntax.ChildTokens() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!>!
override Vezel.Celerity.Language.Syntax.Tree.SetPatternSyntax.HasNodes.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.SetPatternSyntax.HasTokens.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.SetTypeSyntax.ChildNodes() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!>!
override Vezel.Celerity.Language.Syntax.Tree.SetTypeSyntax.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxItem!>!
override Vezel.Celerity.Language.Syntax.Tree.SetTypeSyntax.ChildTokens() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!>!
override Vezel.Celerity.Language.Syntax.Tree.SetTypeSyntax.HasNodes.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.SetTypeSyntax.HasTokens.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.ShiftExpressionSyntax.ChildNodes() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!>!
override Vezel.Celerity.Language.Syntax.Tree.ShiftExpressionSyntax.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxItem!>!
override Vezel.Celerity.Language.Syntax.Tree.ShiftExpressionSyntax.ChildTokens() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!>!
override Vezel.Celerity.Language.Syntax.Tree.ShiftExpressionSyntax.HasNodes.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.ShiftExpressionSyntax.HasTokens.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.StatementSubmissionSyntax.ChildNodes() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!>!
override Vezel.Celerity.Language.Syntax.Tree.StatementSubmissionSyntax.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxItem!>!
override Vezel.Celerity.Language.Syntax.Tree.StatementSubmissionSyntax.ChildTokens() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!>!
override Vezel.Celerity.Language.Syntax.Tree.StatementSubmissionSyntax.HasNodes.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.StatementSubmissionSyntax.HasTokens.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.StringPatternSyntax.Alias.get -> Vezel.Celerity.Language.Syntax.Tree.PatternAliasSyntax?
override Vezel.Celerity.Language.Syntax.Tree.StringPatternSyntax.ChildNodes() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!>!
override Vezel.Celerity.Language.Syntax.Tree.StringPatternSyntax.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxItem!>!
override Vezel.Celerity.Language.Syntax.Tree.StringPatternSyntax.ChildTokens() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!>!
override Vezel.Celerity.Language.Syntax.Tree.StringPatternSyntax.HasNodes.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.StringPatternSyntax.HasTokens.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.StringTypeSyntax.ChildNodes() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!>!
override Vezel.Celerity.Language.Syntax.Tree.StringTypeSyntax.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxItem!>!
override Vezel.Celerity.Language.Syntax.Tree.StringTypeSyntax.ChildTokens() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!>!
override Vezel.Celerity.Language.Syntax.Tree.StringTypeSyntax.HasNodes.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.StringTypeSyntax.HasTokens.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.SyntaxItem.ToString() -> string!
override Vezel.Celerity.Language.Syntax.Tree.SyntaxItemList<T>.ToString() -> string!
override Vezel.Celerity.Language.Syntax.Tree.SyntaxToken.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxTrivia!>!
override Vezel.Celerity.Language.Syntax.Tree.SyntaxToken.Descendants() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxTrivia!>!
override Vezel.Celerity.Language.Syntax.Tree.SyntaxToken.FullSpan.get -> Vezel.Celerity.Language.Text.SourceTextSpan
override Vezel.Celerity.Language.Syntax.Tree.SyntaxToken.HasChildren.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.SyntaxToken.Span.get -> Vezel.Celerity.Language.Text.SourceTextSpan
override Vezel.Celerity.Language.Syntax.Tree.SyntaxToken.ToFullString() -> string!
override Vezel.Celerity.Language.Syntax.Tree.SyntaxTrivia.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxTerminal!>!
override Vezel.Celerity.Language.Syntax.Tree.SyntaxTrivia.Descendants() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxTerminal!>!
override Vezel.Celerity.Language.Syntax.Tree.SyntaxTrivia.FullSpan.get -> Vezel.Celerity.Language.Text.SourceTextSpan
override Vezel.Celerity.Language.Syntax.Tree.SyntaxTrivia.HasChildren.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.SyntaxTrivia.Span.get -> Vezel.Celerity.Language.Text.SourceTextSpan
override Vezel.Celerity.Language.Syntax.Tree.SyntaxTrivia.ToFullString() -> string!
override Vezel.Celerity.Language.Syntax.Tree.TestDeclarationSyntax.Attributes.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxItemList<Vezel.Celerity.Language.Syntax.Tree.AttributeSyntax!>
override Vezel.Celerity.Language.Syntax.Tree.TestDeclarationSyntax.Body.get -> Vezel.Celerity.Language.Syntax.Tree.BlockExpressionSyntax!
override Vezel.Celerity.Language.Syntax.Tree.TestDeclarationSyntax.ChildNodes() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!>!
override Vezel.Celerity.Language.Syntax.Tree.TestDeclarationSyntax.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxItem!>!
override Vezel.Celerity.Language.Syntax.Tree.TestDeclarationSyntax.ChildTokens() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!>!
override Vezel.Celerity.Language.Syntax.Tree.TestDeclarationSyntax.HasNodes.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.TestDeclarationSyntax.HasTokens.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.TestDeclarationSyntax.NameToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
override Vezel.Celerity.Language.Syntax.Tree.ThisExpressionSyntax.ChildNodes() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!>!
override Vezel.Celerity.Language.Syntax.Tree.ThisExpressionSyntax.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxItem!>!
override Vezel.Celerity.Language.Syntax.Tree.ThisExpressionSyntax.ChildTokens() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!>!
override Vezel.Celerity.Language.Syntax.Tree.ThisExpressionSyntax.HasNodes.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.ThisExpressionSyntax.HasTokens.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.TryExpressionSyntax.ChildNodes() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!>!
override Vezel.Celerity.Language.Syntax.Tree.TryExpressionSyntax.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxItem!>!
override Vezel.Celerity.Language.Syntax.Tree.TryExpressionSyntax.ChildTokens() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!>!
override Vezel.Celerity.Language.Syntax.Tree.TryExpressionSyntax.HasNodes.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.TryExpressionSyntax.HasTokens.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.TupleExpressionSyntax.ChildNodes() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!>!
override Vezel.Celerity.Language.Syntax.Tree.TupleExpressionSyntax.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxItem!>!
override Vezel.Celerity.Language.Syntax.Tree.TupleExpressionSyntax.ChildTokens() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!>!
override Vezel.Celerity.Language.Syntax.Tree.TupleExpressionSyntax.HasNodes.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.TupleExpressionSyntax.HasTokens.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.TuplePatternSyntax.Alias.get -> Vezel.Celerity.Language.Syntax.Tree.PatternAliasSyntax?
override Vezel.Celerity.Language.Syntax.Tree.TuplePatternSyntax.ChildNodes() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!>!
override Vezel.Celerity.Language.Syntax.Tree.TuplePatternSyntax.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxItem!>!
override Vezel.Celerity.Language.Syntax.Tree.TuplePatternSyntax.ChildTokens() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!>!
override Vezel.Celerity.Language.Syntax.Tree.TuplePatternSyntax.HasNodes.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.TuplePatternSyntax.HasTokens.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.TupleTypeSyntax.ChildNodes() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!>!
override Vezel.Celerity.Language.Syntax.Tree.TupleTypeSyntax.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxItem!>!
override Vezel.Celerity.Language.Syntax.Tree.TupleTypeSyntax.ChildTokens() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!>!
override Vezel.Celerity.Language.Syntax.Tree.TupleTypeSyntax.HasNodes.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.TupleTypeSyntax.HasTokens.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.TypeAnnotationSyntax.ChildNodes() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!>!
override Vezel.Celerity.Language.Syntax.Tree.TypeAnnotationSyntax.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxItem!>!
override Vezel.Celerity.Language.Syntax.Tree.TypeAnnotationSyntax.ChildTokens() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!>!
override Vezel.Celerity.Language.Syntax.Tree.TypeAnnotationSyntax.HasNodes.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.TypeAnnotationSyntax.HasTokens.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.TypeDeclarationSyntax.Attributes.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxItemList<Vezel.Celerity.Language.Syntax.Tree.AttributeSyntax!>
override Vezel.Celerity.Language.Syntax.Tree.TypeDeclarationSyntax.ChildNodes() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!>!
override Vezel.Celerity.Language.Syntax.Tree.TypeDeclarationSyntax.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxItem!>!
override Vezel.Celerity.Language.Syntax.Tree.TypeDeclarationSyntax.ChildTokens() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!>!
override Vezel.Celerity.Language.Syntax.Tree.TypeDeclarationSyntax.HasNodes.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.TypeDeclarationSyntax.HasTokens.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.TypeParameterListSyntax.ChildNodes() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!>!
override Vezel.Celerity.Language.Syntax.Tree.TypeParameterListSyntax.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxItem!>!
override Vezel.Celerity.Language.Syntax.Tree.TypeParameterListSyntax.ChildTokens() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!>!
override Vezel.Celerity.Language.Syntax.Tree.TypeParameterListSyntax.HasNodes.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.TypeParameterListSyntax.HasTokens.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.TypeParameterSyntax.ChildNodes() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!>!
override Vezel.Celerity.Language.Syntax.Tree.TypeParameterSyntax.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxItem!>!
override Vezel.Celerity.Language.Syntax.Tree.TypeParameterSyntax.ChildTokens() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!>!
override Vezel.Celerity.Language.Syntax.Tree.TypeParameterSyntax.HasNodes.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.TypeParameterSyntax.HasTokens.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.UnaryExpressionSyntax.ChildNodes() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!>!
override Vezel.Celerity.Language.Syntax.Tree.UnaryExpressionSyntax.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxItem!>!
override Vezel.Celerity.Language.Syntax.Tree.UnaryExpressionSyntax.ChildTokens() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!>!
override Vezel.Celerity.Language.Syntax.Tree.UnaryExpressionSyntax.HasNodes.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.UnaryExpressionSyntax.HasTokens.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.UnionTypeSyntax.ChildNodes() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!>!
override Vezel.Celerity.Language.Syntax.Tree.UnionTypeSyntax.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxItem!>!
override Vezel.Celerity.Language.Syntax.Tree.UnionTypeSyntax.ChildTokens() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!>!
override Vezel.Celerity.Language.Syntax.Tree.UnionTypeSyntax.HasNodes.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.UnionTypeSyntax.HasTokens.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.UnknownTypeSyntax.ChildNodes() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!>!
override Vezel.Celerity.Language.Syntax.Tree.UnknownTypeSyntax.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxItem!>!
override Vezel.Celerity.Language.Syntax.Tree.UnknownTypeSyntax.ChildTokens() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!>!
override Vezel.Celerity.Language.Syntax.Tree.UnknownTypeSyntax.HasNodes.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.UnknownTypeSyntax.HasTokens.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.UseDeclarationSyntax.Attributes.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxItemList<Vezel.Celerity.Language.Syntax.Tree.AttributeSyntax!>
override Vezel.Celerity.Language.Syntax.Tree.UseDeclarationSyntax.ChildNodes() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!>!
override Vezel.Celerity.Language.Syntax.Tree.UseDeclarationSyntax.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxItem!>!
override Vezel.Celerity.Language.Syntax.Tree.UseDeclarationSyntax.ChildTokens() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!>!
override Vezel.Celerity.Language.Syntax.Tree.UseDeclarationSyntax.HasNodes.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.UseDeclarationSyntax.HasTokens.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.VariableBindingSyntax.ChildNodes() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!>!
override Vezel.Celerity.Language.Syntax.Tree.VariableBindingSyntax.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxItem!>!
override Vezel.Celerity.Language.Syntax.Tree.VariableBindingSyntax.ChildTokens() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!>!
override Vezel.Celerity.Language.Syntax.Tree.VariableBindingSyntax.HasNodes.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.VariableBindingSyntax.HasTokens.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.VariableBindingSyntax.NameToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
override Vezel.Celerity.Language.Syntax.Tree.VariableTypeConstraintSyntax.ChildNodes() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!>!
override Vezel.Celerity.Language.Syntax.Tree.VariableTypeConstraintSyntax.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxItem!>!
override Vezel.Celerity.Language.Syntax.Tree.VariableTypeConstraintSyntax.ChildTokens() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!>!
override Vezel.Celerity.Language.Syntax.Tree.VariableTypeConstraintSyntax.HasNodes.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.VariableTypeConstraintSyntax.HasTokens.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.VariableTypeSyntax.ChildNodes() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!>!
override Vezel.Celerity.Language.Syntax.Tree.VariableTypeSyntax.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxItem!>!
override Vezel.Celerity.Language.Syntax.Tree.VariableTypeSyntax.ChildTokens() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!>!
override Vezel.Celerity.Language.Syntax.Tree.VariableTypeSyntax.HasNodes.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.VariableTypeSyntax.HasTokens.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.WhileExpressionSyntax.ChildNodes() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!>!
override Vezel.Celerity.Language.Syntax.Tree.WhileExpressionSyntax.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxItem!>!
override Vezel.Celerity.Language.Syntax.Tree.WhileExpressionSyntax.ChildTokens() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!>!
override Vezel.Celerity.Language.Syntax.Tree.WhileExpressionSyntax.HasNodes.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.WhileExpressionSyntax.HasTokens.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.WildcardPatternSyntax.Alias.get -> Vezel.Celerity.Language.Syntax.Tree.PatternAliasSyntax?
override Vezel.Celerity.Language.Syntax.Tree.WildcardPatternSyntax.ChildNodes() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!>!
override Vezel.Celerity.Language.Syntax.Tree.WildcardPatternSyntax.Children() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxItem!>!
override Vezel.Celerity.Language.Syntax.Tree.WildcardPatternSyntax.ChildTokens() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!>!
override Vezel.Celerity.Language.Syntax.Tree.WildcardPatternSyntax.HasNodes.get -> bool
override Vezel.Celerity.Language.Syntax.Tree.WildcardPatternSyntax.HasTokens.get -> bool
override Vezel.Celerity.Language.Text.SourceTextLine.Equals(object? obj) -> bool
override Vezel.Celerity.Language.Text.SourceTextLine.GetHashCode() -> int
override Vezel.Celerity.Language.Text.SourceTextLine.ToString() -> string!
override Vezel.Celerity.Language.Text.SourceTextLinePosition.Equals(object? obj) -> bool
override Vezel.Celerity.Language.Text.SourceTextLinePosition.GetHashCode() -> int
override Vezel.Celerity.Language.Text.SourceTextLinePosition.ToString() -> string!
override Vezel.Celerity.Language.Text.SourceTextLocation.Equals(object? obj) -> bool
override Vezel.Celerity.Language.Text.SourceTextLocation.GetHashCode() -> int
override Vezel.Celerity.Language.Text.SourceTextLocation.ToString() -> string!
override Vezel.Celerity.Language.Text.SourceTextSpan.Equals(object? obj) -> bool
override Vezel.Celerity.Language.Text.SourceTextSpan.GetHashCode() -> int
override Vezel.Celerity.Language.Text.SourceTextSpan.ToString() -> string!
override Vezel.Celerity.Language.Text.StringSourceText.Count.get -> int
override Vezel.Celerity.Language.Text.StringSourceText.GetEnumerator() -> System.CharEnumerator!
override Vezel.Celerity.Language.Text.StringSourceText.this[int index].get -> char
override Vezel.Celerity.Language.Text.StringSourceText.ToString(Vezel.Celerity.Language.Text.SourceTextSpan span) -> string!
static Vezel.Celerity.Language.Diagnostics.Diagnostic.Create(Vezel.Celerity.Language.Syntax.SyntaxTree! tree, Vezel.Celerity.Language.Text.SourceTextSpan span, Vezel.Celerity.Language.Diagnostics.DiagnosticSeverity severity, Vezel.Celerity.Language.Diagnostics.DiagnosticCode code, string! message, params (Vezel.Celerity.Language.Text.SourceTextSpan Span, string! Message)[]! notes) -> Vezel.Celerity.Language.Diagnostics.Diagnostic!
static Vezel.Celerity.Language.Diagnostics.Diagnostic.Create(Vezel.Celerity.Language.Syntax.SyntaxTree! tree, Vezel.Celerity.Language.Text.SourceTextSpan span, Vezel.Celerity.Language.Diagnostics.DiagnosticSeverity severity, Vezel.Celerity.Language.Diagnostics.DiagnosticCode code, string! message, System.Collections.Generic.IEnumerable<(Vezel.Celerity.Language.Text.SourceTextSpan Span, string! Message)>! notes) -> Vezel.Celerity.Language.Diagnostics.Diagnostic!
static Vezel.Celerity.Language.Diagnostics.DiagnosticCode.Create(string! name) -> Vezel.Celerity.Language.Diagnostics.DiagnosticCode
static Vezel.Celerity.Language.Diagnostics.DiagnosticCode.operator !=(Vezel.Celerity.Language.Diagnostics.DiagnosticCode left, Vezel.Celerity.Language.Diagnostics.DiagnosticCode right) -> bool
static Vezel.Celerity.Language.Diagnostics.DiagnosticCode.operator ==(Vezel.Celerity.Language.Diagnostics.DiagnosticCode left, Vezel.Celerity.Language.Diagnostics.DiagnosticCode right) -> bool
static Vezel.Celerity.Language.Diagnostics.DiagnosticCode.TryCreate(string! name, out Vezel.Celerity.Language.Diagnostics.DiagnosticCode code) -> bool
static Vezel.Celerity.Language.ModulePath.Create(params string![]! components) -> Vezel.Celerity.Language.ModulePath!
static Vezel.Celerity.Language.ModulePath.Create(System.Collections.Generic.IEnumerable<string!>! components) -> Vezel.Celerity.Language.ModulePath!
static Vezel.Celerity.Language.ModulePath.operator !=(Vezel.Celerity.Language.ModulePath? left, Vezel.Celerity.Language.ModulePath? right) -> bool
static Vezel.Celerity.Language.ModulePath.operator ==(Vezel.Celerity.Language.ModulePath? left, Vezel.Celerity.Language.ModulePath? right) -> bool
static Vezel.Celerity.Language.ModulePath.TryCreate(string! value, out Vezel.Celerity.Language.ModulePath? path) -> bool
static Vezel.Celerity.Language.ModulePath.TryCreate(System.Collections.Generic.IEnumerable<string!>! components, out Vezel.Celerity.Language.ModulePath? path) -> bool
static Vezel.Celerity.Language.Nil.operator !=(Vezel.Celerity.Language.Nil? left, Vezel.Celerity.Language.Nil? right) -> bool
static Vezel.Celerity.Language.Nil.operator <(Vezel.Celerity.Language.Nil! left, Vezel.Celerity.Language.Nil! right) -> bool
static Vezel.Celerity.Language.Nil.operator <=(Vezel.Celerity.Language.Nil! left, Vezel.Celerity.Language.Nil! right) -> bool
static Vezel.Celerity.Language.Nil.operator ==(Vezel.Celerity.Language.Nil? left, Vezel.Celerity.Language.Nil? right) -> bool
static Vezel.Celerity.Language.Nil.operator >(Vezel.Celerity.Language.Nil! left, Vezel.Celerity.Language.Nil! right) -> bool
static Vezel.Celerity.Language.Nil.operator >=(Vezel.Celerity.Language.Nil! left, Vezel.Celerity.Language.Nil! right) -> bool
static Vezel.Celerity.Language.Nil.Value.get -> Vezel.Celerity.Language.Nil!
static Vezel.Celerity.Language.Quality.LintConfiguration.Default.get -> Vezel.Celerity.Language.Quality.LintConfiguration!
static Vezel.Celerity.Language.Quality.LintPass.DefaultPasses.get -> System.Collections.Immutable.ImmutableArray<Vezel.Celerity.Language.Quality.LintPass!>
static Vezel.Celerity.Language.Quality.Passes.TestWithoutAssertPass.Instance.get -> Vezel.Celerity.Language.Quality.Passes.TestWithoutAssertPass!
static Vezel.Celerity.Language.Quality.Passes.UndocumentedPublicSymbolPass.Instance.get -> Vezel.Celerity.Language.Quality.Passes.UndocumentedPublicSymbolPass!
static Vezel.Celerity.Language.Quality.Passes.UnreachableCodePass.Instance.get -> Vezel.Celerity.Language.Quality.Passes.UnreachableCodePass!
static Vezel.Celerity.Language.Quality.Passes.UnusedLocalSymbolPass.Instance.get -> Vezel.Celerity.Language.Quality.Passes.UnusedLocalSymbolPass!
static Vezel.Celerity.Language.Quality.Passes.UppercaseBaseIndicatorPass.Instance.get -> Vezel.Celerity.Language.Quality.Passes.UppercaseBaseIndicatorPass!
static Vezel.Celerity.Language.Semantics.Binding.InteractiveContext.Default.get -> Vezel.Celerity.Language.Semantics.Binding.InteractiveContext!
static Vezel.Celerity.Language.Semantics.SemanticTree.Analyze(Vezel.Celerity.Language.Syntax.SyntaxTree! syntax, Vezel.Celerity.Language.Semantics.Binding.InteractiveContext? context, params Vezel.Celerity.Language.Semantics.DiagnosticAnalyzer![]! analyzers) -> Vezel.Celerity.Language.Semantics.SemanticTree!
static Vezel.Celerity.Language.Semantics.SemanticTree.Analyze(Vezel.Celerity.Language.Syntax.SyntaxTree! syntax, Vezel.Celerity.Language.Semantics.Binding.InteractiveContext? context, System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Semantics.DiagnosticAnalyzer!>! analyzers) -> Vezel.Celerity.Language.Semantics.SemanticTree!
static Vezel.Celerity.Language.StandardDiagnosticCodes.DuplicateAggregateExpressionField.get -> Vezel.Celerity.Language.Diagnostics.DiagnosticCode
static Vezel.Celerity.Language.StandardDiagnosticCodes.DuplicateAggregatePatternField.get -> Vezel.Celerity.Language.Diagnostics.DiagnosticCode
static Vezel.Celerity.Language.StandardDiagnosticCodes.DuplicateCodeDeclaration.get -> Vezel.Celerity.Language.Diagnostics.DiagnosticCode
static Vezel.Celerity.Language.StandardDiagnosticCodes.DuplicateParameterBinding.get -> Vezel.Celerity.Language.Diagnostics.DiagnosticCode
static Vezel.Celerity.Language.StandardDiagnosticCodes.DuplicateStandardAttribute.get -> Vezel.Celerity.Language.Diagnostics.DiagnosticCode
static Vezel.Celerity.Language.StandardDiagnosticCodes.DuplicateUseDeclaration.get -> Vezel.Celerity.Language.Diagnostics.DiagnosticCode
static Vezel.Celerity.Language.StandardDiagnosticCodes.DuplicateVariableBinding.get -> Vezel.Celerity.Language.Diagnostics.DiagnosticCode
static Vezel.Celerity.Language.StandardDiagnosticCodes.ErrorInInfallibleContext.get -> Vezel.Celerity.Language.Diagnostics.DiagnosticCode
static Vezel.Celerity.Language.StandardDiagnosticCodes.ExpectedToken.get -> Vezel.Celerity.Language.Diagnostics.DiagnosticCode
static Vezel.Celerity.Language.StandardDiagnosticCodes.IllegalTestReference.get -> Vezel.Celerity.Language.Diagnostics.DiagnosticCode
static Vezel.Celerity.Language.StandardDiagnosticCodes.ImmutableAssignmentTarget.get -> Vezel.Celerity.Language.Diagnostics.DiagnosticCode
static Vezel.Celerity.Language.StandardDiagnosticCodes.ImproperBlockStringLiteral.get -> Vezel.Celerity.Language.Diagnostics.DiagnosticCode
static Vezel.Celerity.Language.StandardDiagnosticCodes.ImproperTailCall.get -> Vezel.Celerity.Language.Diagnostics.DiagnosticCode
static Vezel.Celerity.Language.StandardDiagnosticCodes.IncompleteBlockStringLiteral.get -> Vezel.Celerity.Language.Diagnostics.DiagnosticCode
static Vezel.Celerity.Language.StandardDiagnosticCodes.IncompleteEscapeSequence.get -> Vezel.Celerity.Language.Diagnostics.DiagnosticCode
static Vezel.Celerity.Language.StandardDiagnosticCodes.IncompleteExclamationEquals.get -> Vezel.Celerity.Language.Diagnostics.DiagnosticCode
static Vezel.Celerity.Language.StandardDiagnosticCodes.IncompleteIntegerLiteral.get -> Vezel.Celerity.Language.Diagnostics.DiagnosticCode
static Vezel.Celerity.Language.StandardDiagnosticCodes.IncompleteRealLiteral.get -> Vezel.Celerity.Language.Diagnostics.DiagnosticCode
static Vezel.Celerity.Language.StandardDiagnosticCodes.IncompleteStringLiteral.get -> Vezel.Celerity.Language.Diagnostics.DiagnosticCode
static Vezel.Celerity.Language.StandardDiagnosticCodes.IncompleteUnicodeEscapeSequence.get -> Vezel.Celerity.Language.Diagnostics.DiagnosticCode
static Vezel.Celerity.Language.StandardDiagnosticCodes.IncompleteVerbatimStringLiteral.get -> Vezel.Celerity.Language.Diagnostics.DiagnosticCode
static Vezel.Celerity.Language.StandardDiagnosticCodes.InvalidAssignmentTarget.get -> Vezel.Celerity.Language.Diagnostics.DiagnosticCode
static Vezel.Celerity.Language.StandardDiagnosticCodes.InvalidIntegerLiteral.get -> Vezel.Celerity.Language.Diagnostics.DiagnosticCode
static Vezel.Celerity.Language.StandardDiagnosticCodes.InvalidRealLiteral.get -> Vezel.Celerity.Language.Diagnostics.DiagnosticCode
static Vezel.Celerity.Language.StandardDiagnosticCodes.InvalidStandardAttributeTarget.get -> Vezel.Celerity.Language.Diagnostics.DiagnosticCode
static Vezel.Celerity.Language.StandardDiagnosticCodes.InvalidStandardAttributeValue.get -> Vezel.Celerity.Language.Diagnostics.DiagnosticCode
static Vezel.Celerity.Language.StandardDiagnosticCodes.InvalidUnicodeEscapeSequence.get -> Vezel.Celerity.Language.Diagnostics.DiagnosticCode
static Vezel.Celerity.Language.StandardDiagnosticCodes.MissingBinding.get -> Vezel.Celerity.Language.Diagnostics.DiagnosticCode
static Vezel.Celerity.Language.StandardDiagnosticCodes.MissingDeclaration.get -> Vezel.Celerity.Language.Diagnostics.DiagnosticCode
static Vezel.Celerity.Language.StandardDiagnosticCodes.MissingEnclosingFunction.get -> Vezel.Celerity.Language.Diagnostics.DiagnosticCode
static Vezel.Celerity.Language.StandardDiagnosticCodes.MissingEnclosingLambda.get -> Vezel.Celerity.Language.Diagnostics.DiagnosticCode
static Vezel.Celerity.Language.StandardDiagnosticCodes.MissingEnclosingLoop.get -> Vezel.Celerity.Language.Diagnostics.DiagnosticCode
static Vezel.Celerity.Language.StandardDiagnosticCodes.MissingExpression.get -> Vezel.Celerity.Language.Diagnostics.DiagnosticCode
static Vezel.Celerity.Language.StandardDiagnosticCodes.MissingPattern.get -> Vezel.Celerity.Language.Diagnostics.DiagnosticCode
static Vezel.Celerity.Language.StandardDiagnosticCodes.MissingStatement.get -> Vezel.Celerity.Language.Diagnostics.DiagnosticCode
static Vezel.Celerity.Language.StandardDiagnosticCodes.MissingType.get -> Vezel.Celerity.Language.Diagnostics.DiagnosticCode
static Vezel.Celerity.Language.StandardDiagnosticCodes.UnexpectedTokens.get -> Vezel.Celerity.Language.Diagnostics.DiagnosticCode
static Vezel.Celerity.Language.StandardDiagnosticCodes.UnrecognizedCharacter.get -> Vezel.Celerity.Language.Diagnostics.DiagnosticCode
static Vezel.Celerity.Language.StandardDiagnosticCodes.UnresolvedIdentifier.get -> Vezel.Celerity.Language.Diagnostics.DiagnosticCode
static Vezel.Celerity.Language.StandardDiagnosticCodes.UnsupportedNewLineCharacter.get -> Vezel.Celerity.Language.Diagnostics.DiagnosticCode
static Vezel.Celerity.Language.StandardDiagnosticCodes.UnsupportedWhiteSpaceCharacter.get -> Vezel.Celerity.Language.Diagnostics.DiagnosticCode
static Vezel.Celerity.Language.StandardDiagnosticCodes.UselessTrailingAttributes.get -> Vezel.Celerity.Language.Diagnostics.DiagnosticCode
static Vezel.Celerity.Language.Syntax.SyntaxFacts.GetKeywordLiteralKind(scoped System.ReadOnlySpan<char> text) -> Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind?
static Vezel.Celerity.Language.Syntax.SyntaxFacts.GetRegularKeywordKind(scoped System.ReadOnlySpan<char> text) -> Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind?
static Vezel.Celerity.Language.Syntax.SyntaxFacts.GetReservedKeywordKind(scoped System.ReadOnlySpan<char> text) -> Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind?
static Vezel.Celerity.Language.Syntax.SyntaxFacts.GetTypeKeywordKind(scoped System.ReadOnlySpan<char> text) -> Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind?
static Vezel.Celerity.Language.Syntax.SyntaxFacts.IsBindingIdentifier(scoped System.ReadOnlySpan<char> text) -> bool
static Vezel.Celerity.Language.Syntax.SyntaxFacts.IsBindingIdentifier(Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind kind) -> bool
static Vezel.Celerity.Language.Syntax.SyntaxFacts.IsCodeIdentifier(scoped System.ReadOnlySpan<char> text) -> bool
static Vezel.Celerity.Language.Syntax.SyntaxFacts.IsCodeIdentifier(Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind kind) -> bool
static Vezel.Celerity.Language.Syntax.SyntaxFacts.IsCustomOperator(Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind kind) -> bool
static Vezel.Celerity.Language.Syntax.SyntaxFacts.IsDeclarationStarter(Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind kind) -> bool
static Vezel.Celerity.Language.Syntax.SyntaxFacts.IsDeclarationSubmissionStarter(Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind kind) -> bool
static Vezel.Celerity.Language.Syntax.SyntaxFacts.IsDiscardIdentifier(scoped System.ReadOnlySpan<char> text) -> bool
static Vezel.Celerity.Language.Syntax.SyntaxFacts.IsExpressionStarter(Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind kind) -> bool
static Vezel.Celerity.Language.Syntax.SyntaxFacts.IsLiteral(Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind kind) -> bool
static Vezel.Celerity.Language.Syntax.SyntaxFacts.IsLiteralKeyword(Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind kind) -> bool
static Vezel.Celerity.Language.Syntax.SyntaxFacts.IsLowerIdentifier(scoped System.ReadOnlySpan<char> text) -> bool
static Vezel.Celerity.Language.Syntax.SyntaxFacts.IsRegularKeyword(Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind kind) -> bool
static Vezel.Celerity.Language.Syntax.SyntaxFacts.IsReservedKeyword(Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind kind) -> bool
static Vezel.Celerity.Language.Syntax.SyntaxFacts.IsStatementStarter(Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind kind) -> bool
static Vezel.Celerity.Language.Syntax.SyntaxFacts.IsStatementSubmissionStarter(Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind kind) -> bool
static Vezel.Celerity.Language.Syntax.SyntaxFacts.IsSubmissionStarter(Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind kind) -> bool
static Vezel.Celerity.Language.Syntax.SyntaxFacts.IsTypeKeyword(Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind kind) -> bool
static Vezel.Celerity.Language.Syntax.SyntaxFacts.IsUpperIdentifier(scoped System.ReadOnlySpan<char> text) -> bool
static Vezel.Celerity.Language.Syntax.SyntaxTree.Parse(Vezel.Celerity.Language.Text.SourceText! text, Vezel.Celerity.Language.Syntax.SyntaxMode mode, bool discardText = false) -> Vezel.Celerity.Language.Syntax.SyntaxTree!
static Vezel.Celerity.Language.Text.SourceTextLine.operator !=(Vezel.Celerity.Language.Text.SourceTextLine left, Vezel.Celerity.Language.Text.SourceTextLine right) -> bool
static Vezel.Celerity.Language.Text.SourceTextLine.operator ==(Vezel.Celerity.Language.Text.SourceTextLine left, Vezel.Celerity.Language.Text.SourceTextLine right) -> bool
static Vezel.Celerity.Language.Text.SourceTextLinePosition.operator !=(Vezel.Celerity.Language.Text.SourceTextLinePosition left, Vezel.Celerity.Language.Text.SourceTextLinePosition right) -> bool
static Vezel.Celerity.Language.Text.SourceTextLinePosition.operator <(Vezel.Celerity.Language.Text.SourceTextLinePosition left, Vezel.Celerity.Language.Text.SourceTextLinePosition right) -> bool
static Vezel.Celerity.Language.Text.SourceTextLinePosition.operator <=(Vezel.Celerity.Language.Text.SourceTextLinePosition left, Vezel.Celerity.Language.Text.SourceTextLinePosition right) -> bool
static Vezel.Celerity.Language.Text.SourceTextLinePosition.operator ==(Vezel.Celerity.Language.Text.SourceTextLinePosition left, Vezel.Celerity.Language.Text.SourceTextLinePosition right) -> bool
static Vezel.Celerity.Language.Text.SourceTextLinePosition.operator >(Vezel.Celerity.Language.Text.SourceTextLinePosition left, Vezel.Celerity.Language.Text.SourceTextLinePosition right) -> bool
static Vezel.Celerity.Language.Text.SourceTextLinePosition.operator >=(Vezel.Celerity.Language.Text.SourceTextLinePosition left, Vezel.Celerity.Language.Text.SourceTextLinePosition right) -> bool
static Vezel.Celerity.Language.Text.SourceTextLocation.operator !=(Vezel.Celerity.Language.Text.SourceTextLocation? left, Vezel.Celerity.Language.Text.SourceTextLocation? right) -> bool
static Vezel.Celerity.Language.Text.SourceTextLocation.operator ==(Vezel.Celerity.Language.Text.SourceTextLocation? left, Vezel.Celerity.Language.Text.SourceTextLocation? right) -> bool
static Vezel.Celerity.Language.Text.SourceTextSpan.Empty.get -> Vezel.Celerity.Language.Text.SourceTextSpan
static Vezel.Celerity.Language.Text.SourceTextSpan.operator !=(Vezel.Celerity.Language.Text.SourceTextSpan left, Vezel.Celerity.Language.Text.SourceTextSpan right) -> bool
static Vezel.Celerity.Language.Text.SourceTextSpan.operator <(Vezel.Celerity.Language.Text.SourceTextSpan left, Vezel.Celerity.Language.Text.SourceTextSpan right) -> bool
static Vezel.Celerity.Language.Text.SourceTextSpan.operator <=(Vezel.Celerity.Language.Text.SourceTextSpan left, Vezel.Celerity.Language.Text.SourceTextSpan right) -> bool
static Vezel.Celerity.Language.Text.SourceTextSpan.operator ==(Vezel.Celerity.Language.Text.SourceTextSpan left, Vezel.Celerity.Language.Text.SourceTextSpan right) -> bool
static Vezel.Celerity.Language.Text.SourceTextSpan.operator >(Vezel.Celerity.Language.Text.SourceTextSpan left, Vezel.Celerity.Language.Text.SourceTextSpan right) -> bool
static Vezel.Celerity.Language.Text.SourceTextSpan.operator >=(Vezel.Celerity.Language.Text.SourceTextSpan left, Vezel.Celerity.Language.Text.SourceTextSpan right) -> bool
static Vezel.Celerity.Language.Text.SourceTextSpan.Union(Vezel.Celerity.Language.Text.SourceTextSpan first, Vezel.Celerity.Language.Text.SourceTextSpan second) -> Vezel.Celerity.Language.Text.SourceTextSpan
static Vezel.Celerity.Language.Text.TextFacts.IsNewLine(char value) -> bool
static Vezel.Celerity.Language.Text.TextFacts.IsWhiteSpace(char value) -> bool
Vezel.Celerity.Language.Diagnostics.Diagnostic
Vezel.Celerity.Language.Diagnostics.Diagnostic.Code.get -> Vezel.Celerity.Language.Diagnostics.DiagnosticCode
Vezel.Celerity.Language.Diagnostics.Diagnostic.GetLocation() -> Vezel.Celerity.Language.Text.SourceTextLocation!
Vezel.Celerity.Language.Diagnostics.Diagnostic.IsError.get -> bool
Vezel.Celerity.Language.Diagnostics.Diagnostic.Message.get -> string!
Vezel.Celerity.Language.Diagnostics.Diagnostic.Notes.get -> System.Collections.Immutable.ImmutableArray<Vezel.Celerity.Language.Diagnostics.DiagnosticNote!>
Vezel.Celerity.Language.Diagnostics.Diagnostic.Severity.get -> Vezel.Celerity.Language.Diagnostics.DiagnosticSeverity
Vezel.Celerity.Language.Diagnostics.Diagnostic.Span.get -> Vezel.Celerity.Language.Text.SourceTextSpan
Vezel.Celerity.Language.Diagnostics.Diagnostic.Tree.get -> Vezel.Celerity.Language.Syntax.SyntaxTree!
Vezel.Celerity.Language.Diagnostics.DiagnosticCode
Vezel.Celerity.Language.Diagnostics.DiagnosticCode.Code.get -> string!
Vezel.Celerity.Language.Diagnostics.DiagnosticCode.DiagnosticCode() -> void
Vezel.Celerity.Language.Diagnostics.DiagnosticCode.Equals(Vezel.Celerity.Language.Diagnostics.DiagnosticCode other) -> bool
Vezel.Celerity.Language.Diagnostics.DiagnosticCode.IsStandard.get -> bool
Vezel.Celerity.Language.Diagnostics.DiagnosticNote
Vezel.Celerity.Language.Diagnostics.DiagnosticNote.GetLocation() -> Vezel.Celerity.Language.Text.SourceTextLocation!
Vezel.Celerity.Language.Diagnostics.DiagnosticNote.Message.get -> string!
Vezel.Celerity.Language.Diagnostics.DiagnosticNote.Parent.get -> Vezel.Celerity.Language.Diagnostics.Diagnostic!
Vezel.Celerity.Language.Diagnostics.DiagnosticNote.Span.get -> Vezel.Celerity.Language.Text.SourceTextSpan
Vezel.Celerity.Language.Diagnostics.DiagnosticSeverity
Vezel.Celerity.Language.Diagnostics.DiagnosticSeverity.Error = 2 -> Vezel.Celerity.Language.Diagnostics.DiagnosticSeverity
Vezel.Celerity.Language.Diagnostics.DiagnosticSeverity.None = 0 -> Vezel.Celerity.Language.Diagnostics.DiagnosticSeverity
Vezel.Celerity.Language.Diagnostics.DiagnosticSeverity.Warning = 1 -> Vezel.Celerity.Language.Diagnostics.DiagnosticSeverity
Vezel.Celerity.Language.ModulePath
Vezel.Celerity.Language.ModulePath.Components.get -> System.Collections.Immutable.ImmutableArray<string!>
Vezel.Celerity.Language.ModulePath.Equals(Vezel.Celerity.Language.ModulePath? other) -> bool
Vezel.Celerity.Language.ModulePath.FullPath.get -> string!
Vezel.Celerity.Language.Nil
Vezel.Celerity.Language.Nil.CompareTo(Vezel.Celerity.Language.Nil? other) -> int
Vezel.Celerity.Language.Nil.Equals(Vezel.Celerity.Language.Nil? other) -> bool
Vezel.Celerity.Language.Quality.LintConfiguration
Vezel.Celerity.Language.Quality.LintConfiguration.TryGetSeverity(Vezel.Celerity.Language.Diagnostics.DiagnosticCode code, out Vezel.Celerity.Language.Diagnostics.DiagnosticSeverity severity) -> bool
Vezel.Celerity.Language.Quality.LintConfiguration.WithoutSeverity(Vezel.Celerity.Language.Diagnostics.DiagnosticCode code) -> Vezel.Celerity.Language.Quality.LintConfiguration!
Vezel.Celerity.Language.Quality.LintConfiguration.WithSeverity(Vezel.Celerity.Language.Diagnostics.DiagnosticCode code, Vezel.Celerity.Language.Diagnostics.DiagnosticSeverity severity) -> Vezel.Celerity.Language.Quality.LintConfiguration!
Vezel.Celerity.Language.Quality.LintDiagnosticAnalyzer
Vezel.Celerity.Language.Quality.LintDiagnosticAnalyzer.LintDiagnosticAnalyzer(System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Quality.LintPass!>! passes, Vezel.Celerity.Language.Quality.LintConfiguration! configuration) -> void
Vezel.Celerity.Language.Quality.LintPass
Vezel.Celerity.Language.Quality.LintPass.Code.get -> Vezel.Celerity.Language.Diagnostics.DiagnosticCode
Vezel.Celerity.Language.Quality.LintPass.LintPass(string! code) -> void
Vezel.Celerity.Language.Quality.LintPassContext
Vezel.Celerity.Language.Quality.LintPassContext.AddDiagnostic(Vezel.Celerity.Language.Diagnostics.Diagnostic! diagnostic) -> void
Vezel.Celerity.Language.Quality.LintPassContext.ReportDiagnostic(Vezel.Celerity.Language.Text.SourceTextSpan span, string! message, params (Vezel.Celerity.Language.Text.SourceTextSpan Span, string! Message)[]! notes) -> void
Vezel.Celerity.Language.Quality.LintPassContext.ReportDiagnostic(Vezel.Celerity.Language.Text.SourceTextSpan span, string! message, System.Collections.Generic.IEnumerable<(Vezel.Celerity.Language.Text.SourceTextSpan Span, string! Message)>! notes) -> void
Vezel.Celerity.Language.Quality.LintPassContext.Root.get -> Vezel.Celerity.Language.Semantics.Tree.DocumentSemantics!
Vezel.Celerity.Language.Quality.Passes.TestWithoutAssertPass
Vezel.Celerity.Language.Quality.Passes.UndocumentedPublicSymbolPass
Vezel.Celerity.Language.Quality.Passes.UnreachableCodePass
Vezel.Celerity.Language.Quality.Passes.UnusedLocalSymbolPass
Vezel.Celerity.Language.Quality.Passes.UppercaseBaseIndicatorPass
Vezel.Celerity.Language.Semantics.Binding.DeclarationSymbol
Vezel.Celerity.Language.Semantics.Binding.InteractiveContext
Vezel.Celerity.Language.Semantics.Binding.InteractiveContext.AddSymbol(string! name, bool mutable) -> Vezel.Celerity.Language.Semantics.Binding.InteractiveContext!
Vezel.Celerity.Language.Semantics.Binding.InteractiveContext.AddUse(string! name, Vezel.Celerity.Language.ModulePath! path) -> Vezel.Celerity.Language.Semantics.Binding.InteractiveContext!
Vezel.Celerity.Language.Semantics.Binding.InteractiveContext.RemoveSymbol(string! name) -> Vezel.Celerity.Language.Semantics.Binding.InteractiveContext!
Vezel.Celerity.Language.Semantics.Binding.InteractiveContext.RemoveUse(string! name) -> Vezel.Celerity.Language.Semantics.Binding.InteractiveContext!
Vezel.Celerity.Language.Semantics.Binding.InteractiveContext.TryGetSymbol(string! name, out Vezel.Celerity.Language.Semantics.Binding.InteractiveSymbol! symbol) -> bool
Vezel.Celerity.Language.Semantics.Binding.InteractiveContext.TryGetUse(string! name, out Vezel.Celerity.Language.ModulePath! path) -> bool
Vezel.Celerity.Language.Semantics.Binding.InteractiveSymbol
Vezel.Celerity.Language.Semantics.Binding.LocalSymbol
Vezel.Celerity.Language.Semantics.Binding.ParameterSymbol
Vezel.Celerity.Language.Semantics.Binding.Symbol
Vezel.Celerity.Language.Semantics.Binding.UpvalueSymbol
Vezel.Celerity.Language.Semantics.Binding.UpvalueSymbol.Parent.get -> Vezel.Celerity.Language.Semantics.Binding.Symbol!
Vezel.Celerity.Language.Semantics.Binding.UpvalueSymbol.Slot.get -> int
Vezel.Celerity.Language.Semantics.Binding.VariableSymbol
Vezel.Celerity.Language.Semantics.DiagnosticAnalyzer
Vezel.Celerity.Language.Semantics.DiagnosticAnalyzer.DiagnosticAnalyzer() -> void
Vezel.Celerity.Language.Semantics.DiagnosticAnalyzerContext
Vezel.Celerity.Language.Semantics.DiagnosticAnalyzerContext.AddDiagnostic(Vezel.Celerity.Language.Diagnostics.Diagnostic! diagnostic) -> void
Vezel.Celerity.Language.Semantics.DiagnosticAnalyzerContext.ReportDiagnostic(Vezel.Celerity.Language.Text.SourceTextSpan span, Vezel.Celerity.Language.Diagnostics.DiagnosticSeverity severity, Vezel.Celerity.Language.Diagnostics.DiagnosticCode code, string! message, params (Vezel.Celerity.Language.Text.SourceTextSpan Span, string! Message)[]! notes) -> void
Vezel.Celerity.Language.Semantics.DiagnosticAnalyzerContext.ReportDiagnostic(Vezel.Celerity.Language.Text.SourceTextSpan span, Vezel.Celerity.Language.Diagnostics.DiagnosticSeverity severity, Vezel.Celerity.Language.Diagnostics.DiagnosticCode code, string! message, System.Collections.Generic.IEnumerable<(Vezel.Celerity.Language.Text.SourceTextSpan Span, string! Message)>! notes) -> void
Vezel.Celerity.Language.Semantics.DiagnosticAnalyzerContext.Root.get -> Vezel.Celerity.Language.Semantics.Tree.DocumentSemantics!
Vezel.Celerity.Language.Semantics.SemanticTree
Vezel.Celerity.Language.Semantics.SemanticTree.Diagnostics.get -> System.Collections.Immutable.ImmutableArray<Vezel.Celerity.Language.Diagnostics.Diagnostic!>
Vezel.Celerity.Language.Semantics.SemanticTree.Root.get -> Vezel.Celerity.Language.Semantics.Tree.DocumentSemantics!
Vezel.Celerity.Language.Semantics.SemanticTree.Syntax.get -> Vezel.Celerity.Language.Syntax.SyntaxTree!
Vezel.Celerity.Language.Semantics.SemanticVisitor
Vezel.Celerity.Language.Semantics.SemanticVisitor.SemanticVisitor() -> void
Vezel.Celerity.Language.Semantics.SemanticVisitor.Visit(Vezel.Celerity.Language.Semantics.Tree.SemanticNode! node) -> void
Vezel.Celerity.Language.Semantics.SemanticVisitor<T>
Vezel.Celerity.Language.Semantics.SemanticVisitor<T>.SemanticVisitor() -> void
Vezel.Celerity.Language.Semantics.SemanticVisitor<T>.Visit(Vezel.Celerity.Language.Semantics.Tree.SemanticNode! node) -> T?
Vezel.Celerity.Language.Semantics.Tree.AdditiveExpressionSemantics
Vezel.Celerity.Language.Semantics.Tree.AdditiveExpressionSemantics.LeftOperand.get -> Vezel.Celerity.Language.Semantics.Tree.ExpressionSemantics!
Vezel.Celerity.Language.Semantics.Tree.AdditiveExpressionSemantics.Parent.get -> Vezel.Celerity.Language.Semantics.Tree.SemanticNode!
Vezel.Celerity.Language.Semantics.Tree.AdditiveExpressionSemantics.RightOperand.get -> Vezel.Celerity.Language.Semantics.Tree.ExpressionSemantics!
Vezel.Celerity.Language.Semantics.Tree.AdditiveExpressionSemantics.Syntax.get -> Vezel.Celerity.Language.Syntax.Tree.AdditiveExpressionSyntax!
Vezel.Celerity.Language.Semantics.Tree.AggregateExpressionFieldSemantics
Vezel.Celerity.Language.Semantics.Tree.AggregateExpressionFieldSemantics.IsMutable.get -> bool
Vezel.Celerity.Language.Semantics.Tree.AggregateExpressionFieldSemantics.Name.get -> string!
Vezel.Celerity.Language.Semantics.Tree.AggregateExpressionFieldSemantics.Parent.get -> Vezel.Celerity.Language.Semantics.Tree.AggregateExpressionSemantics!
Vezel.Celerity.Language.Semantics.Tree.AggregateExpressionFieldSemantics.Syntax.get -> Vezel.Celerity.Language.Syntax.Tree.AggregateExpressionFieldSyntax!
Vezel.Celerity.Language.Semantics.Tree.AggregateExpressionFieldSemantics.Value.get -> Vezel.Celerity.Language.Semantics.Tree.ExpressionSemantics!
Vezel.Celerity.Language.Semantics.Tree.AggregateExpressionSemantics
Vezel.Celerity.Language.Semantics.Tree.AggregateExpressionSemantics.Parent.get -> Vezel.Celerity.Language.Semantics.Tree.SemanticNode!
Vezel.Celerity.Language.Semantics.Tree.AggregateExpressionSemantics.Syntax.get -> Vezel.Celerity.Language.Syntax.Tree.AggregateExpressionSyntax!
Vezel.Celerity.Language.Semantics.Tree.AggregatePatternFieldSemantics
Vezel.Celerity.Language.Semantics.Tree.AggregatePatternFieldSemantics.Name.get -> string!
Vezel.Celerity.Language.Semantics.Tree.AggregatePatternFieldSemantics.Parent.get -> Vezel.Celerity.Language.Semantics.Tree.AggregatePatternSemantics!
Vezel.Celerity.Language.Semantics.Tree.AggregatePatternFieldSemantics.Pattern.get -> Vezel.Celerity.Language.Semantics.Tree.PatternSemantics!
Vezel.Celerity.Language.Semantics.Tree.AggregatePatternFieldSemantics.Syntax.get -> Vezel.Celerity.Language.Syntax.Tree.AggregatePatternFieldSyntax!
Vezel.Celerity.Language.Semantics.Tree.AggregatePatternSemantics
Vezel.Celerity.Language.Semantics.Tree.AggregatePatternSemantics.Parent.get -> Vezel.Celerity.Language.Semantics.Tree.SemanticNode!
Vezel.Celerity.Language.Semantics.Tree.AggregatePatternSemantics.Syntax.get -> Vezel.Celerity.Language.Syntax.Tree.AggregatePatternSyntax!
Vezel.Celerity.Language.Semantics.Tree.ArrayExpressionSemantics
Vezel.Celerity.Language.Semantics.Tree.ArrayExpressionSemantics.Elements.get -> Vezel.Celerity.Language.Semantics.Tree.SeparatedSemanticNodeList<Vezel.Celerity.Language.Semantics.Tree.ExpressionSemantics!, Vezel.Celerity.Language.Syntax.Tree.ExpressionSyntax!>
Vezel.Celerity.Language.Semantics.Tree.ArrayExpressionSemantics.IsMutable.get -> bool
Vezel.Celerity.Language.Semantics.Tree.ArrayExpressionSemantics.Parent.get -> Vezel.Celerity.Language.Semantics.Tree.SemanticNode!
Vezel.Celerity.Language.Semantics.Tree.ArrayExpressionSemantics.Syntax.get -> Vezel.Celerity.Language.Syntax.Tree.ArrayExpressionSyntax!
Vezel.Celerity.Language.Semantics.Tree.ArrayPatternSemantics
Vezel.Celerity.Language.Semantics.Tree.ArrayPatternSemantics.Elements.get -> Vezel.Celerity.Language.Semantics.Tree.SeparatedSemanticNodeList<Vezel.Celerity.Language.Semantics.Tree.PatternSemantics!, Vezel.Celerity.Language.Syntax.Tree.PatternSyntax!>
Vezel.Celerity.Language.Semantics.Tree.ArrayPatternSemantics.HasPrefix.get -> bool
Vezel.Celerity.Language.Semantics.Tree.ArrayPatternSemantics.HasSuffix.get -> bool
Vezel.Celerity.Language.Semantics.Tree.ArrayPatternSemantics.Parent.get -> Vezel.Celerity.Language.Semantics.Tree.SemanticNode!
Vezel.Celerity.Language.Semantics.Tree.ArrayPatternSemantics.Syntax.get -> Vezel.Celerity.Language.Syntax.Tree.ArrayPatternSyntax!
Vezel.Celerity.Language.Semantics.Tree.AssertExpressionSemantics
Vezel.Celerity.Language.Semantics.Tree.AssertExpressionSemantics.Condition.get -> Vezel.Celerity.Language.Semantics.Tree.ExpressionSemantics!
Vezel.Celerity.Language.Semantics.Tree.AssertExpressionSemantics.Parent.get -> Vezel.Celerity.Language.Semantics.Tree.SemanticNode!
Vezel.Celerity.Language.Semantics.Tree.AssertExpressionSemantics.Syntax.get -> Vezel.Celerity.Language.Syntax.Tree.AssertExpressionSyntax!
Vezel.Celerity.Language.Semantics.Tree.AssignmentExpressionSemantics
Vezel.Celerity.Language.Semantics.Tree.AssignmentExpressionSemantics.LeftOperand.get -> Vezel.Celerity.Language.Semantics.Tree.ExpressionSemantics!
Vezel.Celerity.Language.Semantics.Tree.AssignmentExpressionSemantics.Parent.get -> Vezel.Celerity.Language.Semantics.Tree.SemanticNode!
Vezel.Celerity.Language.Semantics.Tree.AssignmentExpressionSemantics.RightOperand.get -> Vezel.Celerity.Language.Semantics.Tree.ExpressionSemantics!
Vezel.Celerity.Language.Semantics.Tree.AssignmentExpressionSemantics.Syntax.get -> Vezel.Celerity.Language.Syntax.Tree.AssignmentExpressionSyntax!
Vezel.Celerity.Language.Semantics.Tree.AttributeSemantics
Vezel.Celerity.Language.Semantics.Tree.AttributeSemantics.Name.get -> string!
Vezel.Celerity.Language.Semantics.Tree.AttributeSemantics.Parent.get -> Vezel.Celerity.Language.Semantics.Tree.SemanticNode!
Vezel.Celerity.Language.Semantics.Tree.AttributeSemantics.Syntax.get -> Vezel.Celerity.Language.Syntax.Tree.AttributeSyntax!
Vezel.Celerity.Language.Semantics.Tree.AttributeSemantics.Value.get -> object?
Vezel.Celerity.Language.Semantics.Tree.BinaryOperatorExpressionSemantics
Vezel.Celerity.Language.Semantics.Tree.BinaryOperatorExpressionSemantics.Parent.get -> Vezel.Celerity.Language.Semantics.Tree.SemanticNode!
Vezel.Celerity.Language.Semantics.Tree.BinaryOperatorExpressionSemantics.Syntax.get -> Vezel.Celerity.Language.Syntax.Tree.BinaryOperatorExpressionSyntax!
Vezel.Celerity.Language.Semantics.Tree.BindingSemantics
Vezel.Celerity.Language.Semantics.Tree.BindingSemantics.Parent.get -> Vezel.Celerity.Language.Semantics.Tree.PatternSemantics!
Vezel.Celerity.Language.Semantics.Tree.BindingSemantics.Syntax.get -> Vezel.Celerity.Language.Syntax.Tree.BindingSyntax!
Vezel.Celerity.Language.Semantics.Tree.BitwiseExpressionSemantics
Vezel.Celerity.Language.Semantics.Tree.BitwiseExpressionSemantics.LeftOperand.get -> Vezel.Celerity.Language.Semantics.Tree.ExpressionSemantics!
Vezel.Celerity.Language.Semantics.Tree.BitwiseExpressionSemantics.Parent.get -> Vezel.Celerity.Language.Semantics.Tree.SemanticNode!
Vezel.Celerity.Language.Semantics.Tree.BitwiseExpressionSemantics.RightOperand.get -> Vezel.Celerity.Language.Semantics.Tree.ExpressionSemantics!
Vezel.Celerity.Language.Semantics.Tree.BitwiseExpressionSemantics.Syntax.get -> Vezel.Celerity.Language.Syntax.Tree.BitwiseExpressionSyntax!
Vezel.Celerity.Language.Semantics.Tree.BlockExpressionSemantics
Vezel.Celerity.Language.Semantics.Tree.BlockExpressionSemantics.Defers.get -> System.Collections.Immutable.ImmutableArray<Vezel.Celerity.Language.Semantics.Tree.DeferStatementSemantics!>
Vezel.Celerity.Language.Semantics.Tree.BlockExpressionSemantics.Parent.get -> Vezel.Celerity.Language.Semantics.Tree.SemanticNode!
Vezel.Celerity.Language.Semantics.Tree.BlockExpressionSemantics.Statements.get -> Vezel.Celerity.Language.Semantics.Tree.SemanticNodeList<Vezel.Celerity.Language.Semantics.Tree.StatementSemantics!, Vezel.Celerity.Language.Syntax.Tree.StatementSyntax!>
Vezel.Celerity.Language.Semantics.Tree.BlockExpressionSemantics.Syntax.get -> Vezel.Celerity.Language.Syntax.Tree.BlockExpressionSyntax!
Vezel.Celerity.Language.Semantics.Tree.BranchExpressionSemantics
Vezel.Celerity.Language.Semantics.Tree.BranchExpressionSemantics.Parent.get -> Vezel.Celerity.Language.Semantics.Tree.SemanticNode!
Vezel.Celerity.Language.Semantics.Tree.BranchExpressionSemantics.Syntax.get -> Vezel.Celerity.Language.Syntax.Tree.BranchExpressionSyntax!
Vezel.Celerity.Language.Semantics.Tree.BreakExpressionSemantics
Vezel.Celerity.Language.Semantics.Tree.BreakExpressionSemantics.Parent.get -> Vezel.Celerity.Language.Semantics.Tree.SemanticNode!
Vezel.Celerity.Language.Semantics.Tree.BreakExpressionSemantics.Result.get -> Vezel.Celerity.Language.Semantics.Tree.ExpressionSemantics?
Vezel.Celerity.Language.Semantics.Tree.BreakExpressionSemantics.Syntax.get -> Vezel.Celerity.Language.Syntax.Tree.BreakExpressionSyntax!
Vezel.Celerity.Language.Semantics.Tree.CallExpressionSemantics
Vezel.Celerity.Language.Semantics.Tree.CallExpressionSemantics.Arguments.get -> Vezel.Celerity.Language.Semantics.Tree.SeparatedSemanticNodeList<Vezel.Celerity.Language.Semantics.Tree.ExpressionSemantics!, Vezel.Celerity.Language.Syntax.Tree.ExpressionSyntax!>
Vezel.Celerity.Language.Semantics.Tree.CallExpressionSemantics.Defers.get -> System.Collections.Immutable.ImmutableArray<Vezel.Celerity.Language.Semantics.Tree.DeferStatementSemantics!>
Vezel.Celerity.Language.Semantics.Tree.CallExpressionSemantics.Function.get -> Vezel.Celerity.Language.Semantics.Tree.FunctionDeclarationSemantics?
Vezel.Celerity.Language.Semantics.Tree.CallExpressionSemantics.IsPropagating.get -> bool
Vezel.Celerity.Language.Semantics.Tree.CallExpressionSemantics.Lambda.get -> Vezel.Celerity.Language.Semantics.Tree.LambdaExpressionSemantics?
Vezel.Celerity.Language.Semantics.Tree.CallExpressionSemantics.Parent.get -> Vezel.Celerity.Language.Semantics.Tree.SemanticNode!
Vezel.Celerity.Language.Semantics.Tree.CallExpressionSemantics.Syntax.get -> Vezel.Celerity.Language.Syntax.Tree.CallExpressionSyntax!
Vezel.Celerity.Language.Semantics.Tree.CallExpressionSemantics.Try.get -> Vezel.Celerity.Language.Semantics.Tree.TryExpressionSemantics?
Vezel.Celerity.Language.Semantics.Tree.CodeDeclarationSemantics
Vezel.Celerity.Language.Semantics.Tree.CodeDeclarationSemantics.Parent.get -> Vezel.Celerity.Language.Semantics.Tree.ModuleDocumentSemantics!
Vezel.Celerity.Language.Semantics.Tree.CodeDeclarationSemantics.Syntax.get -> Vezel.Celerity.Language.Syntax.Tree.CodeDeclarationSyntax!
Vezel.Celerity.Language.Semantics.Tree.CodeParameterSemantics
Vezel.Celerity.Language.Semantics.Tree.CodeParameterSemantics.Parent.get -> Vezel.Celerity.Language.Semantics.Tree.SemanticNode!
Vezel.Celerity.Language.Semantics.Tree.CodeParameterSemantics.Syntax.get -> Vezel.Celerity.Language.Syntax.Tree.CodeParameterSyntax!
Vezel.Celerity.Language.Semantics.Tree.ConditionalExpressionSemantics
Vezel.Celerity.Language.Semantics.Tree.ConditionalExpressionSemantics.Parent.get -> Vezel.Celerity.Language.Semantics.Tree.SemanticNode!
Vezel.Celerity.Language.Semantics.Tree.ConditionalExpressionSemantics.Syntax.get -> Vezel.Celerity.Language.Syntax.Tree.ConditionalExpressionSyntax!
Vezel.Celerity.Language.Semantics.Tree.ConditionExpressionArmSemantics
Vezel.Celerity.Language.Semantics.Tree.ConditionExpressionArmSemantics.Condition.get -> Vezel.Celerity.Language.Semantics.Tree.ExpressionSemantics!
Vezel.Celerity.Language.Semantics.Tree.ConditionExpressionArmSemantics.Parent.get -> Vezel.Celerity.Language.Semantics.Tree.ConditionExpressionSemantics!
Vezel.Celerity.Language.Semantics.Tree.ConditionExpressionArmSemantics.Syntax.get -> Vezel.Celerity.Language.Syntax.Tree.ConditionExpressionArmSyntax!
Vezel.Celerity.Language.Semantics.Tree.ConditionExpressionSemantics
Vezel.Celerity.Language.Semantics.Tree.ConditionExpressionSemantics.Arms.get -> Vezel.Celerity.Language.Semantics.Tree.SeparatedSemanticNodeList<Vezel.Celerity.Language.Semantics.Tree.ConditionExpressionArmSemantics!, Vezel.Celerity.Language.Syntax.Tree.ConditionExpressionArmSyntax!>
Vezel.Celerity.Language.Semantics.Tree.ConditionExpressionSemantics.Parent.get -> Vezel.Celerity.Language.Semantics.Tree.SemanticNode!
Vezel.Celerity.Language.Semantics.Tree.ConditionExpressionSemantics.Syntax.get -> Vezel.Celerity.Language.Syntax.Tree.ConditionExpressionSyntax!
Vezel.Celerity.Language.Semantics.Tree.ConstantDeclarationSemantics
Vezel.Celerity.Language.Semantics.Tree.ConstantDeclarationSemantics.IsPublic.get -> bool
Vezel.Celerity.Language.Semantics.Tree.ConstantDeclarationSemantics.Parent.get -> Vezel.Celerity.Language.Semantics.Tree.ModuleDocumentSemantics!
Vezel.Celerity.Language.Semantics.Tree.ConstantDeclarationSemantics.Syntax.get -> Vezel.Celerity.Language.Syntax.Tree.ConstantDeclarationSyntax!
Vezel.Celerity.Language.Semantics.Tree.ControlExpressionSemantics
Vezel.Celerity.Language.Semantics.Tree.ControlExpressionSemantics.Parent.get -> Vezel.Celerity.Language.Semantics.Tree.SemanticNode!
Vezel.Celerity.Language.Semantics.Tree.ControlExpressionSemantics.Syntax.get -> Vezel.Celerity.Language.Syntax.Tree.ControlExpressionSyntax!
Vezel.Celerity.Language.Semantics.Tree.DeclarationSemantics
Vezel.Celerity.Language.Semantics.Tree.DeclarationSemantics.Parent.get -> Vezel.Celerity.Language.Semantics.Tree.SemanticNode!
Vezel.Celerity.Language.Semantics.Tree.DeclarationSemantics.Syntax.get -> Vezel.Celerity.Language.Syntax.Tree.DeclarationSyntax!
Vezel.Celerity.Language.Semantics.Tree.DeclarationSubmissionSemantics
Vezel.Celerity.Language.Semantics.Tree.DeclarationSubmissionSemantics.Declaration.get -> Vezel.Celerity.Language.Semantics.Tree.DeclarationSemantics!
Vezel.Celerity.Language.Semantics.Tree.DeclarationSubmissionSemantics.Parent.get -> Vezel.Celerity.Language.Semantics.Tree.InteractiveDocumentSemantics!
Vezel.Celerity.Language.Semantics.Tree.DeclarationSubmissionSemantics.Syntax.get -> Vezel.Celerity.Language.Syntax.Tree.DeclarationSubmissionSyntax!
Vezel.Celerity.Language.Semantics.Tree.DeferStatementSemantics
Vezel.Celerity.Language.Semantics.Tree.DeferStatementSemantics.Expression.get -> Vezel.Celerity.Language.Semantics.Tree.ExpressionSemantics!
Vezel.Celerity.Language.Semantics.Tree.DeferStatementSemantics.Parent.get -> Vezel.Celerity.Language.Semantics.Tree.SemanticNode!
Vezel.Celerity.Language.Semantics.Tree.DeferStatementSemantics.Syntax.get -> Vezel.Celerity.Language.Syntax.Tree.DeferStatementSyntax!
Vezel.Celerity.Language.Semantics.Tree.DiscardBindingSemantics
Vezel.Celerity.Language.Semantics.Tree.DiscardBindingSemantics.Parent.get -> Vezel.Celerity.Language.Semantics.Tree.PatternSemantics!
Vezel.Celerity.Language.Semantics.Tree.DiscardBindingSemantics.Syntax.get -> Vezel.Celerity.Language.Syntax.Tree.DiscardBindingSyntax!
Vezel.Celerity.Language.Semantics.Tree.DocumentSemantics
Vezel.Celerity.Language.Semantics.Tree.DocumentSemantics.Syntax.get -> Vezel.Celerity.Language.Syntax.Tree.DocumentSyntax!
Vezel.Celerity.Language.Semantics.Tree.ErrorExpressionSemantics
Vezel.Celerity.Language.Semantics.Tree.ErrorExpressionSemantics.Name.get -> string!
Vezel.Celerity.Language.Semantics.Tree.ErrorExpressionSemantics.Parent.get -> Vezel.Celerity.Language.Semantics.Tree.SemanticNode!
Vezel.Celerity.Language.Semantics.Tree.ErrorExpressionSemantics.Syntax.get -> Vezel.Celerity.Language.Syntax.Tree.ErrorExpressionSyntax!
Vezel.Celerity.Language.Semantics.Tree.ErrorPatternSemantics
Vezel.Celerity.Language.Semantics.Tree.ErrorPatternSemantics.Name.get -> string?
Vezel.Celerity.Language.Semantics.Tree.ErrorPatternSemantics.Parent.get -> Vezel.Celerity.Language.Semantics.Tree.SemanticNode!
Vezel.Celerity.Language.Semantics.Tree.ErrorPatternSemantics.Syntax.get -> Vezel.Celerity.Language.Syntax.Tree.ErrorPatternSyntax!
Vezel.Celerity.Language.Semantics.Tree.ExpressionArmSemantics
Vezel.Celerity.Language.Semantics.Tree.ExpressionArmSemantics.Parent.get -> Vezel.Celerity.Language.Semantics.Tree.ExpressionSemantics!
Vezel.Celerity.Language.Semantics.Tree.ExpressionArmSemantics.Syntax.get -> Vezel.Celerity.Language.Syntax.Tree.ExpressionArmSyntax!
Vezel.Celerity.Language.Semantics.Tree.ExpressionPatternArmSemantics
Vezel.Celerity.Language.Semantics.Tree.ExpressionPatternArmSemantics.Guard.get -> Vezel.Celerity.Language.Semantics.Tree.ExpressionSemantics?
Vezel.Celerity.Language.Semantics.Tree.ExpressionPatternArmSemantics.Parent.get -> Vezel.Celerity.Language.Semantics.Tree.SemanticNode!
Vezel.Celerity.Language.Semantics.Tree.ExpressionPatternArmSemantics.Pattern.get -> Vezel.Celerity.Language.Semantics.Tree.PatternSemantics!
Vezel.Celerity.Language.Semantics.Tree.ExpressionPatternArmSemantics.Syntax.get -> Vezel.Celerity.Language.Syntax.Tree.ExpressionPatternArmSyntax!
Vezel.Celerity.Language.Semantics.Tree.ExpressionSemantics
Vezel.Celerity.Language.Semantics.Tree.ExpressionSemantics.Parent.get -> Vezel.Celerity.Language.Semantics.Tree.SemanticNode!
Vezel.Celerity.Language.Semantics.Tree.ExpressionSemantics.Syntax.get -> Vezel.Celerity.Language.Syntax.Tree.ExpressionSyntax!
Vezel.Celerity.Language.Semantics.Tree.ExpressionStatementSemantics
Vezel.Celerity.Language.Semantics.Tree.ExpressionStatementSemantics.Expression.get -> Vezel.Celerity.Language.Semantics.Tree.ExpressionSemantics!
Vezel.Celerity.Language.Semantics.Tree.ExpressionStatementSemantics.Parent.get -> Vezel.Celerity.Language.Semantics.Tree.SemanticNode!
Vezel.Celerity.Language.Semantics.Tree.ExpressionStatementSemantics.Syntax.get -> Vezel.Celerity.Language.Syntax.Tree.ExpressionStatementSyntax!
Vezel.Celerity.Language.Semantics.Tree.FieldExpressionSemantics
Vezel.Celerity.Language.Semantics.Tree.FieldExpressionSemantics.Name.get -> string!
Vezel.Celerity.Language.Semantics.Tree.FieldExpressionSemantics.Parent.get -> Vezel.Celerity.Language.Semantics.Tree.SemanticNode!
Vezel.Celerity.Language.Semantics.Tree.FieldExpressionSemantics.Syntax.get -> Vezel.Celerity.Language.Syntax.Tree.FieldExpressionSyntax!
Vezel.Celerity.Language.Semantics.Tree.ForExpressionSemantics
Vezel.Celerity.Language.Semantics.Tree.ForExpressionSemantics.Body.get -> Vezel.Celerity.Language.Semantics.Tree.BlockExpressionSemantics!
Vezel.Celerity.Language.Semantics.Tree.ForExpressionSemantics.Collection.get -> Vezel.Celerity.Language.Semantics.Tree.ExpressionSemantics!
Vezel.Celerity.Language.Semantics.Tree.ForExpressionSemantics.Else.get -> Vezel.Celerity.Language.Semantics.Tree.BlockExpressionSemantics?
Vezel.Celerity.Language.Semantics.Tree.ForExpressionSemantics.Parent.get -> Vezel.Celerity.Language.Semantics.Tree.SemanticNode!
Vezel.Celerity.Language.Semantics.Tree.ForExpressionSemantics.Pattern.get -> Vezel.Celerity.Language.Semantics.Tree.PatternSemantics!
Vezel.Celerity.Language.Semantics.Tree.ForExpressionSemantics.Syntax.get -> Vezel.Celerity.Language.Syntax.Tree.ForExpressionSyntax!
Vezel.Celerity.Language.Semantics.Tree.FunctionBranchExpressionSemantics
Vezel.Celerity.Language.Semantics.Tree.FunctionBranchExpressionSemantics.Function.get -> Vezel.Celerity.Language.Semantics.Tree.FunctionDeclarationSemantics?
Vezel.Celerity.Language.Semantics.Tree.FunctionBranchExpressionSemantics.Lambda.get -> Vezel.Celerity.Language.Semantics.Tree.LambdaExpressionSemantics?
Vezel.Celerity.Language.Semantics.Tree.FunctionBranchExpressionSemantics.Parent.get -> Vezel.Celerity.Language.Semantics.Tree.SemanticNode!
Vezel.Celerity.Language.Semantics.Tree.FunctionBranchExpressionSemantics.Syntax.get -> Vezel.Celerity.Language.Syntax.Tree.FunctionBranchExpressionSyntax!
Vezel.Celerity.Language.Semantics.Tree.FunctionDeclarationSemantics
Vezel.Celerity.Language.Semantics.Tree.FunctionDeclarationSemantics.Branches.get -> System.Collections.Immutable.ImmutableArray<Vezel.Celerity.Language.Semantics.Tree.FunctionBranchExpressionSemantics!>
Vezel.Celerity.Language.Semantics.Tree.FunctionDeclarationSemantics.Calls.get -> System.Collections.Immutable.ImmutableArray<Vezel.Celerity.Language.Semantics.Tree.CallExpressionSemantics!>
Vezel.Celerity.Language.Semantics.Tree.FunctionDeclarationSemantics.IsExternal.get -> bool
Vezel.Celerity.Language.Semantics.Tree.FunctionDeclarationSemantics.IsFallible.get -> bool
Vezel.Celerity.Language.Semantics.Tree.FunctionDeclarationSemantics.IsPublic.get -> bool
Vezel.Celerity.Language.Semantics.Tree.FunctionDeclarationSemantics.Parameters.get -> Vezel.Celerity.Language.Semantics.Tree.SeparatedSemanticNodeList<Vezel.Celerity.Language.Semantics.Tree.FunctionParameterSemantics!, Vezel.Celerity.Language.Syntax.Tree.FunctionParameterSyntax!>
Vezel.Celerity.Language.Semantics.Tree.FunctionDeclarationSemantics.Parent.get -> Vezel.Celerity.Language.Semantics.Tree.ModuleDocumentSemantics!
Vezel.Celerity.Language.Semantics.Tree.FunctionDeclarationSemantics.Syntax.get -> Vezel.Celerity.Language.Syntax.Tree.FunctionDeclarationSyntax!
Vezel.Celerity.Language.Semantics.Tree.FunctionParameterSemantics
Vezel.Celerity.Language.Semantics.Tree.FunctionParameterSemantics.Parent.get -> Vezel.Celerity.Language.Semantics.Tree.FunctionDeclarationSemantics!
Vezel.Celerity.Language.Semantics.Tree.FunctionParameterSemantics.Syntax.get -> Vezel.Celerity.Language.Syntax.Tree.FunctionParameterSyntax!
Vezel.Celerity.Language.Semantics.Tree.IdentifierExpressionSemantics
Vezel.Celerity.Language.Semantics.Tree.IdentifierExpressionSemantics.Parent.get -> Vezel.Celerity.Language.Semantics.Tree.SemanticNode!
Vezel.Celerity.Language.Semantics.Tree.IdentifierExpressionSemantics.Symbol.get -> Vezel.Celerity.Language.Semantics.Binding.Symbol?
Vezel.Celerity.Language.Semantics.Tree.IdentifierExpressionSemantics.Syntax.get -> Vezel.Celerity.Language.Syntax.Tree.IdentifierExpressionSyntax!
Vezel.Celerity.Language.Semantics.Tree.IfExpressionSemantics
Vezel.Celerity.Language.Semantics.Tree.IfExpressionSemantics.Body.get -> Vezel.Celerity.Language.Semantics.Tree.BlockExpressionSemantics!
Vezel.Celerity.Language.Semantics.Tree.IfExpressionSemantics.Condition.get -> Vezel.Celerity.Language.Semantics.Tree.ExpressionSemantics!
Vezel.Celerity.Language.Semantics.Tree.IfExpressionSemantics.Else.get -> Vezel.Celerity.Language.Semantics.Tree.BlockExpressionSemantics?
Vezel.Celerity.Language.Semantics.Tree.IfExpressionSemantics.Parent.get -> Vezel.Celerity.Language.Semantics.Tree.SemanticNode!
Vezel.Celerity.Language.Semantics.Tree.IfExpressionSemantics.Syntax.get -> Vezel.Celerity.Language.Syntax.Tree.IfExpressionSyntax!
Vezel.Celerity.Language.Semantics.Tree.IndexExpressionSemantics
Vezel.Celerity.Language.Semantics.Tree.IndexExpressionSemantics.Arguments.get -> Vezel.Celerity.Language.Semantics.Tree.SeparatedSemanticNodeList<Vezel.Celerity.Language.Semantics.Tree.ExpressionSemantics!, Vezel.Celerity.Language.Syntax.Tree.ExpressionSyntax!>
Vezel.Celerity.Language.Semantics.Tree.IndexExpressionSemantics.Parent.get -> Vezel.Celerity.Language.Semantics.Tree.SemanticNode!
Vezel.Celerity.Language.Semantics.Tree.IndexExpressionSemantics.Syntax.get -> Vezel.Celerity.Language.Syntax.Tree.IndexExpressionSyntax!
Vezel.Celerity.Language.Semantics.Tree.InteractiveDocumentSemantics
Vezel.Celerity.Language.Semantics.Tree.InteractiveDocumentSemantics.Submissions.get -> Vezel.Celerity.Language.Semantics.Tree.SemanticNodeList<Vezel.Celerity.Language.Semantics.Tree.SubmissionSemantics!, Vezel.Celerity.Language.Syntax.Tree.SubmissionSyntax!>
Vezel.Celerity.Language.Semantics.Tree.InteractiveDocumentSemantics.Syntax.get -> Vezel.Celerity.Language.Syntax.Tree.InteractiveDocumentSyntax!
Vezel.Celerity.Language.Semantics.Tree.LambdaExpressionSemantics
Vezel.Celerity.Language.Semantics.Tree.LambdaExpressionSemantics.Body.get -> Vezel.Celerity.Language.Semantics.Tree.ExpressionSemantics!
Vezel.Celerity.Language.Semantics.Tree.LambdaExpressionSemantics.Branches.get -> System.Collections.Immutable.ImmutableArray<Vezel.Celerity.Language.Semantics.Tree.FunctionBranchExpressionSemantics!>
Vezel.Celerity.Language.Semantics.Tree.LambdaExpressionSemantics.Calls.get -> System.Collections.Immutable.ImmutableArray<Vezel.Celerity.Language.Semantics.Tree.CallExpressionSemantics!>
Vezel.Celerity.Language.Semantics.Tree.LambdaExpressionSemantics.IsFallible.get -> bool
Vezel.Celerity.Language.Semantics.Tree.LambdaExpressionSemantics.Parameters.get -> Vezel.Celerity.Language.Semantics.Tree.SeparatedSemanticNodeList<Vezel.Celerity.Language.Semantics.Tree.LambdaParameterSemantics!, Vezel.Celerity.Language.Syntax.Tree.LambdaParameterSyntax!>
Vezel.Celerity.Language.Semantics.Tree.LambdaExpressionSemantics.Parent.get -> Vezel.Celerity.Language.Semantics.Tree.SemanticNode!
Vezel.Celerity.Language.Semantics.Tree.LambdaExpressionSemantics.References.get -> System.Collections.Immutable.ImmutableArray<Vezel.Celerity.Language.Semantics.Tree.ThisExpressionSemantics!>
Vezel.Celerity.Language.Semantics.Tree.LambdaExpressionSemantics.Syntax.get -> Vezel.Celerity.Language.Syntax.Tree.LambdaExpressionSyntax!
Vezel.Celerity.Language.Semantics.Tree.LambdaExpressionSemantics.Upvalues.get -> System.Collections.Immutable.ImmutableArray<Vezel.Celerity.Language.Semantics.Binding.UpvalueSymbol!>
Vezel.Celerity.Language.Semantics.Tree.LambdaParameterSemantics
Vezel.Celerity.Language.Semantics.Tree.LambdaParameterSemantics.Parent.get -> Vezel.Celerity.Language.Semantics.Tree.LambdaExpressionSemantics!
Vezel.Celerity.Language.Semantics.Tree.LambdaParameterSemantics.Syntax.get -> Vezel.Celerity.Language.Syntax.Tree.LambdaParameterSyntax!
Vezel.Celerity.Language.Semantics.Tree.LetStatementSemantics
Vezel.Celerity.Language.Semantics.Tree.LetStatementSemantics.Initializer.get -> Vezel.Celerity.Language.Semantics.Tree.ExpressionSemantics!
Vezel.Celerity.Language.Semantics.Tree.LetStatementSemantics.Parent.get -> Vezel.Celerity.Language.Semantics.Tree.SemanticNode!
Vezel.Celerity.Language.Semantics.Tree.LetStatementSemantics.Pattern.get -> Vezel.Celerity.Language.Semantics.Tree.PatternSemantics!
Vezel.Celerity.Language.Semantics.Tree.LetStatementSemantics.Syntax.get -> Vezel.Celerity.Language.Syntax.Tree.LetStatementSyntax!
Vezel.Celerity.Language.Semantics.Tree.LiteralExpressionSemantics
Vezel.Celerity.Language.Semantics.Tree.LiteralExpressionSemantics.Parent.get -> Vezel.Celerity.Language.Semantics.Tree.SemanticNode!
Vezel.Celerity.Language.Semantics.Tree.LiteralExpressionSemantics.Syntax.get -> Vezel.Celerity.Language.Syntax.Tree.LiteralExpressionSyntax!
Vezel.Celerity.Language.Semantics.Tree.LiteralExpressionSemantics.Value.get -> object?
Vezel.Celerity.Language.Semantics.Tree.LiteralPatternSemantics
Vezel.Celerity.Language.Semantics.Tree.LiteralPatternSemantics.IsNegative.get -> bool
Vezel.Celerity.Language.Semantics.Tree.LiteralPatternSemantics.Literal.get -> object?
Vezel.Celerity.Language.Semantics.Tree.LiteralPatternSemantics.Parent.get -> Vezel.Celerity.Language.Semantics.Tree.SemanticNode!
Vezel.Celerity.Language.Semantics.Tree.LiteralPatternSemantics.Syntax.get -> Vezel.Celerity.Language.Syntax.Tree.LiteralPatternSyntax!
Vezel.Celerity.Language.Semantics.Tree.LiteralPatternSemantics.Value.get -> object?
Vezel.Celerity.Language.Semantics.Tree.LogicalExpressionSemantics
Vezel.Celerity.Language.Semantics.Tree.LogicalExpressionSemantics.LeftOperand.get -> Vezel.Celerity.Language.Semantics.Tree.ExpressionSemantics!
Vezel.Celerity.Language.Semantics.Tree.LogicalExpressionSemantics.Parent.get -> Vezel.Celerity.Language.Semantics.Tree.SemanticNode!
Vezel.Celerity.Language.Semantics.Tree.LogicalExpressionSemantics.RightOperand.get -> Vezel.Celerity.Language.Semantics.Tree.ExpressionSemantics!
Vezel.Celerity.Language.Semantics.Tree.LogicalExpressionSemantics.Syntax.get -> Vezel.Celerity.Language.Syntax.Tree.LogicalExpressionSyntax!
Vezel.Celerity.Language.Semantics.Tree.LoopBranchExpressionSemantics
Vezel.Celerity.Language.Semantics.Tree.LoopBranchExpressionSemantics.Loop.get -> Vezel.Celerity.Language.Semantics.Tree.LoopExpressionSemantics?
Vezel.Celerity.Language.Semantics.Tree.LoopBranchExpressionSemantics.Parent.get -> Vezel.Celerity.Language.Semantics.Tree.SemanticNode!
Vezel.Celerity.Language.Semantics.Tree.LoopBranchExpressionSemantics.Syntax.get -> Vezel.Celerity.Language.Syntax.Tree.LoopBranchExpressionSyntax!
Vezel.Celerity.Language.Semantics.Tree.LoopExpressionSemantics
Vezel.Celerity.Language.Semantics.Tree.LoopExpressionSemantics.Parent.get -> Vezel.Celerity.Language.Semantics.Tree.SemanticNode!
Vezel.Celerity.Language.Semantics.Tree.LoopExpressionSemantics.Syntax.get -> Vezel.Celerity.Language.Syntax.Tree.LoopExpressionSyntax!
Vezel.Celerity.Language.Semantics.Tree.MapExpressionPairSemantics
Vezel.Celerity.Language.Semantics.Tree.MapExpressionPairSemantics.Key.get -> Vezel.Celerity.Language.Semantics.Tree.ExpressionSemantics!
Vezel.Celerity.Language.Semantics.Tree.MapExpressionPairSemantics.Parent.get -> Vezel.Celerity.Language.Semantics.Tree.MapExpressionSemantics!
Vezel.Celerity.Language.Semantics.Tree.MapExpressionPairSemantics.Syntax.get -> Vezel.Celerity.Language.Syntax.Tree.MapExpressionPairSyntax!
Vezel.Celerity.Language.Semantics.Tree.MapExpressionPairSemantics.Value.get -> Vezel.Celerity.Language.Semantics.Tree.ExpressionSemantics!
Vezel.Celerity.Language.Semantics.Tree.MapExpressionSemantics
Vezel.Celerity.Language.Semantics.Tree.MapExpressionSemantics.IsMutable.get -> bool
Vezel.Celerity.Language.Semantics.Tree.MapExpressionSemantics.Pairs.get -> Vezel.Celerity.Language.Semantics.Tree.SeparatedSemanticNodeList<Vezel.Celerity.Language.Semantics.Tree.MapExpressionPairSemantics!, Vezel.Celerity.Language.Syntax.Tree.MapExpressionPairSyntax!>
Vezel.Celerity.Language.Semantics.Tree.MapExpressionSemantics.Parent.get -> Vezel.Celerity.Language.Semantics.Tree.SemanticNode!
Vezel.Celerity.Language.Semantics.Tree.MapExpressionSemantics.Syntax.get -> Vezel.Celerity.Language.Syntax.Tree.MapExpressionSyntax!
Vezel.Celerity.Language.Semantics.Tree.MapPatternPairSemantics
Vezel.Celerity.Language.Semantics.Tree.MapPatternPairSemantics.Key.get -> Vezel.Celerity.Language.Semantics.Tree.ExpressionSemantics!
Vezel.Celerity.Language.Semantics.Tree.MapPatternPairSemantics.Parent.get -> Vezel.Celerity.Language.Semantics.Tree.MapPatternSemantics!
Vezel.Celerity.Language.Semantics.Tree.MapPatternPairSemantics.Syntax.get -> Vezel.Celerity.Language.Syntax.Tree.MapPatternPairSyntax!
Vezel.Celerity.Language.Semantics.Tree.MapPatternPairSemantics.Value.get -> Vezel.Celerity.Language.Semantics.Tree.PatternSemantics!
Vezel.Celerity.Language.Semantics.Tree.MapPatternSemantics
Vezel.Celerity.Language.Semantics.Tree.MapPatternSemantics.Pairs.get -> Vezel.Celerity.Language.Semantics.Tree.SeparatedSemanticNodeList<Vezel.Celerity.Language.Semantics.Tree.MapPatternPairSemantics!, Vezel.Celerity.Language.Syntax.Tree.MapPatternPairSyntax!>
Vezel.Celerity.Language.Semantics.Tree.MapPatternSemantics.Parent.get -> Vezel.Celerity.Language.Semantics.Tree.SemanticNode!
Vezel.Celerity.Language.Semantics.Tree.MapPatternSemantics.Syntax.get -> Vezel.Celerity.Language.Syntax.Tree.MapPatternSyntax!
Vezel.Celerity.Language.Semantics.Tree.MatchExpressionSemantics
Vezel.Celerity.Language.Semantics.Tree.MatchExpressionSemantics.Arms.get -> Vezel.Celerity.Language.Semantics.Tree.SeparatedSemanticNodeList<Vezel.Celerity.Language.Semantics.Tree.ExpressionPatternArmSemantics!, Vezel.Celerity.Language.Syntax.Tree.ExpressionPatternArmSyntax!>
Vezel.Celerity.Language.Semantics.Tree.MatchExpressionSemantics.Operand.get -> Vezel.Celerity.Language.Semantics.Tree.ExpressionSemantics!
Vezel.Celerity.Language.Semantics.Tree.MatchExpressionSemantics.Parent.get -> Vezel.Celerity.Language.Semantics.Tree.SemanticNode!
Vezel.Celerity.Language.Semantics.Tree.MatchExpressionSemantics.Syntax.get -> Vezel.Celerity.Language.Syntax.Tree.MatchExpressionSyntax!
Vezel.Celerity.Language.Semantics.Tree.MetaExpressionSemantics
Vezel.Celerity.Language.Semantics.Tree.MetaExpressionSemantics.Operand.get -> Vezel.Celerity.Language.Semantics.Tree.ExpressionSemantics!
Vezel.Celerity.Language.Semantics.Tree.MetaExpressionSemantics.Parent.get -> Vezel.Celerity.Language.Semantics.Tree.SemanticNode!
Vezel.Celerity.Language.Semantics.Tree.MetaExpressionSemantics.Syntax.get -> Vezel.Celerity.Language.Syntax.Tree.MetaExpressionSyntax!
Vezel.Celerity.Language.Semantics.Tree.ModuleDocumentSemantics
Vezel.Celerity.Language.Semantics.Tree.ModuleDocumentSemantics.Attributes.get -> Vezel.Celerity.Language.Semantics.Tree.SemanticNodeList<Vezel.Celerity.Language.Semantics.Tree.AttributeSemantics!, Vezel.Celerity.Language.Syntax.Tree.AttributeSyntax!>
Vezel.Celerity.Language.Semantics.Tree.ModuleDocumentSemantics.Declarations.get -> Vezel.Celerity.Language.Semantics.Tree.SemanticNodeList<Vezel.Celerity.Language.Semantics.Tree.DeclarationSemantics!, Vezel.Celerity.Language.Syntax.Tree.DeclarationSyntax!>
Vezel.Celerity.Language.Semantics.Tree.ModuleDocumentSemantics.Syntax.get -> Vezel.Celerity.Language.Syntax.Tree.ModuleDocumentSyntax!
Vezel.Celerity.Language.Semantics.Tree.ModuleExpressionSemantics
Vezel.Celerity.Language.Semantics.Tree.ModuleExpressionSemantics.Parent.get -> Vezel.Celerity.Language.Semantics.Tree.SemanticNode!
Vezel.Celerity.Language.Semantics.Tree.ModuleExpressionSemantics.Path.get -> Vezel.Celerity.Language.ModulePath!
Vezel.Celerity.Language.Semantics.Tree.ModuleExpressionSemantics.Syntax.get -> Vezel.Celerity.Language.Syntax.Tree.ModuleExpressionSyntax!
Vezel.Celerity.Language.Semantics.Tree.ModuleExpressionSemantics.Use.get -> Vezel.Celerity.Language.Semantics.Tree.UseDeclarationSemantics?
Vezel.Celerity.Language.Semantics.Tree.ModulePatternSemantics
Vezel.Celerity.Language.Semantics.Tree.ModulePatternSemantics.Parent.get -> Vezel.Celerity.Language.Semantics.Tree.SemanticNode!
Vezel.Celerity.Language.Semantics.Tree.ModulePatternSemantics.Path.get -> Vezel.Celerity.Language.ModulePath?
Vezel.Celerity.Language.Semantics.Tree.ModulePatternSemantics.Syntax.get -> Vezel.Celerity.Language.Syntax.Tree.ModulePatternSyntax!
Vezel.Celerity.Language.Semantics.Tree.ModulePatternSemantics.Use.get -> Vezel.Celerity.Language.Semantics.Tree.UseDeclarationSemantics?
Vezel.Celerity.Language.Semantics.Tree.MultiplicativeExpressionSemantics
Vezel.Celerity.Language.Semantics.Tree.MultiplicativeExpressionSemantics.LeftOperand.get -> Vezel.Celerity.Language.Semantics.Tree.ExpressionSemantics!
Vezel.Celerity.Language.Semantics.Tree.MultiplicativeExpressionSemantics.Parent.get -> Vezel.Celerity.Language.Semantics.Tree.SemanticNode!
Vezel.Celerity.Language.Semantics.Tree.MultiplicativeExpressionSemantics.RightOperand.get -> Vezel.Celerity.Language.Semantics.Tree.ExpressionSemantics!
Vezel.Celerity.Language.Semantics.Tree.MultiplicativeExpressionSemantics.Syntax.get -> Vezel.Celerity.Language.Syntax.Tree.MultiplicativeExpressionSyntax!
Vezel.Celerity.Language.Semantics.Tree.NextExpressionSemantics
Vezel.Celerity.Language.Semantics.Tree.NextExpressionSemantics.Parent.get -> Vezel.Celerity.Language.Semantics.Tree.SemanticNode!
Vezel.Celerity.Language.Semantics.Tree.NextExpressionSemantics.Syntax.get -> Vezel.Celerity.Language.Syntax.Tree.NextExpressionSyntax!
Vezel.Celerity.Language.Semantics.Tree.OperatorExpressionSemantics
Vezel.Celerity.Language.Semantics.Tree.OperatorExpressionSemantics.Parent.get -> Vezel.Celerity.Language.Semantics.Tree.SemanticNode!
Vezel.Celerity.Language.Semantics.Tree.OperatorExpressionSemantics.Syntax.get -> Vezel.Celerity.Language.Syntax.Tree.OperatorExpressionSyntax!
Vezel.Celerity.Language.Semantics.Tree.ParenthesizedExpressionSemantics
Vezel.Celerity.Language.Semantics.Tree.ParenthesizedExpressionSemantics.Expression.get -> Vezel.Celerity.Language.Semantics.Tree.ExpressionSemantics!
Vezel.Celerity.Language.Semantics.Tree.ParenthesizedExpressionSemantics.Parent.get -> Vezel.Celerity.Language.Semantics.Tree.SemanticNode!
Vezel.Celerity.Language.Semantics.Tree.ParenthesizedExpressionSemantics.Syntax.get -> Vezel.Celerity.Language.Syntax.Tree.ParenthesizedExpressionSyntax!
Vezel.Celerity.Language.Semantics.Tree.PatternSemantics
Vezel.Celerity.Language.Semantics.Tree.PatternSemantics.Parent.get -> Vezel.Celerity.Language.Semantics.Tree.SemanticNode!
Vezel.Celerity.Language.Semantics.Tree.PatternSemantics.Syntax.get -> Vezel.Celerity.Language.Syntax.Tree.PatternSyntax!
Vezel.Celerity.Language.Semantics.Tree.PostfixExpressionSemantics
Vezel.Celerity.Language.Semantics.Tree.PostfixExpressionSemantics.Parent.get -> Vezel.Celerity.Language.Semantics.Tree.SemanticNode!
Vezel.Celerity.Language.Semantics.Tree.PostfixExpressionSemantics.Syntax.get -> Vezel.Celerity.Language.Syntax.Tree.PostfixExpressionSyntax!
Vezel.Celerity.Language.Semantics.Tree.RaiseExpressionSemantics
Vezel.Celerity.Language.Semantics.Tree.RaiseExpressionSemantics.Operand.get -> Vezel.Celerity.Language.Semantics.Tree.ExpressionSemantics!
Vezel.Celerity.Language.Semantics.Tree.RaiseExpressionSemantics.Parent.get -> Vezel.Celerity.Language.Semantics.Tree.SemanticNode!
Vezel.Celerity.Language.Semantics.Tree.RaiseExpressionSemantics.Syntax.get -> Vezel.Celerity.Language.Syntax.Tree.RaiseExpressionSyntax!
Vezel.Celerity.Language.Semantics.Tree.RaiseExpressionSemantics.Try.get -> Vezel.Celerity.Language.Semantics.Tree.TryExpressionSemantics?
Vezel.Celerity.Language.Semantics.Tree.ReceiveExpressionArmSemantics
Vezel.Celerity.Language.Semantics.Tree.ReceiveExpressionArmSemantics.Guard.get -> Vezel.Celerity.Language.Semantics.Tree.ExpressionSemantics?
Vezel.Celerity.Language.Semantics.Tree.ReceiveExpressionArmSemantics.Name.get -> string!
Vezel.Celerity.Language.Semantics.Tree.ReceiveExpressionArmSemantics.Parameters.get -> Vezel.Celerity.Language.Semantics.Tree.SeparatedSemanticNodeList<Vezel.Celerity.Language.Semantics.Tree.ReceiveParameterSemantics!, Vezel.Celerity.Language.Syntax.Tree.ReceiveParameterSyntax!>
Vezel.Celerity.Language.Semantics.Tree.ReceiveExpressionArmSemantics.Parent.get -> Vezel.Celerity.Language.Semantics.Tree.ReceiveExpressionSemantics!
Vezel.Celerity.Language.Semantics.Tree.ReceiveExpressionArmSemantics.Syntax.get -> Vezel.Celerity.Language.Syntax.Tree.ReceiveExpressionArmSyntax!
Vezel.Celerity.Language.Semantics.Tree.ReceiveExpressionSemantics
Vezel.Celerity.Language.Semantics.Tree.ReceiveExpressionSemantics.Arms.get -> Vezel.Celerity.Language.Semantics.Tree.SeparatedSemanticNodeList<Vezel.Celerity.Language.Semantics.Tree.ReceiveExpressionArmSemantics!, Vezel.Celerity.Language.Syntax.Tree.ReceiveExpressionArmSyntax!>
Vezel.Celerity.Language.Semantics.Tree.ReceiveExpressionSemantics.Else.get -> Vezel.Celerity.Language.Semantics.Tree.BlockExpressionSemantics?
Vezel.Celerity.Language.Semantics.Tree.ReceiveExpressionSemantics.Parent.get -> Vezel.Celerity.Language.Semantics.Tree.SemanticNode!
Vezel.Celerity.Language.Semantics.Tree.ReceiveExpressionSemantics.Syntax.get -> Vezel.Celerity.Language.Syntax.Tree.ReceiveExpressionSyntax!
Vezel.Celerity.Language.Semantics.Tree.ReceiveParameterSemantics
Vezel.Celerity.Language.Semantics.Tree.ReceiveParameterSemantics.Parent.get -> Vezel.Celerity.Language.Semantics.Tree.ReceiveExpressionArmSemantics!
Vezel.Celerity.Language.Semantics.Tree.ReceiveParameterSemantics.Pattern.get -> Vezel.Celerity.Language.Semantics.Tree.PatternSemantics!
Vezel.Celerity.Language.Semantics.Tree.ReceiveParameterSemantics.Syntax.get -> Vezel.Celerity.Language.Syntax.Tree.ReceiveParameterSyntax!
Vezel.Celerity.Language.Semantics.Tree.RecordExpressionSemantics
Vezel.Celerity.Language.Semantics.Tree.RecordExpressionSemantics.Meta.get -> Vezel.Celerity.Language.Semantics.Tree.ExpressionSemantics?
Vezel.Celerity.Language.Semantics.Tree.RecordExpressionSemantics.Parent.get -> Vezel.Celerity.Language.Semantics.Tree.SemanticNode!
Vezel.Celerity.Language.Semantics.Tree.RecordExpressionSemantics.Syntax.get -> Vezel.Celerity.Language.Syntax.Tree.RecordExpressionSyntax!
Vezel.Celerity.Language.Semantics.Tree.RecordPatternSemantics
Vezel.Celerity.Language.Semantics.Tree.RecordPatternSemantics.Parent.get -> Vezel.Celerity.Language.Semantics.Tree.SemanticNode!
Vezel.Celerity.Language.Semantics.Tree.RecordPatternSemantics.Syntax.get -> Vezel.Celerity.Language.Syntax.Tree.RecordPatternSyntax!
Vezel.Celerity.Language.Semantics.Tree.RelationalExpressionSemantics
Vezel.Celerity.Language.Semantics.Tree.RelationalExpressionSemantics.LeftOperand.get -> Vezel.Celerity.Language.Semantics.Tree.ExpressionSemantics!
Vezel.Celerity.Language.Semantics.Tree.RelationalExpressionSemantics.Parent.get -> Vezel.Celerity.Language.Semantics.Tree.SemanticNode!
Vezel.Celerity.Language.Semantics.Tree.RelationalExpressionSemantics.RightOperand.get -> Vezel.Celerity.Language.Semantics.Tree.ExpressionSemantics!
Vezel.Celerity.Language.Semantics.Tree.RelationalExpressionSemantics.Syntax.get -> Vezel.Celerity.Language.Syntax.Tree.RelationalExpressionSyntax!
Vezel.Celerity.Language.Semantics.Tree.ReturnExpressionSemantics
Vezel.Celerity.Language.Semantics.Tree.ReturnExpressionSemantics.IsTail.get -> bool
Vezel.Celerity.Language.Semantics.Tree.ReturnExpressionSemantics.Operand.get -> Vezel.Celerity.Language.Semantics.Tree.ExpressionSemantics!
Vezel.Celerity.Language.Semantics.Tree.ReturnExpressionSemantics.Parent.get -> Vezel.Celerity.Language.Semantics.Tree.SemanticNode!
Vezel.Celerity.Language.Semantics.Tree.ReturnExpressionSemantics.Syntax.get -> Vezel.Celerity.Language.Syntax.Tree.ReturnExpressionSyntax!
Vezel.Celerity.Language.Semantics.Tree.SemanticNode
Vezel.Celerity.Language.Semantics.Tree.SemanticNode.Ancestors() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Semantics.Tree.SemanticNode!>!
Vezel.Celerity.Language.Semantics.Tree.SemanticNode.AncestorsAndSelf() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Semantics.Tree.SemanticNode!>!
Vezel.Celerity.Language.Semantics.Tree.SemanticNode.ChildrenAndSelf() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Semantics.Tree.SemanticNode!>!
Vezel.Celerity.Language.Semantics.Tree.SemanticNode.Descendants() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Semantics.Tree.SemanticNode!>!
Vezel.Celerity.Language.Semantics.Tree.SemanticNode.DescendantsAndSelf() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Semantics.Tree.SemanticNode!>!
Vezel.Celerity.Language.Semantics.Tree.SemanticNode.Parent.get -> Vezel.Celerity.Language.Semantics.Tree.SemanticNode?
Vezel.Celerity.Language.Semantics.Tree.SemanticNode.Siblings() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Semantics.Tree.SemanticNode!>!
Vezel.Celerity.Language.Semantics.Tree.SemanticNode.SiblingsAndSelf() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Semantics.Tree.SemanticNode!>!
Vezel.Celerity.Language.Semantics.Tree.SemanticNode.Syntax.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!
Vezel.Celerity.Language.Semantics.Tree.SemanticNode.ToFullString() -> string!
Vezel.Celerity.Language.Semantics.Tree.SemanticNode.Tree.get -> Vezel.Celerity.Language.Semantics.SemanticTree!
Vezel.Celerity.Language.Semantics.Tree.SemanticNodeList<TSemantics, TSyntax>
Vezel.Celerity.Language.Semantics.Tree.SemanticNodeList<TSemantics, TSyntax>.Count.get -> int
Vezel.Celerity.Language.Semantics.Tree.SemanticNodeList<TSemantics, TSyntax>.Enumerator
Vezel.Celerity.Language.Semantics.Tree.SemanticNodeList<TSemantics, TSyntax>.Enumerator.Current.get -> TSemantics!
Vezel.Celerity.Language.Semantics.Tree.SemanticNodeList<TSemantics, TSyntax>.Enumerator.Enumerator() -> void
Vezel.Celerity.Language.Semantics.Tree.SemanticNodeList<TSemantics, TSyntax>.Enumerator.MoveNext() -> bool
Vezel.Celerity.Language.Semantics.Tree.SemanticNodeList<TSemantics, TSyntax>.IsDefault.get -> bool
Vezel.Celerity.Language.Semantics.Tree.SemanticNodeList<TSemantics, TSyntax>.IsDefaultOrEmpty.get -> bool
Vezel.Celerity.Language.Semantics.Tree.SemanticNodeList<TSemantics, TSyntax>.IsEmpty.get -> bool
Vezel.Celerity.Language.Semantics.Tree.SemanticNodeList<TSemantics, TSyntax>.Parent.get -> Vezel.Celerity.Language.Semantics.Tree.SemanticNode!
Vezel.Celerity.Language.Semantics.Tree.SemanticNodeList<TSemantics, TSyntax>.SemanticNodeList() -> void
Vezel.Celerity.Language.Semantics.Tree.SemanticNodeList<TSemantics, TSyntax>.Syntax.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxItemList<TSyntax!>
Vezel.Celerity.Language.Semantics.Tree.SemanticNodeList<TSemantics, TSyntax>.this[int index].get -> TSemantics!
Vezel.Celerity.Language.Semantics.Tree.SemanticNodeList<TSemantics, TSyntax>.ToFullString() -> string!
Vezel.Celerity.Language.Semantics.Tree.SemanticNodeList<TSemantics, TSyntax>.Tree.get -> Vezel.Celerity.Language.Semantics.SemanticTree!
Vezel.Celerity.Language.Semantics.Tree.SendExpressionSemantics
Vezel.Celerity.Language.Semantics.Tree.SendExpressionSemantics.Arguments.get -> Vezel.Celerity.Language.Semantics.Tree.SeparatedSemanticNodeList<Vezel.Celerity.Language.Semantics.Tree.ExpressionSemantics!, Vezel.Celerity.Language.Syntax.Tree.ExpressionSyntax!>
Vezel.Celerity.Language.Semantics.Tree.SendExpressionSemantics.Name.get -> string!
Vezel.Celerity.Language.Semantics.Tree.SendExpressionSemantics.Parent.get -> Vezel.Celerity.Language.Semantics.Tree.SemanticNode!
Vezel.Celerity.Language.Semantics.Tree.SendExpressionSemantics.Syntax.get -> Vezel.Celerity.Language.Syntax.Tree.SendExpressionSyntax!
Vezel.Celerity.Language.Semantics.Tree.SeparatedSemanticNodeList<TSemantics, TSyntax>
Vezel.Celerity.Language.Semantics.Tree.SeparatedSemanticNodeList<TSemantics, TSyntax>.Count.get -> int
Vezel.Celerity.Language.Semantics.Tree.SeparatedSemanticNodeList<TSemantics, TSyntax>.Enumerator
Vezel.Celerity.Language.Semantics.Tree.SeparatedSemanticNodeList<TSemantics, TSyntax>.Enumerator.Current.get -> TSemantics!
Vezel.Celerity.Language.Semantics.Tree.SeparatedSemanticNodeList<TSemantics, TSyntax>.Enumerator.Enumerator() -> void
Vezel.Celerity.Language.Semantics.Tree.SeparatedSemanticNodeList<TSemantics, TSyntax>.Enumerator.MoveNext() -> bool
Vezel.Celerity.Language.Semantics.Tree.SeparatedSemanticNodeList<TSemantics, TSyntax>.IsDefault.get -> bool
Vezel.Celerity.Language.Semantics.Tree.SeparatedSemanticNodeList<TSemantics, TSyntax>.IsDefaultOrEmpty.get -> bool
Vezel.Celerity.Language.Semantics.Tree.SeparatedSemanticNodeList<TSemantics, TSyntax>.IsEmpty.get -> bool
Vezel.Celerity.Language.Semantics.Tree.SeparatedSemanticNodeList<TSemantics, TSyntax>.Parent.get -> Vezel.Celerity.Language.Semantics.Tree.SemanticNode!
Vezel.Celerity.Language.Semantics.Tree.SeparatedSemanticNodeList<TSemantics, TSyntax>.SeparatedSemanticNodeList() -> void
Vezel.Celerity.Language.Semantics.Tree.SeparatedSemanticNodeList<TSemantics, TSyntax>.Syntax.get -> Vezel.Celerity.Language.Syntax.Tree.SeparatedSyntaxItemList<TSyntax!>
Vezel.Celerity.Language.Semantics.Tree.SeparatedSemanticNodeList<TSemantics, TSyntax>.this[int index].get -> TSemantics!
Vezel.Celerity.Language.Semantics.Tree.SeparatedSemanticNodeList<TSemantics, TSyntax>.ToFullString() -> string!
Vezel.Celerity.Language.Semantics.Tree.SeparatedSemanticNodeList<TSemantics, TSyntax>.Tree.get -> Vezel.Celerity.Language.Semantics.SemanticTree!
Vezel.Celerity.Language.Semantics.Tree.SetExpressionSemantics
Vezel.Celerity.Language.Semantics.Tree.SetExpressionSemantics.Elements.get -> Vezel.Celerity.Language.Semantics.Tree.SeparatedSemanticNodeList<Vezel.Celerity.Language.Semantics.Tree.ExpressionSemantics!, Vezel.Celerity.Language.Syntax.Tree.ExpressionSyntax!>
Vezel.Celerity.Language.Semantics.Tree.SetExpressionSemantics.IsMutable.get -> bool
Vezel.Celerity.Language.Semantics.Tree.SetExpressionSemantics.Parent.get -> Vezel.Celerity.Language.Semantics.Tree.SemanticNode!
Vezel.Celerity.Language.Semantics.Tree.SetExpressionSemantics.Syntax.get -> Vezel.Celerity.Language.Syntax.Tree.SetExpressionSyntax!
Vezel.Celerity.Language.Semantics.Tree.SetPatternSemantics
Vezel.Celerity.Language.Semantics.Tree.SetPatternSemantics.Elements.get -> Vezel.Celerity.Language.Semantics.Tree.SeparatedSemanticNodeList<Vezel.Celerity.Language.Semantics.Tree.ExpressionSemantics!, Vezel.Celerity.Language.Syntax.Tree.ExpressionSyntax!>
Vezel.Celerity.Language.Semantics.Tree.SetPatternSemantics.Parent.get -> Vezel.Celerity.Language.Semantics.Tree.SemanticNode!
Vezel.Celerity.Language.Semantics.Tree.SetPatternSemantics.Syntax.get -> Vezel.Celerity.Language.Syntax.Tree.SetPatternSyntax!
Vezel.Celerity.Language.Semantics.Tree.ShiftExpressionSemantics
Vezel.Celerity.Language.Semantics.Tree.ShiftExpressionSemantics.LeftOperand.get -> Vezel.Celerity.Language.Semantics.Tree.ExpressionSemantics!
Vezel.Celerity.Language.Semantics.Tree.ShiftExpressionSemantics.Parent.get -> Vezel.Celerity.Language.Semantics.Tree.SemanticNode!
Vezel.Celerity.Language.Semantics.Tree.ShiftExpressionSemantics.RightOperand.get -> Vezel.Celerity.Language.Semantics.Tree.ExpressionSemantics!
Vezel.Celerity.Language.Semantics.Tree.ShiftExpressionSemantics.Syntax.get -> Vezel.Celerity.Language.Syntax.Tree.ShiftExpressionSyntax!
Vezel.Celerity.Language.Semantics.Tree.StatementSemantics
Vezel.Celerity.Language.Semantics.Tree.StatementSemantics.Parent.get -> Vezel.Celerity.Language.Semantics.Tree.SemanticNode!
Vezel.Celerity.Language.Semantics.Tree.StatementSemantics.Syntax.get -> Vezel.Celerity.Language.Syntax.Tree.StatementSyntax!
Vezel.Celerity.Language.Semantics.Tree.StatementSubmissionSemantics
Vezel.Celerity.Language.Semantics.Tree.StatementSubmissionSemantics.Parent.get -> Vezel.Celerity.Language.Semantics.Tree.InteractiveDocumentSemantics!
Vezel.Celerity.Language.Semantics.Tree.StatementSubmissionSemantics.Statement.get -> Vezel.Celerity.Language.Semantics.Tree.StatementSemantics!
Vezel.Celerity.Language.Semantics.Tree.StatementSubmissionSemantics.Syntax.get -> Vezel.Celerity.Language.Syntax.Tree.StatementSubmissionSyntax!
Vezel.Celerity.Language.Semantics.Tree.StringPatternSemantics
Vezel.Celerity.Language.Semantics.Tree.StringPatternSemantics.LeftLiteral.get -> string?
Vezel.Celerity.Language.Semantics.Tree.StringPatternSemantics.MiddleBinding.get -> Vezel.Celerity.Language.Semantics.Tree.BindingSemantics?
Vezel.Celerity.Language.Semantics.Tree.StringPatternSemantics.Parent.get -> Vezel.Celerity.Language.Semantics.Tree.SemanticNode!
Vezel.Celerity.Language.Semantics.Tree.StringPatternSemantics.RightLiteral.get -> string?
Vezel.Celerity.Language.Semantics.Tree.StringPatternSemantics.Syntax.get -> Vezel.Celerity.Language.Syntax.Tree.StringPatternSyntax!
Vezel.Celerity.Language.Semantics.Tree.SubmissionSemantics
Vezel.Celerity.Language.Semantics.Tree.SubmissionSemantics.Parent.get -> Vezel.Celerity.Language.Semantics.Tree.InteractiveDocumentSemantics!
Vezel.Celerity.Language.Semantics.Tree.SubmissionSemantics.Syntax.get -> Vezel.Celerity.Language.Syntax.Tree.SubmissionSyntax!
Vezel.Celerity.Language.Semantics.Tree.TestDeclarationSemantics
Vezel.Celerity.Language.Semantics.Tree.TestDeclarationSemantics.Parent.get -> Vezel.Celerity.Language.Semantics.Tree.ModuleDocumentSemantics!
Vezel.Celerity.Language.Semantics.Tree.TestDeclarationSemantics.Syntax.get -> Vezel.Celerity.Language.Syntax.Tree.TestDeclarationSyntax!
Vezel.Celerity.Language.Semantics.Tree.ThisExpressionSemantics
Vezel.Celerity.Language.Semantics.Tree.ThisExpressionSemantics.Lambda.get -> Vezel.Celerity.Language.Semantics.Tree.LambdaExpressionSemantics?
Vezel.Celerity.Language.Semantics.Tree.ThisExpressionSemantics.Parent.get -> Vezel.Celerity.Language.Semantics.Tree.SemanticNode!
Vezel.Celerity.Language.Semantics.Tree.ThisExpressionSemantics.Syntax.get -> Vezel.Celerity.Language.Syntax.Tree.ThisExpressionSyntax!
Vezel.Celerity.Language.Semantics.Tree.TryExpressionSemantics
Vezel.Celerity.Language.Semantics.Tree.TryExpressionSemantics.Arms.get -> Vezel.Celerity.Language.Semantics.Tree.SeparatedSemanticNodeList<Vezel.Celerity.Language.Semantics.Tree.ExpressionPatternArmSemantics!, Vezel.Celerity.Language.Syntax.Tree.ExpressionPatternArmSyntax!>
Vezel.Celerity.Language.Semantics.Tree.TryExpressionSemantics.Calls.get -> System.Collections.Immutable.ImmutableArray<Vezel.Celerity.Language.Semantics.Tree.CallExpressionSemantics!>
Vezel.Celerity.Language.Semantics.Tree.TryExpressionSemantics.Operand.get -> Vezel.Celerity.Language.Semantics.Tree.ExpressionSemantics!
Vezel.Celerity.Language.Semantics.Tree.TryExpressionSemantics.Parent.get -> Vezel.Celerity.Language.Semantics.Tree.SemanticNode!
Vezel.Celerity.Language.Semantics.Tree.TryExpressionSemantics.Raises.get -> System.Collections.Immutable.ImmutableArray<Vezel.Celerity.Language.Semantics.Tree.RaiseExpressionSemantics!>
Vezel.Celerity.Language.Semantics.Tree.TryExpressionSemantics.Syntax.get -> Vezel.Celerity.Language.Syntax.Tree.TryExpressionSyntax!
Vezel.Celerity.Language.Semantics.Tree.TupleExpressionSemantics
Vezel.Celerity.Language.Semantics.Tree.TupleExpressionSemantics.Components.get -> Vezel.Celerity.Language.Semantics.Tree.SeparatedSemanticNodeList<Vezel.Celerity.Language.Semantics.Tree.ExpressionSemantics!, Vezel.Celerity.Language.Syntax.Tree.ExpressionSyntax!>
Vezel.Celerity.Language.Semantics.Tree.TupleExpressionSemantics.Parent.get -> Vezel.Celerity.Language.Semantics.Tree.SemanticNode!
Vezel.Celerity.Language.Semantics.Tree.TupleExpressionSemantics.Syntax.get -> Vezel.Celerity.Language.Syntax.Tree.TupleExpressionSyntax!
Vezel.Celerity.Language.Semantics.Tree.TuplePatternSemantics
Vezel.Celerity.Language.Semantics.Tree.TuplePatternSemantics.Components.get -> Vezel.Celerity.Language.Semantics.Tree.SeparatedSemanticNodeList<Vezel.Celerity.Language.Semantics.Tree.PatternSemantics!, Vezel.Celerity.Language.Syntax.Tree.PatternSyntax!>
Vezel.Celerity.Language.Semantics.Tree.TuplePatternSemantics.Parent.get -> Vezel.Celerity.Language.Semantics.Tree.SemanticNode!
Vezel.Celerity.Language.Semantics.Tree.TuplePatternSemantics.Syntax.get -> Vezel.Celerity.Language.Syntax.Tree.TuplePatternSyntax!
Vezel.Celerity.Language.Semantics.Tree.UnaryExpressionSemantics
Vezel.Celerity.Language.Semantics.Tree.UnaryExpressionSemantics.Operand.get -> Vezel.Celerity.Language.Semantics.Tree.ExpressionSemantics!
Vezel.Celerity.Language.Semantics.Tree.UnaryExpressionSemantics.Parent.get -> Vezel.Celerity.Language.Semantics.Tree.SemanticNode!
Vezel.Celerity.Language.Semantics.Tree.UnaryExpressionSemantics.Syntax.get -> Vezel.Celerity.Language.Syntax.Tree.UnaryExpressionSyntax!
Vezel.Celerity.Language.Semantics.Tree.UseDeclarationSemantics
Vezel.Celerity.Language.Semantics.Tree.UseDeclarationSemantics.Parent.get -> Vezel.Celerity.Language.Semantics.Tree.SemanticNode!
Vezel.Celerity.Language.Semantics.Tree.UseDeclarationSemantics.Path.get -> Vezel.Celerity.Language.ModulePath?
Vezel.Celerity.Language.Semantics.Tree.UseDeclarationSemantics.Syntax.get -> Vezel.Celerity.Language.Syntax.Tree.UseDeclarationSyntax!
Vezel.Celerity.Language.Semantics.Tree.UseDeclarationSemantics.Use.get -> Vezel.Celerity.Language.Semantics.Tree.UseDeclarationSemantics?
Vezel.Celerity.Language.Semantics.Tree.ValueExpressionSemantics
Vezel.Celerity.Language.Semantics.Tree.ValueExpressionSemantics.Parent.get -> Vezel.Celerity.Language.Semantics.Tree.SemanticNode!
Vezel.Celerity.Language.Semantics.Tree.ValueExpressionSemantics.Syntax.get -> Vezel.Celerity.Language.Syntax.Tree.ValueExpressionSyntax!
Vezel.Celerity.Language.Semantics.Tree.VariableBindingSemantics
Vezel.Celerity.Language.Semantics.Tree.VariableBindingSemantics.IsMutable.get -> bool
Vezel.Celerity.Language.Semantics.Tree.VariableBindingSemantics.Parent.get -> Vezel.Celerity.Language.Semantics.Tree.PatternSemantics!
Vezel.Celerity.Language.Semantics.Tree.VariableBindingSemantics.Syntax.get -> Vezel.Celerity.Language.Syntax.Tree.VariableBindingSyntax!
Vezel.Celerity.Language.Semantics.Tree.WhileExpressionSemantics
Vezel.Celerity.Language.Semantics.Tree.WhileExpressionSemantics.Body.get -> Vezel.Celerity.Language.Semantics.Tree.BlockExpressionSemantics!
Vezel.Celerity.Language.Semantics.Tree.WhileExpressionSemantics.Condition.get -> Vezel.Celerity.Language.Semantics.Tree.ExpressionSemantics!
Vezel.Celerity.Language.Semantics.Tree.WhileExpressionSemantics.Else.get -> Vezel.Celerity.Language.Semantics.Tree.BlockExpressionSemantics?
Vezel.Celerity.Language.Semantics.Tree.WhileExpressionSemantics.Parent.get -> Vezel.Celerity.Language.Semantics.Tree.SemanticNode!
Vezel.Celerity.Language.Semantics.Tree.WhileExpressionSemantics.Syntax.get -> Vezel.Celerity.Language.Syntax.Tree.WhileExpressionSyntax!
Vezel.Celerity.Language.Semantics.Tree.WildcardPatternSemantics
Vezel.Celerity.Language.Semantics.Tree.WildcardPatternSemantics.Binding.get -> Vezel.Celerity.Language.Semantics.Tree.BindingSemantics!
Vezel.Celerity.Language.Semantics.Tree.WildcardPatternSemantics.Parent.get -> Vezel.Celerity.Language.Semantics.Tree.SemanticNode!
Vezel.Celerity.Language.Semantics.Tree.WildcardPatternSemantics.Syntax.get -> Vezel.Celerity.Language.Syntax.Tree.WildcardPatternSyntax!
Vezel.Celerity.Language.StandardDiagnosticCodes
Vezel.Celerity.Language.Syntax.SyntaxFacts
Vezel.Celerity.Language.Syntax.SyntaxMode
Vezel.Celerity.Language.Syntax.SyntaxMode.Interactive = 1 -> Vezel.Celerity.Language.Syntax.SyntaxMode
Vezel.Celerity.Language.Syntax.SyntaxMode.Module = 0 -> Vezel.Celerity.Language.Syntax.SyntaxMode
Vezel.Celerity.Language.Syntax.SyntaxTree
Vezel.Celerity.Language.Syntax.SyntaxTree.Diagnostics.get -> System.Collections.Immutable.ImmutableArray<Vezel.Celerity.Language.Diagnostics.Diagnostic!>
Vezel.Celerity.Language.Syntax.SyntaxTree.GetText() -> Vezel.Celerity.Language.Text.SourceText!
Vezel.Celerity.Language.Syntax.SyntaxTree.Path.get -> string!
Vezel.Celerity.Language.Syntax.SyntaxTree.Root.get -> Vezel.Celerity.Language.Syntax.Tree.DocumentSyntax!
Vezel.Celerity.Language.Syntax.SyntaxVisitor
Vezel.Celerity.Language.Syntax.SyntaxVisitor.SyntaxVisitor() -> void
Vezel.Celerity.Language.Syntax.SyntaxVisitor.Visit(Vezel.Celerity.Language.Syntax.Tree.SyntaxNode! node) -> void
Vezel.Celerity.Language.Syntax.SyntaxVisitor<T>
Vezel.Celerity.Language.Syntax.SyntaxVisitor<T>.SyntaxVisitor() -> void
Vezel.Celerity.Language.Syntax.SyntaxVisitor<T>.Visit(Vezel.Celerity.Language.Syntax.Tree.SyntaxNode! node) -> T?
Vezel.Celerity.Language.Syntax.Tree.AdditiveExpressionSyntax
Vezel.Celerity.Language.Syntax.Tree.AdditiveExpressionSyntax.LeftOperand.get -> Vezel.Celerity.Language.Syntax.Tree.ExpressionSyntax!
Vezel.Celerity.Language.Syntax.Tree.AdditiveExpressionSyntax.OperatorToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
Vezel.Celerity.Language.Syntax.Tree.AdditiveExpressionSyntax.Parent.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!
Vezel.Celerity.Language.Syntax.Tree.AdditiveExpressionSyntax.RightOperand.get -> Vezel.Celerity.Language.Syntax.Tree.ExpressionSyntax!
Vezel.Celerity.Language.Syntax.Tree.AgentTypeMessageParameterListSyntax
Vezel.Celerity.Language.Syntax.Tree.AgentTypeMessageParameterListSyntax.CloseParenToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
Vezel.Celerity.Language.Syntax.Tree.AgentTypeMessageParameterListSyntax.OpenParenToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
Vezel.Celerity.Language.Syntax.Tree.AgentTypeMessageParameterListSyntax.Parameters.get -> Vezel.Celerity.Language.Syntax.Tree.SeparatedSyntaxItemList<Vezel.Celerity.Language.Syntax.Tree.AgentTypeMessageParameterSyntax!>
Vezel.Celerity.Language.Syntax.Tree.AgentTypeMessageParameterListSyntax.Parent.get -> Vezel.Celerity.Language.Syntax.Tree.AgentTypeMessageSyntax!
Vezel.Celerity.Language.Syntax.Tree.AgentTypeMessageParameterSyntax
Vezel.Celerity.Language.Syntax.Tree.AgentTypeMessageParameterSyntax.Parent.get -> Vezel.Celerity.Language.Syntax.Tree.AgentTypeMessageParameterListSyntax!
Vezel.Celerity.Language.Syntax.Tree.AgentTypeMessageParameterSyntax.Type.get -> Vezel.Celerity.Language.Syntax.Tree.TypeSyntax!
Vezel.Celerity.Language.Syntax.Tree.AgentTypeMessageSyntax
Vezel.Celerity.Language.Syntax.Tree.AgentTypeMessageSyntax.NameToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
Vezel.Celerity.Language.Syntax.Tree.AgentTypeMessageSyntax.ParameterList.get -> Vezel.Celerity.Language.Syntax.Tree.AgentTypeMessageParameterListSyntax!
Vezel.Celerity.Language.Syntax.Tree.AgentTypeMessageSyntax.Parent.get -> Vezel.Celerity.Language.Syntax.Tree.AgentTypeProtocolSyntax!
Vezel.Celerity.Language.Syntax.Tree.AgentTypeProtocolSyntax
Vezel.Celerity.Language.Syntax.Tree.AgentTypeProtocolSyntax.CloseBraceToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
Vezel.Celerity.Language.Syntax.Tree.AgentTypeProtocolSyntax.Messages.get -> Vezel.Celerity.Language.Syntax.Tree.SeparatedSyntaxItemList<Vezel.Celerity.Language.Syntax.Tree.AgentTypeMessageSyntax!>
Vezel.Celerity.Language.Syntax.Tree.AgentTypeProtocolSyntax.OpenBraceToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
Vezel.Celerity.Language.Syntax.Tree.AgentTypeProtocolSyntax.Parent.get -> Vezel.Celerity.Language.Syntax.Tree.AgentTypeSyntax!
Vezel.Celerity.Language.Syntax.Tree.AgentTypeSyntax
Vezel.Celerity.Language.Syntax.Tree.AgentTypeSyntax.AgentKeywordToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
Vezel.Celerity.Language.Syntax.Tree.AgentTypeSyntax.Parent.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!
Vezel.Celerity.Language.Syntax.Tree.AgentTypeSyntax.Protocol.get -> Vezel.Celerity.Language.Syntax.Tree.AgentTypeProtocolSyntax?
Vezel.Celerity.Language.Syntax.Tree.AggregateExpressionFieldSyntax
Vezel.Celerity.Language.Syntax.Tree.AggregateExpressionFieldSyntax.ColonToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
Vezel.Celerity.Language.Syntax.Tree.AggregateExpressionFieldSyntax.MutKeywordToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken?
Vezel.Celerity.Language.Syntax.Tree.AggregateExpressionFieldSyntax.NameToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
Vezel.Celerity.Language.Syntax.Tree.AggregateExpressionFieldSyntax.Parent.get -> Vezel.Celerity.Language.Syntax.Tree.AggregateExpressionSyntax!
Vezel.Celerity.Language.Syntax.Tree.AggregateExpressionFieldSyntax.Value.get -> Vezel.Celerity.Language.Syntax.Tree.ExpressionSyntax!
Vezel.Celerity.Language.Syntax.Tree.AggregateExpressionSyntax
Vezel.Celerity.Language.Syntax.Tree.AggregateExpressionSyntax.Parent.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!
Vezel.Celerity.Language.Syntax.Tree.AggregateExpressionWithSyntax
Vezel.Celerity.Language.Syntax.Tree.AggregateExpressionWithSyntax.Operand.get -> Vezel.Celerity.Language.Syntax.Tree.ExpressionSyntax!
Vezel.Celerity.Language.Syntax.Tree.AggregateExpressionWithSyntax.Parent.get -> Vezel.Celerity.Language.Syntax.Tree.AggregateExpressionSyntax!
Vezel.Celerity.Language.Syntax.Tree.AggregateExpressionWithSyntax.WithKeywordToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
Vezel.Celerity.Language.Syntax.Tree.AggregatePatternFieldSyntax
Vezel.Celerity.Language.Syntax.Tree.AggregatePatternFieldSyntax.ColonToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
Vezel.Celerity.Language.Syntax.Tree.AggregatePatternFieldSyntax.NameToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
Vezel.Celerity.Language.Syntax.Tree.AggregatePatternFieldSyntax.Parent.get -> Vezel.Celerity.Language.Syntax.Tree.AggregatePatternSyntax!
Vezel.Celerity.Language.Syntax.Tree.AggregatePatternFieldSyntax.Pattern.get -> Vezel.Celerity.Language.Syntax.Tree.PatternSyntax!
Vezel.Celerity.Language.Syntax.Tree.AggregatePatternSyntax
Vezel.Celerity.Language.Syntax.Tree.AggregatePatternSyntax.Parent.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!
Vezel.Celerity.Language.Syntax.Tree.AggregateTypeFieldSyntax
Vezel.Celerity.Language.Syntax.Tree.AggregateTypeFieldSyntax.ColonToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
Vezel.Celerity.Language.Syntax.Tree.AggregateTypeFieldSyntax.MutKeywordToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken?
Vezel.Celerity.Language.Syntax.Tree.AggregateTypeFieldSyntax.NameToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
Vezel.Celerity.Language.Syntax.Tree.AggregateTypeFieldSyntax.Parent.get -> Vezel.Celerity.Language.Syntax.Tree.AggregateTypeSyntax!
Vezel.Celerity.Language.Syntax.Tree.AggregateTypeFieldSyntax.Type.get -> Vezel.Celerity.Language.Syntax.Tree.TypeSyntax!
Vezel.Celerity.Language.Syntax.Tree.AggregateTypeSyntax
Vezel.Celerity.Language.Syntax.Tree.AggregateTypeSyntax.Parent.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!
Vezel.Celerity.Language.Syntax.Tree.AnyTypeSyntax
Vezel.Celerity.Language.Syntax.Tree.AnyTypeSyntax.AnyKeywordToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
Vezel.Celerity.Language.Syntax.Tree.AnyTypeSyntax.Parent.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!
Vezel.Celerity.Language.Syntax.Tree.ArrayExpressionSyntax
Vezel.Celerity.Language.Syntax.Tree.ArrayExpressionSyntax.CloseBracketToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
Vezel.Celerity.Language.Syntax.Tree.ArrayExpressionSyntax.Elements.get -> Vezel.Celerity.Language.Syntax.Tree.SeparatedSyntaxItemList<Vezel.Celerity.Language.Syntax.Tree.ExpressionSyntax!>
Vezel.Celerity.Language.Syntax.Tree.ArrayExpressionSyntax.MutKeywordToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken?
Vezel.Celerity.Language.Syntax.Tree.ArrayExpressionSyntax.OpenBracketToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
Vezel.Celerity.Language.Syntax.Tree.ArrayExpressionSyntax.Parent.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!
Vezel.Celerity.Language.Syntax.Tree.ArrayPatternSyntax
Vezel.Celerity.Language.Syntax.Tree.ArrayPatternSyntax.CloseBracketToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
Vezel.Celerity.Language.Syntax.Tree.ArrayPatternSyntax.Elements.get -> Vezel.Celerity.Language.Syntax.Tree.SeparatedSyntaxItemList<Vezel.Celerity.Language.Syntax.Tree.PatternSyntax!>
Vezel.Celerity.Language.Syntax.Tree.ArrayPatternSyntax.LeftDotDotToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken?
Vezel.Celerity.Language.Syntax.Tree.ArrayPatternSyntax.OpenBracketToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
Vezel.Celerity.Language.Syntax.Tree.ArrayPatternSyntax.Parent.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!
Vezel.Celerity.Language.Syntax.Tree.ArrayPatternSyntax.RightDotDotToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken?
Vezel.Celerity.Language.Syntax.Tree.ArrayTypeSyntax
Vezel.Celerity.Language.Syntax.Tree.ArrayTypeSyntax.CloseBracketToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
Vezel.Celerity.Language.Syntax.Tree.ArrayTypeSyntax.Element.get -> Vezel.Celerity.Language.Syntax.Tree.TypeSyntax!
Vezel.Celerity.Language.Syntax.Tree.ArrayTypeSyntax.MutKeywordToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken?
Vezel.Celerity.Language.Syntax.Tree.ArrayTypeSyntax.OpenBracketToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
Vezel.Celerity.Language.Syntax.Tree.ArrayTypeSyntax.Parent.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!
Vezel.Celerity.Language.Syntax.Tree.AssertExpressionSyntax
Vezel.Celerity.Language.Syntax.Tree.AssertExpressionSyntax.AssertKeywordToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
Vezel.Celerity.Language.Syntax.Tree.AssertExpressionSyntax.Condition.get -> Vezel.Celerity.Language.Syntax.Tree.ExpressionSyntax!
Vezel.Celerity.Language.Syntax.Tree.AssertExpressionSyntax.Parent.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!
Vezel.Celerity.Language.Syntax.Tree.AssignmentExpressionSyntax
Vezel.Celerity.Language.Syntax.Tree.AssignmentExpressionSyntax.LeftOperand.get -> Vezel.Celerity.Language.Syntax.Tree.ExpressionSyntax!
Vezel.Celerity.Language.Syntax.Tree.AssignmentExpressionSyntax.OperatorToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
Vezel.Celerity.Language.Syntax.Tree.AssignmentExpressionSyntax.Parent.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!
Vezel.Celerity.Language.Syntax.Tree.AssignmentExpressionSyntax.RightOperand.get -> Vezel.Celerity.Language.Syntax.Tree.ExpressionSyntax!
Vezel.Celerity.Language.Syntax.Tree.AtomTypeSyntax
Vezel.Celerity.Language.Syntax.Tree.AtomTypeSyntax.AtomKeywordToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
Vezel.Celerity.Language.Syntax.Tree.AtomTypeSyntax.Parent.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!
Vezel.Celerity.Language.Syntax.Tree.AttributeSyntax
Vezel.Celerity.Language.Syntax.Tree.AttributeSyntax.AtToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
Vezel.Celerity.Language.Syntax.Tree.AttributeSyntax.NameToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
Vezel.Celerity.Language.Syntax.Tree.AttributeSyntax.Parent.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!
Vezel.Celerity.Language.Syntax.Tree.AttributeSyntax.ValueToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
Vezel.Celerity.Language.Syntax.Tree.BinaryOperatorExpressionSyntax
Vezel.Celerity.Language.Syntax.Tree.BinaryOperatorExpressionSyntax.Parent.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!
Vezel.Celerity.Language.Syntax.Tree.BindingSyntax
Vezel.Celerity.Language.Syntax.Tree.BindingSyntax.Parent.get -> Vezel.Celerity.Language.Syntax.Tree.PatternSyntax!
Vezel.Celerity.Language.Syntax.Tree.BitwiseExpressionSyntax
Vezel.Celerity.Language.Syntax.Tree.BitwiseExpressionSyntax.LeftOperand.get -> Vezel.Celerity.Language.Syntax.Tree.ExpressionSyntax!
Vezel.Celerity.Language.Syntax.Tree.BitwiseExpressionSyntax.OperatorToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
Vezel.Celerity.Language.Syntax.Tree.BitwiseExpressionSyntax.Parent.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!
Vezel.Celerity.Language.Syntax.Tree.BitwiseExpressionSyntax.RightOperand.get -> Vezel.Celerity.Language.Syntax.Tree.ExpressionSyntax!
Vezel.Celerity.Language.Syntax.Tree.BlockExpressionSyntax
Vezel.Celerity.Language.Syntax.Tree.BlockExpressionSyntax.CloseBraceToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
Vezel.Celerity.Language.Syntax.Tree.BlockExpressionSyntax.OpenBraceToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
Vezel.Celerity.Language.Syntax.Tree.BlockExpressionSyntax.Parent.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!
Vezel.Celerity.Language.Syntax.Tree.BlockExpressionSyntax.Statements.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxItemList<Vezel.Celerity.Language.Syntax.Tree.StatementSyntax!>
Vezel.Celerity.Language.Syntax.Tree.BooleanTypeSyntax
Vezel.Celerity.Language.Syntax.Tree.BooleanTypeSyntax.BoolKeywordToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
Vezel.Celerity.Language.Syntax.Tree.BooleanTypeSyntax.Parent.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!
Vezel.Celerity.Language.Syntax.Tree.BranchExpressionSyntax
Vezel.Celerity.Language.Syntax.Tree.BranchExpressionSyntax.Parent.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!
Vezel.Celerity.Language.Syntax.Tree.BreakExpressionResultSyntax
Vezel.Celerity.Language.Syntax.Tree.BreakExpressionResultSyntax.AsKeywordToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
Vezel.Celerity.Language.Syntax.Tree.BreakExpressionResultSyntax.Parent.get -> Vezel.Celerity.Language.Syntax.Tree.BreakExpressionSyntax!
Vezel.Celerity.Language.Syntax.Tree.BreakExpressionResultSyntax.Value.get -> Vezel.Celerity.Language.Syntax.Tree.ExpressionSyntax!
Vezel.Celerity.Language.Syntax.Tree.BreakExpressionSyntax
Vezel.Celerity.Language.Syntax.Tree.BreakExpressionSyntax.BreakKeywordToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
Vezel.Celerity.Language.Syntax.Tree.BreakExpressionSyntax.Parent.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!
Vezel.Celerity.Language.Syntax.Tree.BreakExpressionSyntax.Result.get -> Vezel.Celerity.Language.Syntax.Tree.BreakExpressionResultSyntax?
Vezel.Celerity.Language.Syntax.Tree.CallArgumentListSyntax
Vezel.Celerity.Language.Syntax.Tree.CallArgumentListSyntax.Arguments.get -> Vezel.Celerity.Language.Syntax.Tree.SeparatedSyntaxItemList<Vezel.Celerity.Language.Syntax.Tree.ExpressionSyntax!>
Vezel.Celerity.Language.Syntax.Tree.CallArgumentListSyntax.CloseParenToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
Vezel.Celerity.Language.Syntax.Tree.CallArgumentListSyntax.OpenParenToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
Vezel.Celerity.Language.Syntax.Tree.CallArgumentListSyntax.Parent.get -> Vezel.Celerity.Language.Syntax.Tree.CallExpressionSyntax!
Vezel.Celerity.Language.Syntax.Tree.CallExpressionSyntax
Vezel.Celerity.Language.Syntax.Tree.CallExpressionSyntax.ArgumentList.get -> Vezel.Celerity.Language.Syntax.Tree.CallArgumentListSyntax!
Vezel.Celerity.Language.Syntax.Tree.CallExpressionSyntax.Parent.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!
Vezel.Celerity.Language.Syntax.Tree.CallExpressionSyntax.QuestionToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken?
Vezel.Celerity.Language.Syntax.Tree.CodeDeclarationSyntax
Vezel.Celerity.Language.Syntax.Tree.CodeDeclarationSyntax.Parent.get -> Vezel.Celerity.Language.Syntax.Tree.ModuleDocumentSyntax!
Vezel.Celerity.Language.Syntax.Tree.CodeParameterSyntax
Vezel.Celerity.Language.Syntax.Tree.CodeParameterSyntax.Parent.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!
Vezel.Celerity.Language.Syntax.Tree.ConditionalExpressionSyntax
Vezel.Celerity.Language.Syntax.Tree.ConditionalExpressionSyntax.Parent.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!
Vezel.Celerity.Language.Syntax.Tree.ConditionExpressionArmSyntax
Vezel.Celerity.Language.Syntax.Tree.ConditionExpressionArmSyntax.Condition.get -> Vezel.Celerity.Language.Syntax.Tree.ExpressionSyntax!
Vezel.Celerity.Language.Syntax.Tree.ConditionExpressionArmSyntax.Parent.get -> Vezel.Celerity.Language.Syntax.Tree.ConditionExpressionSyntax!
Vezel.Celerity.Language.Syntax.Tree.ConditionExpressionSyntax
Vezel.Celerity.Language.Syntax.Tree.ConditionExpressionSyntax.Arms.get -> Vezel.Celerity.Language.Syntax.Tree.SeparatedSyntaxItemList<Vezel.Celerity.Language.Syntax.Tree.ConditionExpressionArmSyntax!>
Vezel.Celerity.Language.Syntax.Tree.ConditionExpressionSyntax.CloseBraceToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
Vezel.Celerity.Language.Syntax.Tree.ConditionExpressionSyntax.CondKeywordToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
Vezel.Celerity.Language.Syntax.Tree.ConditionExpressionSyntax.OpenBraceToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
Vezel.Celerity.Language.Syntax.Tree.ConditionExpressionSyntax.Parent.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!
Vezel.Celerity.Language.Syntax.Tree.ConstantDeclarationSyntax
Vezel.Celerity.Language.Syntax.Tree.ConstantDeclarationSyntax.ConstKeywordToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
Vezel.Celerity.Language.Syntax.Tree.ConstantDeclarationSyntax.EqualsToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
Vezel.Celerity.Language.Syntax.Tree.ConstantDeclarationSyntax.Parent.get -> Vezel.Celerity.Language.Syntax.Tree.ModuleDocumentSyntax!
Vezel.Celerity.Language.Syntax.Tree.ConstantDeclarationSyntax.PubKeywordToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken?
Vezel.Celerity.Language.Syntax.Tree.ConstantDeclarationSyntax.SemicolonToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
Vezel.Celerity.Language.Syntax.Tree.ConstantDeclarationSyntax.Type.get -> Vezel.Celerity.Language.Syntax.Tree.TypeAnnotationSyntax?
Vezel.Celerity.Language.Syntax.Tree.ControlExpressionSyntax
Vezel.Celerity.Language.Syntax.Tree.ControlExpressionSyntax.Parent.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!
Vezel.Celerity.Language.Syntax.Tree.DeclarationSubmissionSyntax
Vezel.Celerity.Language.Syntax.Tree.DeclarationSubmissionSyntax.Declaration.get -> Vezel.Celerity.Language.Syntax.Tree.DeclarationSyntax!
Vezel.Celerity.Language.Syntax.Tree.DeclarationSubmissionSyntax.Parent.get -> Vezel.Celerity.Language.Syntax.Tree.InteractiveDocumentSyntax!
Vezel.Celerity.Language.Syntax.Tree.DeclarationSyntax
Vezel.Celerity.Language.Syntax.Tree.DeclarationSyntax.Parent.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!
Vezel.Celerity.Language.Syntax.Tree.DeferStatementSyntax
Vezel.Celerity.Language.Syntax.Tree.DeferStatementSyntax.DeferKeywordToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
Vezel.Celerity.Language.Syntax.Tree.DeferStatementSyntax.Expression.get -> Vezel.Celerity.Language.Syntax.Tree.ExpressionSyntax!
Vezel.Celerity.Language.Syntax.Tree.DeferStatementSyntax.Parent.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!
Vezel.Celerity.Language.Syntax.Tree.DiscardBindingSyntax
Vezel.Celerity.Language.Syntax.Tree.DiscardBindingSyntax.Parent.get -> Vezel.Celerity.Language.Syntax.Tree.PatternSyntax!
Vezel.Celerity.Language.Syntax.Tree.DocumentSyntax
Vezel.Celerity.Language.Syntax.Tree.ErrorExpressionSyntax
Vezel.Celerity.Language.Syntax.Tree.ErrorExpressionSyntax.ErrKeywordToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
Vezel.Celerity.Language.Syntax.Tree.ErrorExpressionSyntax.NameToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
Vezel.Celerity.Language.Syntax.Tree.ErrorExpressionSyntax.Parent.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!
Vezel.Celerity.Language.Syntax.Tree.ErrorPatternSyntax
Vezel.Celerity.Language.Syntax.Tree.ErrorPatternSyntax.ErrKeywordToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
Vezel.Celerity.Language.Syntax.Tree.ErrorPatternSyntax.NameToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken?
Vezel.Celerity.Language.Syntax.Tree.ErrorPatternSyntax.Parent.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!
Vezel.Celerity.Language.Syntax.Tree.ErrorTypeSyntax
Vezel.Celerity.Language.Syntax.Tree.ErrorTypeSyntax.ErrKeywordToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
Vezel.Celerity.Language.Syntax.Tree.ErrorTypeSyntax.NameToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken?
Vezel.Celerity.Language.Syntax.Tree.ErrorTypeSyntax.Parent.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!
Vezel.Celerity.Language.Syntax.Tree.ExpressionArmGuardSyntax
Vezel.Celerity.Language.Syntax.Tree.ExpressionArmGuardSyntax.Condition.get -> Vezel.Celerity.Language.Syntax.Tree.ExpressionSyntax!
Vezel.Celerity.Language.Syntax.Tree.ExpressionArmGuardSyntax.IfKeywordToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
Vezel.Celerity.Language.Syntax.Tree.ExpressionArmGuardSyntax.Parent.get -> Vezel.Celerity.Language.Syntax.Tree.ExpressionArmSyntax!
Vezel.Celerity.Language.Syntax.Tree.ExpressionArmSyntax
Vezel.Celerity.Language.Syntax.Tree.ExpressionArmSyntax.Parent.get -> Vezel.Celerity.Language.Syntax.Tree.ExpressionSyntax!
Vezel.Celerity.Language.Syntax.Tree.ExpressionElseSyntax
Vezel.Celerity.Language.Syntax.Tree.ExpressionElseSyntax.Body.get -> Vezel.Celerity.Language.Syntax.Tree.BlockExpressionSyntax!
Vezel.Celerity.Language.Syntax.Tree.ExpressionElseSyntax.ElseKeywordToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
Vezel.Celerity.Language.Syntax.Tree.ExpressionElseSyntax.Parent.get -> Vezel.Celerity.Language.Syntax.Tree.ExpressionSyntax!
Vezel.Celerity.Language.Syntax.Tree.ExpressionPatternArmSyntax
Vezel.Celerity.Language.Syntax.Tree.ExpressionPatternArmSyntax.Guard.get -> Vezel.Celerity.Language.Syntax.Tree.ExpressionArmGuardSyntax?
Vezel.Celerity.Language.Syntax.Tree.ExpressionPatternArmSyntax.Parent.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!
Vezel.Celerity.Language.Syntax.Tree.ExpressionPatternArmSyntax.Pattern.get -> Vezel.Celerity.Language.Syntax.Tree.PatternSyntax!
Vezel.Celerity.Language.Syntax.Tree.ExpressionStatementSyntax
Vezel.Celerity.Language.Syntax.Tree.ExpressionStatementSyntax.Expression.get -> Vezel.Celerity.Language.Syntax.Tree.ExpressionSyntax!
Vezel.Celerity.Language.Syntax.Tree.ExpressionStatementSyntax.Parent.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!
Vezel.Celerity.Language.Syntax.Tree.ExpressionSyntax
Vezel.Celerity.Language.Syntax.Tree.ExpressionSyntax.Parent.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!
Vezel.Celerity.Language.Syntax.Tree.FieldExpressionSyntax
Vezel.Celerity.Language.Syntax.Tree.FieldExpressionSyntax.DotToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
Vezel.Celerity.Language.Syntax.Tree.FieldExpressionSyntax.NameToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
Vezel.Celerity.Language.Syntax.Tree.FieldExpressionSyntax.Parent.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!
Vezel.Celerity.Language.Syntax.Tree.ForExpressionSyntax
Vezel.Celerity.Language.Syntax.Tree.ForExpressionSyntax.Body.get -> Vezel.Celerity.Language.Syntax.Tree.BlockExpressionSyntax!
Vezel.Celerity.Language.Syntax.Tree.ForExpressionSyntax.Collection.get -> Vezel.Celerity.Language.Syntax.Tree.ExpressionSyntax!
Vezel.Celerity.Language.Syntax.Tree.ForExpressionSyntax.Else.get -> Vezel.Celerity.Language.Syntax.Tree.ExpressionElseSyntax?
Vezel.Celerity.Language.Syntax.Tree.ForExpressionSyntax.ForKeywordToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
Vezel.Celerity.Language.Syntax.Tree.ForExpressionSyntax.InKeywordToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
Vezel.Celerity.Language.Syntax.Tree.ForExpressionSyntax.Parent.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!
Vezel.Celerity.Language.Syntax.Tree.ForExpressionSyntax.Pattern.get -> Vezel.Celerity.Language.Syntax.Tree.PatternSyntax!
Vezel.Celerity.Language.Syntax.Tree.FunctionBranchExpressionSyntax
Vezel.Celerity.Language.Syntax.Tree.FunctionBranchExpressionSyntax.Parent.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!
Vezel.Celerity.Language.Syntax.Tree.FunctionDeclarationSyntax
Vezel.Celerity.Language.Syntax.Tree.FunctionDeclarationSyntax.ErrKeywordToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken?
Vezel.Celerity.Language.Syntax.Tree.FunctionDeclarationSyntax.ExtKeywordToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken?
Vezel.Celerity.Language.Syntax.Tree.FunctionDeclarationSyntax.FnKeywordToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
Vezel.Celerity.Language.Syntax.Tree.FunctionDeclarationSyntax.ParameterList.get -> Vezel.Celerity.Language.Syntax.Tree.FunctionParameterListSyntax!
Vezel.Celerity.Language.Syntax.Tree.FunctionDeclarationSyntax.Parent.get -> Vezel.Celerity.Language.Syntax.Tree.ModuleDocumentSyntax!
Vezel.Celerity.Language.Syntax.Tree.FunctionDeclarationSyntax.PubKeywordToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken?
Vezel.Celerity.Language.Syntax.Tree.FunctionDeclarationSyntax.ReturnType.get -> Vezel.Celerity.Language.Syntax.Tree.ReturnTypeAnnotationSyntax?
Vezel.Celerity.Language.Syntax.Tree.FunctionDeclarationSyntax.SemicolonToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken?
Vezel.Celerity.Language.Syntax.Tree.FunctionParameterListSyntax
Vezel.Celerity.Language.Syntax.Tree.FunctionParameterListSyntax.CloseParenToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
Vezel.Celerity.Language.Syntax.Tree.FunctionParameterListSyntax.OpenParenToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
Vezel.Celerity.Language.Syntax.Tree.FunctionParameterListSyntax.Parameters.get -> Vezel.Celerity.Language.Syntax.Tree.SeparatedSyntaxItemList<Vezel.Celerity.Language.Syntax.Tree.FunctionParameterSyntax!>
Vezel.Celerity.Language.Syntax.Tree.FunctionParameterListSyntax.Parent.get -> Vezel.Celerity.Language.Syntax.Tree.FunctionDeclarationSyntax!
Vezel.Celerity.Language.Syntax.Tree.FunctionParameterSyntax
Vezel.Celerity.Language.Syntax.Tree.FunctionParameterSyntax.Parent.get -> Vezel.Celerity.Language.Syntax.Tree.FunctionParameterListSyntax!
Vezel.Celerity.Language.Syntax.Tree.FunctionParameterSyntax.Type.get -> Vezel.Celerity.Language.Syntax.Tree.TypeAnnotationSyntax?
Vezel.Celerity.Language.Syntax.Tree.FunctionTypeParameterListSyntax
Vezel.Celerity.Language.Syntax.Tree.FunctionTypeParameterListSyntax.CloseParenToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
Vezel.Celerity.Language.Syntax.Tree.FunctionTypeParameterListSyntax.OpenParenToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
Vezel.Celerity.Language.Syntax.Tree.FunctionTypeParameterListSyntax.Parameters.get -> Vezel.Celerity.Language.Syntax.Tree.SeparatedSyntaxItemList<Vezel.Celerity.Language.Syntax.Tree.FunctionTypeParameterSyntax!>
Vezel.Celerity.Language.Syntax.Tree.FunctionTypeParameterListSyntax.Parent.get -> Vezel.Celerity.Language.Syntax.Tree.FunctionTypeSyntax!
Vezel.Celerity.Language.Syntax.Tree.FunctionTypeParameterSyntax
Vezel.Celerity.Language.Syntax.Tree.FunctionTypeParameterSyntax.Attributes.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxItemList<Vezel.Celerity.Language.Syntax.Tree.AttributeSyntax!>
Vezel.Celerity.Language.Syntax.Tree.FunctionTypeParameterSyntax.Parent.get -> Vezel.Celerity.Language.Syntax.Tree.FunctionTypeParameterListSyntax!
Vezel.Celerity.Language.Syntax.Tree.FunctionTypeParameterSyntax.Type.get -> Vezel.Celerity.Language.Syntax.Tree.TypeSyntax!
Vezel.Celerity.Language.Syntax.Tree.FunctionTypeSignatureSyntax
Vezel.Celerity.Language.Syntax.Tree.FunctionTypeSignatureSyntax.CloseParenToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
Vezel.Celerity.Language.Syntax.Tree.FunctionTypeSignatureSyntax.OpenParenToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
Vezel.Celerity.Language.Syntax.Tree.FunctionTypeSignatureSyntax.ParameterList.get -> Vezel.Celerity.Language.Syntax.Tree.FunctionTypeParameterListSyntax!
Vezel.Celerity.Language.Syntax.Tree.FunctionTypeSignatureSyntax.Parent.get -> Vezel.Celerity.Language.Syntax.Tree.FunctionTypeSyntax!
Vezel.Celerity.Language.Syntax.Tree.FunctionTypeSignatureSyntax.ReturnType.get -> Vezel.Celerity.Language.Syntax.Tree.ReturnTypeAnnotationSyntax!
Vezel.Celerity.Language.Syntax.Tree.FunctionTypeSyntax
Vezel.Celerity.Language.Syntax.Tree.FunctionTypeSyntax.ErrKeywordToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken?
Vezel.Celerity.Language.Syntax.Tree.FunctionTypeSyntax.FnKeywordToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
Vezel.Celerity.Language.Syntax.Tree.FunctionTypeSyntax.Parent.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!
Vezel.Celerity.Language.Syntax.Tree.FunctionTypeSyntax.Signature.get -> Vezel.Celerity.Language.Syntax.Tree.FunctionTypeSignatureSyntax?
Vezel.Celerity.Language.Syntax.Tree.HandleTypeSyntax
Vezel.Celerity.Language.Syntax.Tree.HandleTypeSyntax.HandleKeywordToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
Vezel.Celerity.Language.Syntax.Tree.HandleTypeSyntax.Parent.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!
Vezel.Celerity.Language.Syntax.Tree.IdentifierExpressionSyntax
Vezel.Celerity.Language.Syntax.Tree.IdentifierExpressionSyntax.NameToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
Vezel.Celerity.Language.Syntax.Tree.IdentifierExpressionSyntax.Parent.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!
Vezel.Celerity.Language.Syntax.Tree.IfExpressionSyntax
Vezel.Celerity.Language.Syntax.Tree.IfExpressionSyntax.Body.get -> Vezel.Celerity.Language.Syntax.Tree.BlockExpressionSyntax!
Vezel.Celerity.Language.Syntax.Tree.IfExpressionSyntax.Condition.get -> Vezel.Celerity.Language.Syntax.Tree.ExpressionSyntax!
Vezel.Celerity.Language.Syntax.Tree.IfExpressionSyntax.Else.get -> Vezel.Celerity.Language.Syntax.Tree.ExpressionElseSyntax?
Vezel.Celerity.Language.Syntax.Tree.IfExpressionSyntax.IfKeywordToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
Vezel.Celerity.Language.Syntax.Tree.IfExpressionSyntax.Parent.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!
Vezel.Celerity.Language.Syntax.Tree.IndexArgumentListSyntax
Vezel.Celerity.Language.Syntax.Tree.IndexArgumentListSyntax.Arguments.get -> Vezel.Celerity.Language.Syntax.Tree.SeparatedSyntaxItemList<Vezel.Celerity.Language.Syntax.Tree.ExpressionSyntax!>
Vezel.Celerity.Language.Syntax.Tree.IndexArgumentListSyntax.CloseBracketToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
Vezel.Celerity.Language.Syntax.Tree.IndexArgumentListSyntax.OpenBracketToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
Vezel.Celerity.Language.Syntax.Tree.IndexArgumentListSyntax.Parent.get -> Vezel.Celerity.Language.Syntax.Tree.IndexExpressionSyntax!
Vezel.Celerity.Language.Syntax.Tree.IndexExpressionSyntax
Vezel.Celerity.Language.Syntax.Tree.IndexExpressionSyntax.ArgumentList.get -> Vezel.Celerity.Language.Syntax.Tree.IndexArgumentListSyntax!
Vezel.Celerity.Language.Syntax.Tree.IndexExpressionSyntax.Parent.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!
Vezel.Celerity.Language.Syntax.Tree.IntegerTypeRangeBoundSyntax
Vezel.Celerity.Language.Syntax.Tree.IntegerTypeRangeBoundSyntax.LiteralToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
Vezel.Celerity.Language.Syntax.Tree.IntegerTypeRangeBoundSyntax.MinusToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken?
Vezel.Celerity.Language.Syntax.Tree.IntegerTypeRangeBoundSyntax.Parent.get -> Vezel.Celerity.Language.Syntax.Tree.IntegerTypeRangeSyntax!
Vezel.Celerity.Language.Syntax.Tree.IntegerTypeRangeSyntax
Vezel.Celerity.Language.Syntax.Tree.IntegerTypeRangeSyntax.CloseParenToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
Vezel.Celerity.Language.Syntax.Tree.IntegerTypeRangeSyntax.DotDotToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
Vezel.Celerity.Language.Syntax.Tree.IntegerTypeRangeSyntax.LowerBound.get -> Vezel.Celerity.Language.Syntax.Tree.IntegerTypeRangeBoundSyntax?
Vezel.Celerity.Language.Syntax.Tree.IntegerTypeRangeSyntax.OpenParenToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
Vezel.Celerity.Language.Syntax.Tree.IntegerTypeRangeSyntax.Parent.get -> Vezel.Celerity.Language.Syntax.Tree.IntegerTypeSyntax!
Vezel.Celerity.Language.Syntax.Tree.IntegerTypeRangeSyntax.UpperBound.get -> Vezel.Celerity.Language.Syntax.Tree.IntegerTypeRangeBoundSyntax?
Vezel.Celerity.Language.Syntax.Tree.IntegerTypeSyntax
Vezel.Celerity.Language.Syntax.Tree.IntegerTypeSyntax.IntKeywordToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
Vezel.Celerity.Language.Syntax.Tree.IntegerTypeSyntax.Parent.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!
Vezel.Celerity.Language.Syntax.Tree.IntegerTypeSyntax.Range.get -> Vezel.Celerity.Language.Syntax.Tree.IntegerTypeRangeSyntax?
Vezel.Celerity.Language.Syntax.Tree.InteractiveDocumentSyntax
Vezel.Celerity.Language.Syntax.Tree.InteractiveDocumentSyntax.Submissions.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxItemList<Vezel.Celerity.Language.Syntax.Tree.SubmissionSyntax!>
Vezel.Celerity.Language.Syntax.Tree.LambdaExpressionSyntax
Vezel.Celerity.Language.Syntax.Tree.LambdaExpressionSyntax.ArrowToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
Vezel.Celerity.Language.Syntax.Tree.LambdaExpressionSyntax.Body.get -> Vezel.Celerity.Language.Syntax.Tree.ExpressionSyntax!
Vezel.Celerity.Language.Syntax.Tree.LambdaExpressionSyntax.ErrKeywordToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken?
Vezel.Celerity.Language.Syntax.Tree.LambdaExpressionSyntax.FnKeywordToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
Vezel.Celerity.Language.Syntax.Tree.LambdaExpressionSyntax.ParameterList.get -> Vezel.Celerity.Language.Syntax.Tree.LambdaParameterListSyntax!
Vezel.Celerity.Language.Syntax.Tree.LambdaExpressionSyntax.Parent.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!
Vezel.Celerity.Language.Syntax.Tree.LambdaParameterListSyntax
Vezel.Celerity.Language.Syntax.Tree.LambdaParameterListSyntax.CloseParenToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
Vezel.Celerity.Language.Syntax.Tree.LambdaParameterListSyntax.OpenParenToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
Vezel.Celerity.Language.Syntax.Tree.LambdaParameterListSyntax.Parameters.get -> Vezel.Celerity.Language.Syntax.Tree.SeparatedSyntaxItemList<Vezel.Celerity.Language.Syntax.Tree.LambdaParameterSyntax!>
Vezel.Celerity.Language.Syntax.Tree.LambdaParameterListSyntax.Parent.get -> Vezel.Celerity.Language.Syntax.Tree.LambdaExpressionSyntax!
Vezel.Celerity.Language.Syntax.Tree.LambdaParameterSyntax
Vezel.Celerity.Language.Syntax.Tree.LambdaParameterSyntax.Parent.get -> Vezel.Celerity.Language.Syntax.Tree.LambdaParameterListSyntax!
Vezel.Celerity.Language.Syntax.Tree.LetStatementSyntax
Vezel.Celerity.Language.Syntax.Tree.LetStatementSyntax.EqualsToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
Vezel.Celerity.Language.Syntax.Tree.LetStatementSyntax.Initializer.get -> Vezel.Celerity.Language.Syntax.Tree.ExpressionSyntax!
Vezel.Celerity.Language.Syntax.Tree.LetStatementSyntax.LetKeywordToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
Vezel.Celerity.Language.Syntax.Tree.LetStatementSyntax.Parent.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!
Vezel.Celerity.Language.Syntax.Tree.LetStatementSyntax.Pattern.get -> Vezel.Celerity.Language.Syntax.Tree.PatternSyntax!
Vezel.Celerity.Language.Syntax.Tree.LiteralExpressionSyntax
Vezel.Celerity.Language.Syntax.Tree.LiteralExpressionSyntax.LiteralToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
Vezel.Celerity.Language.Syntax.Tree.LiteralExpressionSyntax.Parent.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!
Vezel.Celerity.Language.Syntax.Tree.LiteralPatternSyntax
Vezel.Celerity.Language.Syntax.Tree.LiteralPatternSyntax.LiteralToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
Vezel.Celerity.Language.Syntax.Tree.LiteralPatternSyntax.MinusToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken?
Vezel.Celerity.Language.Syntax.Tree.LiteralPatternSyntax.Parent.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!
Vezel.Celerity.Language.Syntax.Tree.LiteralTypeSyntax
Vezel.Celerity.Language.Syntax.Tree.LiteralTypeSyntax.LiteralToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
Vezel.Celerity.Language.Syntax.Tree.LiteralTypeSyntax.MinusToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken?
Vezel.Celerity.Language.Syntax.Tree.LiteralTypeSyntax.Parent.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!
Vezel.Celerity.Language.Syntax.Tree.LogicalExpressionSyntax
Vezel.Celerity.Language.Syntax.Tree.LogicalExpressionSyntax.LeftOperand.get -> Vezel.Celerity.Language.Syntax.Tree.ExpressionSyntax!
Vezel.Celerity.Language.Syntax.Tree.LogicalExpressionSyntax.OperatorToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
Vezel.Celerity.Language.Syntax.Tree.LogicalExpressionSyntax.Parent.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!
Vezel.Celerity.Language.Syntax.Tree.LogicalExpressionSyntax.RightOperand.get -> Vezel.Celerity.Language.Syntax.Tree.ExpressionSyntax!
Vezel.Celerity.Language.Syntax.Tree.LoopBranchExpressionSyntax
Vezel.Celerity.Language.Syntax.Tree.LoopBranchExpressionSyntax.Parent.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!
Vezel.Celerity.Language.Syntax.Tree.LoopExpressionSyntax
Vezel.Celerity.Language.Syntax.Tree.LoopExpressionSyntax.Parent.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!
Vezel.Celerity.Language.Syntax.Tree.MapExpressionPairSyntax
Vezel.Celerity.Language.Syntax.Tree.MapExpressionPairSyntax.ColonToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
Vezel.Celerity.Language.Syntax.Tree.MapExpressionPairSyntax.Key.get -> Vezel.Celerity.Language.Syntax.Tree.ExpressionSyntax!
Vezel.Celerity.Language.Syntax.Tree.MapExpressionPairSyntax.Parent.get -> Vezel.Celerity.Language.Syntax.Tree.MapExpressionSyntax!
Vezel.Celerity.Language.Syntax.Tree.MapExpressionPairSyntax.Value.get -> Vezel.Celerity.Language.Syntax.Tree.ExpressionSyntax!
Vezel.Celerity.Language.Syntax.Tree.MapExpressionSyntax
Vezel.Celerity.Language.Syntax.Tree.MapExpressionSyntax.CloseBracketToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
Vezel.Celerity.Language.Syntax.Tree.MapExpressionSyntax.HashToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
Vezel.Celerity.Language.Syntax.Tree.MapExpressionSyntax.MutKeywordToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken?
Vezel.Celerity.Language.Syntax.Tree.MapExpressionSyntax.OpenBracketToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
Vezel.Celerity.Language.Syntax.Tree.MapExpressionSyntax.Pairs.get -> Vezel.Celerity.Language.Syntax.Tree.SeparatedSyntaxItemList<Vezel.Celerity.Language.Syntax.Tree.MapExpressionPairSyntax!>
Vezel.Celerity.Language.Syntax.Tree.MapExpressionSyntax.Parent.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!
Vezel.Celerity.Language.Syntax.Tree.MapPatternPairSyntax
Vezel.Celerity.Language.Syntax.Tree.MapPatternPairSyntax.ColonToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
Vezel.Celerity.Language.Syntax.Tree.MapPatternPairSyntax.Key.get -> Vezel.Celerity.Language.Syntax.Tree.ExpressionSyntax!
Vezel.Celerity.Language.Syntax.Tree.MapPatternPairSyntax.Parent.get -> Vezel.Celerity.Language.Syntax.Tree.MapPatternSyntax!
Vezel.Celerity.Language.Syntax.Tree.MapPatternPairSyntax.Value.get -> Vezel.Celerity.Language.Syntax.Tree.PatternSyntax!
Vezel.Celerity.Language.Syntax.Tree.MapPatternSyntax
Vezel.Celerity.Language.Syntax.Tree.MapPatternSyntax.CloseBracketToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
Vezel.Celerity.Language.Syntax.Tree.MapPatternSyntax.HashToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
Vezel.Celerity.Language.Syntax.Tree.MapPatternSyntax.OpenBracketToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
Vezel.Celerity.Language.Syntax.Tree.MapPatternSyntax.Pairs.get -> Vezel.Celerity.Language.Syntax.Tree.SeparatedSyntaxItemList<Vezel.Celerity.Language.Syntax.Tree.MapPatternPairSyntax!>
Vezel.Celerity.Language.Syntax.Tree.MapPatternSyntax.Parent.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!
Vezel.Celerity.Language.Syntax.Tree.MapTypeSyntax
Vezel.Celerity.Language.Syntax.Tree.MapTypeSyntax.CloseBracketToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
Vezel.Celerity.Language.Syntax.Tree.MapTypeSyntax.ColonToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
Vezel.Celerity.Language.Syntax.Tree.MapTypeSyntax.HashToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
Vezel.Celerity.Language.Syntax.Tree.MapTypeSyntax.Key.get -> Vezel.Celerity.Language.Syntax.Tree.TypeSyntax!
Vezel.Celerity.Language.Syntax.Tree.MapTypeSyntax.MutKeywordToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken?
Vezel.Celerity.Language.Syntax.Tree.MapTypeSyntax.OpenBracketToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
Vezel.Celerity.Language.Syntax.Tree.MapTypeSyntax.Parent.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!
Vezel.Celerity.Language.Syntax.Tree.MapTypeSyntax.Value.get -> Vezel.Celerity.Language.Syntax.Tree.TypeSyntax!
Vezel.Celerity.Language.Syntax.Tree.MatchExpressionSyntax
Vezel.Celerity.Language.Syntax.Tree.MatchExpressionSyntax.Arms.get -> Vezel.Celerity.Language.Syntax.Tree.SeparatedSyntaxItemList<Vezel.Celerity.Language.Syntax.Tree.ExpressionPatternArmSyntax!>
Vezel.Celerity.Language.Syntax.Tree.MatchExpressionSyntax.CloseBraceToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
Vezel.Celerity.Language.Syntax.Tree.MatchExpressionSyntax.MatchKeywordToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
Vezel.Celerity.Language.Syntax.Tree.MatchExpressionSyntax.OpenBraceToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
Vezel.Celerity.Language.Syntax.Tree.MatchExpressionSyntax.Operand.get -> Vezel.Celerity.Language.Syntax.Tree.ExpressionSyntax!
Vezel.Celerity.Language.Syntax.Tree.MatchExpressionSyntax.Parent.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!
Vezel.Celerity.Language.Syntax.Tree.MetaExpressionSyntax
Vezel.Celerity.Language.Syntax.Tree.MetaExpressionSyntax.MetaKeywordToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
Vezel.Celerity.Language.Syntax.Tree.MetaExpressionSyntax.Operand.get -> Vezel.Celerity.Language.Syntax.Tree.ExpressionSyntax!
Vezel.Celerity.Language.Syntax.Tree.MetaExpressionSyntax.Parent.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!
Vezel.Celerity.Language.Syntax.Tree.ModuleDocumentSyntax
Vezel.Celerity.Language.Syntax.Tree.ModuleDocumentSyntax.Attributes.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxItemList<Vezel.Celerity.Language.Syntax.Tree.AttributeSyntax!>
Vezel.Celerity.Language.Syntax.Tree.ModuleDocumentSyntax.CloseBraceToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
Vezel.Celerity.Language.Syntax.Tree.ModuleDocumentSyntax.Declarations.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxItemList<Vezel.Celerity.Language.Syntax.Tree.DeclarationSyntax!>
Vezel.Celerity.Language.Syntax.Tree.ModuleDocumentSyntax.ModKeywordToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
Vezel.Celerity.Language.Syntax.Tree.ModuleDocumentSyntax.OpenBraceToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
Vezel.Celerity.Language.Syntax.Tree.ModuleExpressionSyntax
Vezel.Celerity.Language.Syntax.Tree.ModuleExpressionSyntax.Parent.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!
Vezel.Celerity.Language.Syntax.Tree.ModuleExpressionSyntax.Path.get -> Vezel.Celerity.Language.Syntax.Tree.ModulePathSyntax!
Vezel.Celerity.Language.Syntax.Tree.ModulePathSyntax
Vezel.Celerity.Language.Syntax.Tree.ModulePathSyntax.ComponentTokens.get -> Vezel.Celerity.Language.Syntax.Tree.SeparatedSyntaxItemList<Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!>
Vezel.Celerity.Language.Syntax.Tree.ModulePathSyntax.Parent.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!
Vezel.Celerity.Language.Syntax.Tree.ModulePatternSyntax
Vezel.Celerity.Language.Syntax.Tree.ModulePatternSyntax.ModKeywordToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
Vezel.Celerity.Language.Syntax.Tree.ModulePatternSyntax.Parent.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!
Vezel.Celerity.Language.Syntax.Tree.ModulePatternSyntax.Path.get -> Vezel.Celerity.Language.Syntax.Tree.ModulePathSyntax?
Vezel.Celerity.Language.Syntax.Tree.ModuleTypeSyntax
Vezel.Celerity.Language.Syntax.Tree.ModuleTypeSyntax.ModKeywordToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
Vezel.Celerity.Language.Syntax.Tree.ModuleTypeSyntax.Parent.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!
Vezel.Celerity.Language.Syntax.Tree.MultiplicativeExpressionSyntax
Vezel.Celerity.Language.Syntax.Tree.MultiplicativeExpressionSyntax.LeftOperand.get -> Vezel.Celerity.Language.Syntax.Tree.ExpressionSyntax!
Vezel.Celerity.Language.Syntax.Tree.MultiplicativeExpressionSyntax.OperatorToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
Vezel.Celerity.Language.Syntax.Tree.MultiplicativeExpressionSyntax.Parent.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!
Vezel.Celerity.Language.Syntax.Tree.MultiplicativeExpressionSyntax.RightOperand.get -> Vezel.Celerity.Language.Syntax.Tree.ExpressionSyntax!
Vezel.Celerity.Language.Syntax.Tree.NextExpressionSyntax
Vezel.Celerity.Language.Syntax.Tree.NextExpressionSyntax.NextKeywordToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
Vezel.Celerity.Language.Syntax.Tree.NextExpressionSyntax.Parent.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!
Vezel.Celerity.Language.Syntax.Tree.NominalTypeArgumentListSyntax
Vezel.Celerity.Language.Syntax.Tree.NominalTypeArgumentListSyntax.Arguments.get -> Vezel.Celerity.Language.Syntax.Tree.SeparatedSyntaxItemList<Vezel.Celerity.Language.Syntax.Tree.TypeSyntax!>
Vezel.Celerity.Language.Syntax.Tree.NominalTypeArgumentListSyntax.CloseParenToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
Vezel.Celerity.Language.Syntax.Tree.NominalTypeArgumentListSyntax.OpenParenToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
Vezel.Celerity.Language.Syntax.Tree.NominalTypeArgumentListSyntax.Parent.get -> Vezel.Celerity.Language.Syntax.Tree.NominalTypeSyntax!
Vezel.Celerity.Language.Syntax.Tree.NominalTypePathSyntax
Vezel.Celerity.Language.Syntax.Tree.NominalTypePathSyntax.DotToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
Vezel.Celerity.Language.Syntax.Tree.NominalTypePathSyntax.Parent.get -> Vezel.Celerity.Language.Syntax.Tree.NominalTypeSyntax!
Vezel.Celerity.Language.Syntax.Tree.NominalTypePathSyntax.Path.get -> Vezel.Celerity.Language.Syntax.Tree.ModulePathSyntax!
Vezel.Celerity.Language.Syntax.Tree.NominalTypeSyntax
Vezel.Celerity.Language.Syntax.Tree.NominalTypeSyntax.ArgumentList.get -> Vezel.Celerity.Language.Syntax.Tree.NominalTypeArgumentListSyntax?
Vezel.Celerity.Language.Syntax.Tree.NominalTypeSyntax.NameToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
Vezel.Celerity.Language.Syntax.Tree.NominalTypeSyntax.Parent.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!
Vezel.Celerity.Language.Syntax.Tree.NominalTypeSyntax.Path.get -> Vezel.Celerity.Language.Syntax.Tree.NominalTypePathSyntax?
Vezel.Celerity.Language.Syntax.Tree.NoneReturnTypeSyntax
Vezel.Celerity.Language.Syntax.Tree.NoneReturnTypeSyntax.NoneKeywordToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
Vezel.Celerity.Language.Syntax.Tree.NoneReturnTypeSyntax.Parent.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!
Vezel.Celerity.Language.Syntax.Tree.OperatorExpressionSyntax
Vezel.Celerity.Language.Syntax.Tree.OperatorExpressionSyntax.Parent.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!
Vezel.Celerity.Language.Syntax.Tree.ParenthesizedExpressionSyntax
Vezel.Celerity.Language.Syntax.Tree.ParenthesizedExpressionSyntax.CloseParenToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
Vezel.Celerity.Language.Syntax.Tree.ParenthesizedExpressionSyntax.Expression.get -> Vezel.Celerity.Language.Syntax.Tree.ExpressionSyntax!
Vezel.Celerity.Language.Syntax.Tree.ParenthesizedExpressionSyntax.OpenParenToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
Vezel.Celerity.Language.Syntax.Tree.ParenthesizedExpressionSyntax.Parent.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!
Vezel.Celerity.Language.Syntax.Tree.PatternAliasSyntax
Vezel.Celerity.Language.Syntax.Tree.PatternAliasSyntax.AsKeywordToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
Vezel.Celerity.Language.Syntax.Tree.PatternAliasSyntax.Binding.get -> Vezel.Celerity.Language.Syntax.Tree.VariableBindingSyntax!
Vezel.Celerity.Language.Syntax.Tree.PatternAliasSyntax.Parent.get -> Vezel.Celerity.Language.Syntax.Tree.PatternSyntax!
Vezel.Celerity.Language.Syntax.Tree.PatternSyntax
Vezel.Celerity.Language.Syntax.Tree.PatternSyntax.Parent.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!
Vezel.Celerity.Language.Syntax.Tree.PostfixExpressionSyntax
Vezel.Celerity.Language.Syntax.Tree.PostfixExpressionSyntax.Parent.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!
Vezel.Celerity.Language.Syntax.Tree.RaiseExpressionSyntax
Vezel.Celerity.Language.Syntax.Tree.RaiseExpressionSyntax.Operand.get -> Vezel.Celerity.Language.Syntax.Tree.ExpressionSyntax!
Vezel.Celerity.Language.Syntax.Tree.RaiseExpressionSyntax.Parent.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!
Vezel.Celerity.Language.Syntax.Tree.RaiseExpressionSyntax.RaiseKeywordToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
Vezel.Celerity.Language.Syntax.Tree.RealTypeSyntax
Vezel.Celerity.Language.Syntax.Tree.RealTypeSyntax.Parent.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!
Vezel.Celerity.Language.Syntax.Tree.RealTypeSyntax.RealKeywordToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
Vezel.Celerity.Language.Syntax.Tree.ReceiveExpressionArmSyntax
Vezel.Celerity.Language.Syntax.Tree.ReceiveExpressionArmSyntax.Guard.get -> Vezel.Celerity.Language.Syntax.Tree.ExpressionArmGuardSyntax?
Vezel.Celerity.Language.Syntax.Tree.ReceiveExpressionArmSyntax.NameToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
Vezel.Celerity.Language.Syntax.Tree.ReceiveExpressionArmSyntax.ParameterList.get -> Vezel.Celerity.Language.Syntax.Tree.ReceiveParameterListSyntax!
Vezel.Celerity.Language.Syntax.Tree.ReceiveExpressionArmSyntax.Parent.get -> Vezel.Celerity.Language.Syntax.Tree.ReceiveExpressionSyntax!
Vezel.Celerity.Language.Syntax.Tree.ReceiveExpressionSyntax
Vezel.Celerity.Language.Syntax.Tree.ReceiveExpressionSyntax.Arms.get -> Vezel.Celerity.Language.Syntax.Tree.SeparatedSyntaxItemList<Vezel.Celerity.Language.Syntax.Tree.ReceiveExpressionArmSyntax!>
Vezel.Celerity.Language.Syntax.Tree.ReceiveExpressionSyntax.CloseBraceToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
Vezel.Celerity.Language.Syntax.Tree.ReceiveExpressionSyntax.Else.get -> Vezel.Celerity.Language.Syntax.Tree.ExpressionElseSyntax?
Vezel.Celerity.Language.Syntax.Tree.ReceiveExpressionSyntax.OpenBraceToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
Vezel.Celerity.Language.Syntax.Tree.ReceiveExpressionSyntax.Parent.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!
Vezel.Celerity.Language.Syntax.Tree.ReceiveExpressionSyntax.RecvKeywordToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
Vezel.Celerity.Language.Syntax.Tree.ReceiveParameterListSyntax
Vezel.Celerity.Language.Syntax.Tree.ReceiveParameterListSyntax.CloseParenToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
Vezel.Celerity.Language.Syntax.Tree.ReceiveParameterListSyntax.OpenParenToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
Vezel.Celerity.Language.Syntax.Tree.ReceiveParameterListSyntax.Parameters.get -> Vezel.Celerity.Language.Syntax.Tree.SeparatedSyntaxItemList<Vezel.Celerity.Language.Syntax.Tree.ReceiveParameterSyntax!>
Vezel.Celerity.Language.Syntax.Tree.ReceiveParameterListSyntax.Parent.get -> Vezel.Celerity.Language.Syntax.Tree.ReceiveExpressionArmSyntax!
Vezel.Celerity.Language.Syntax.Tree.ReceiveParameterSyntax
Vezel.Celerity.Language.Syntax.Tree.ReceiveParameterSyntax.Parent.get -> Vezel.Celerity.Language.Syntax.Tree.ReceiveParameterListSyntax!
Vezel.Celerity.Language.Syntax.Tree.ReceiveParameterSyntax.Pattern.get -> Vezel.Celerity.Language.Syntax.Tree.PatternSyntax!
Vezel.Celerity.Language.Syntax.Tree.RecordExpressionMetaSyntax
Vezel.Celerity.Language.Syntax.Tree.RecordExpressionMetaSyntax.MetaKeywordToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
Vezel.Celerity.Language.Syntax.Tree.RecordExpressionMetaSyntax.Operand.get -> Vezel.Celerity.Language.Syntax.Tree.ExpressionSyntax!
Vezel.Celerity.Language.Syntax.Tree.RecordExpressionMetaSyntax.Parent.get -> Vezel.Celerity.Language.Syntax.Tree.RecordExpressionSyntax!
Vezel.Celerity.Language.Syntax.Tree.RecordExpressionSyntax
Vezel.Celerity.Language.Syntax.Tree.RecordExpressionSyntax.Meta.get -> Vezel.Celerity.Language.Syntax.Tree.RecordExpressionMetaSyntax?
Vezel.Celerity.Language.Syntax.Tree.RecordExpressionSyntax.Parent.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!
Vezel.Celerity.Language.Syntax.Tree.RecordExpressionSyntax.RecKeywordToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
Vezel.Celerity.Language.Syntax.Tree.RecordPatternSyntax
Vezel.Celerity.Language.Syntax.Tree.RecordPatternSyntax.Parent.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!
Vezel.Celerity.Language.Syntax.Tree.RecordPatternSyntax.RecKeywordToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
Vezel.Celerity.Language.Syntax.Tree.RecordTypeMetaSyntax
Vezel.Celerity.Language.Syntax.Tree.RecordTypeMetaSyntax.MetaKeywordToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
Vezel.Celerity.Language.Syntax.Tree.RecordTypeMetaSyntax.Parent.get -> Vezel.Celerity.Language.Syntax.Tree.RecordTypeSyntax!
Vezel.Celerity.Language.Syntax.Tree.RecordTypeMetaSyntax.Type.get -> Vezel.Celerity.Language.Syntax.Tree.TypeSyntax!
Vezel.Celerity.Language.Syntax.Tree.RecordTypeSyntax
Vezel.Celerity.Language.Syntax.Tree.RecordTypeSyntax.Meta.get -> Vezel.Celerity.Language.Syntax.Tree.RecordTypeMetaSyntax?
Vezel.Celerity.Language.Syntax.Tree.RecordTypeSyntax.Parent.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!
Vezel.Celerity.Language.Syntax.Tree.RecordTypeSyntax.RecKeywordToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
Vezel.Celerity.Language.Syntax.Tree.ReferenceTypeSyntax
Vezel.Celerity.Language.Syntax.Tree.ReferenceTypeSyntax.Parent.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!
Vezel.Celerity.Language.Syntax.Tree.ReferenceTypeSyntax.RefKeywordToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
Vezel.Celerity.Language.Syntax.Tree.RegularReturnTypeSyntax
Vezel.Celerity.Language.Syntax.Tree.RegularReturnTypeSyntax.Parent.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!
Vezel.Celerity.Language.Syntax.Tree.RegularReturnTypeSyntax.Type.get -> Vezel.Celerity.Language.Syntax.Tree.TypeSyntax!
Vezel.Celerity.Language.Syntax.Tree.RelationalExpressionSyntax
Vezel.Celerity.Language.Syntax.Tree.RelationalExpressionSyntax.LeftOperand.get -> Vezel.Celerity.Language.Syntax.Tree.ExpressionSyntax!
Vezel.Celerity.Language.Syntax.Tree.RelationalExpressionSyntax.OperatorToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
Vezel.Celerity.Language.Syntax.Tree.RelationalExpressionSyntax.Parent.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!
Vezel.Celerity.Language.Syntax.Tree.RelationalExpressionSyntax.RightOperand.get -> Vezel.Celerity.Language.Syntax.Tree.ExpressionSyntax!
Vezel.Celerity.Language.Syntax.Tree.ReturnExpressionSyntax
Vezel.Celerity.Language.Syntax.Tree.ReturnExpressionSyntax.Operand.get -> Vezel.Celerity.Language.Syntax.Tree.ExpressionSyntax!
Vezel.Celerity.Language.Syntax.Tree.ReturnExpressionSyntax.Parent.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!
Vezel.Celerity.Language.Syntax.Tree.ReturnExpressionSyntax.RetKeywordToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
Vezel.Celerity.Language.Syntax.Tree.ReturnExpressionSyntax.TailKeywordToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken?
Vezel.Celerity.Language.Syntax.Tree.ReturnTypeAnnotationRaiseSyntax
Vezel.Celerity.Language.Syntax.Tree.ReturnTypeAnnotationRaiseSyntax.Parent.get -> Vezel.Celerity.Language.Syntax.Tree.ReturnTypeAnnotationSyntax!
Vezel.Celerity.Language.Syntax.Tree.ReturnTypeAnnotationRaiseSyntax.RaiseKeywordToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
Vezel.Celerity.Language.Syntax.Tree.ReturnTypeAnnotationRaiseSyntax.Type.get -> Vezel.Celerity.Language.Syntax.Tree.TypeSyntax!
Vezel.Celerity.Language.Syntax.Tree.ReturnTypeAnnotationSyntax
Vezel.Celerity.Language.Syntax.Tree.ReturnTypeAnnotationSyntax.ArrowToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
Vezel.Celerity.Language.Syntax.Tree.ReturnTypeAnnotationSyntax.Parent.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!
Vezel.Celerity.Language.Syntax.Tree.ReturnTypeAnnotationSyntax.Raise.get -> Vezel.Celerity.Language.Syntax.Tree.ReturnTypeAnnotationRaiseSyntax?
Vezel.Celerity.Language.Syntax.Tree.ReturnTypeAnnotationSyntax.Type.get -> Vezel.Celerity.Language.Syntax.Tree.ReturnTypeSyntax!
Vezel.Celerity.Language.Syntax.Tree.ReturnTypeSyntax
Vezel.Celerity.Language.Syntax.Tree.ReturnTypeSyntax.Parent.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!
Vezel.Celerity.Language.Syntax.Tree.SendArgumentListSyntax
Vezel.Celerity.Language.Syntax.Tree.SendArgumentListSyntax.Arguments.get -> Vezel.Celerity.Language.Syntax.Tree.SeparatedSyntaxItemList<Vezel.Celerity.Language.Syntax.Tree.ExpressionSyntax!>
Vezel.Celerity.Language.Syntax.Tree.SendArgumentListSyntax.CloseParenToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
Vezel.Celerity.Language.Syntax.Tree.SendArgumentListSyntax.OpenParenToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
Vezel.Celerity.Language.Syntax.Tree.SendArgumentListSyntax.Parent.get -> Vezel.Celerity.Language.Syntax.Tree.SendExpressionSyntax!
Vezel.Celerity.Language.Syntax.Tree.SendExpressionSyntax
Vezel.Celerity.Language.Syntax.Tree.SendExpressionSyntax.ArgumentList.get -> Vezel.Celerity.Language.Syntax.Tree.SendArgumentListSyntax!
Vezel.Celerity.Language.Syntax.Tree.SendExpressionSyntax.ArrowToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
Vezel.Celerity.Language.Syntax.Tree.SendExpressionSyntax.NameToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
Vezel.Celerity.Language.Syntax.Tree.SendExpressionSyntax.Parent.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!
Vezel.Celerity.Language.Syntax.Tree.SeparatedSyntaxItemList<T>
Vezel.Celerity.Language.Syntax.Tree.SeparatedSyntaxItemList<T>.Count.get -> int
Vezel.Celerity.Language.Syntax.Tree.SeparatedSyntaxItemList<T>.Elements.get -> System.Collections.Immutable.ImmutableArray<T!>
Vezel.Celerity.Language.Syntax.Tree.SeparatedSyntaxItemList<T>.Enumerator
Vezel.Celerity.Language.Syntax.Tree.SeparatedSyntaxItemList<T>.Enumerator.Current.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxItem!
Vezel.Celerity.Language.Syntax.Tree.SeparatedSyntaxItemList<T>.Enumerator.Enumerator() -> void
Vezel.Celerity.Language.Syntax.Tree.SeparatedSyntaxItemList<T>.Enumerator.MoveNext() -> bool
Vezel.Celerity.Language.Syntax.Tree.SeparatedSyntaxItemList<T>.FullSpan.get -> Vezel.Celerity.Language.Text.SourceTextSpan
Vezel.Celerity.Language.Syntax.Tree.SeparatedSyntaxItemList<T>.GetFullLocation() -> Vezel.Celerity.Language.Text.SourceTextLocation!
Vezel.Celerity.Language.Syntax.Tree.SeparatedSyntaxItemList<T>.GetFullText() -> Vezel.Celerity.Language.Text.SourceText!
Vezel.Celerity.Language.Syntax.Tree.SeparatedSyntaxItemList<T>.GetLocation() -> Vezel.Celerity.Language.Text.SourceTextLocation!
Vezel.Celerity.Language.Syntax.Tree.SeparatedSyntaxItemList<T>.GetText() -> Vezel.Celerity.Language.Text.SourceText!
Vezel.Celerity.Language.Syntax.Tree.SeparatedSyntaxItemList<T>.IsDefault.get -> bool
Vezel.Celerity.Language.Syntax.Tree.SeparatedSyntaxItemList<T>.IsDefaultOrEmpty.get -> bool
Vezel.Celerity.Language.Syntax.Tree.SeparatedSyntaxItemList<T>.IsEmpty.get -> bool
Vezel.Celerity.Language.Syntax.Tree.SeparatedSyntaxItemList<T>.Parent.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxItem!
Vezel.Celerity.Language.Syntax.Tree.SeparatedSyntaxItemList<T>.SeparatedSyntaxItemList() -> void
Vezel.Celerity.Language.Syntax.Tree.SeparatedSyntaxItemList<T>.Separators.get -> System.Collections.Immutable.ImmutableArray<Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!>
Vezel.Celerity.Language.Syntax.Tree.SeparatedSyntaxItemList<T>.Span.get -> Vezel.Celerity.Language.Text.SourceTextSpan
Vezel.Celerity.Language.Syntax.Tree.SeparatedSyntaxItemList<T>.this[int index].get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxItem!
Vezel.Celerity.Language.Syntax.Tree.SeparatedSyntaxItemList<T>.ToFullString() -> string!
Vezel.Celerity.Language.Syntax.Tree.SeparatedSyntaxItemList<T>.Tree.get -> Vezel.Celerity.Language.Syntax.SyntaxTree!
Vezel.Celerity.Language.Syntax.Tree.SetExpressionSyntax
Vezel.Celerity.Language.Syntax.Tree.SetExpressionSyntax.CloseBraceToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
Vezel.Celerity.Language.Syntax.Tree.SetExpressionSyntax.Elements.get -> Vezel.Celerity.Language.Syntax.Tree.SeparatedSyntaxItemList<Vezel.Celerity.Language.Syntax.Tree.ExpressionSyntax!>
Vezel.Celerity.Language.Syntax.Tree.SetExpressionSyntax.HashToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
Vezel.Celerity.Language.Syntax.Tree.SetExpressionSyntax.MutKeywordToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken?
Vezel.Celerity.Language.Syntax.Tree.SetExpressionSyntax.OpenBraceToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
Vezel.Celerity.Language.Syntax.Tree.SetExpressionSyntax.Parent.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!
Vezel.Celerity.Language.Syntax.Tree.SetPatternSyntax
Vezel.Celerity.Language.Syntax.Tree.SetPatternSyntax.CloseBraceToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
Vezel.Celerity.Language.Syntax.Tree.SetPatternSyntax.Elements.get -> Vezel.Celerity.Language.Syntax.Tree.SeparatedSyntaxItemList<Vezel.Celerity.Language.Syntax.Tree.ExpressionSyntax!>
Vezel.Celerity.Language.Syntax.Tree.SetPatternSyntax.HashToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
Vezel.Celerity.Language.Syntax.Tree.SetPatternSyntax.OpenBraceToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
Vezel.Celerity.Language.Syntax.Tree.SetPatternSyntax.Parent.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!
Vezel.Celerity.Language.Syntax.Tree.SetTypeSyntax
Vezel.Celerity.Language.Syntax.Tree.SetTypeSyntax.CloseBraceToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
Vezel.Celerity.Language.Syntax.Tree.SetTypeSyntax.Element.get -> Vezel.Celerity.Language.Syntax.Tree.TypeSyntax!
Vezel.Celerity.Language.Syntax.Tree.SetTypeSyntax.HashToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
Vezel.Celerity.Language.Syntax.Tree.SetTypeSyntax.MutKeywordToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken?
Vezel.Celerity.Language.Syntax.Tree.SetTypeSyntax.OpenBraceToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
Vezel.Celerity.Language.Syntax.Tree.SetTypeSyntax.Parent.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!
Vezel.Celerity.Language.Syntax.Tree.ShiftExpressionSyntax
Vezel.Celerity.Language.Syntax.Tree.ShiftExpressionSyntax.LeftOperand.get -> Vezel.Celerity.Language.Syntax.Tree.ExpressionSyntax!
Vezel.Celerity.Language.Syntax.Tree.ShiftExpressionSyntax.OperatorToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
Vezel.Celerity.Language.Syntax.Tree.ShiftExpressionSyntax.Parent.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!
Vezel.Celerity.Language.Syntax.Tree.ShiftExpressionSyntax.RightOperand.get -> Vezel.Celerity.Language.Syntax.Tree.ExpressionSyntax!
Vezel.Celerity.Language.Syntax.Tree.StatementSubmissionSyntax
Vezel.Celerity.Language.Syntax.Tree.StatementSubmissionSyntax.Parent.get -> Vezel.Celerity.Language.Syntax.Tree.InteractiveDocumentSyntax!
Vezel.Celerity.Language.Syntax.Tree.StatementSubmissionSyntax.Statement.get -> Vezel.Celerity.Language.Syntax.Tree.StatementSyntax!
Vezel.Celerity.Language.Syntax.Tree.StatementSyntax
Vezel.Celerity.Language.Syntax.Tree.StatementSyntax.Parent.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!
Vezel.Celerity.Language.Syntax.Tree.StringPatternSyntax
Vezel.Celerity.Language.Syntax.Tree.StringPatternSyntax.LeftDotDotToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken?
Vezel.Celerity.Language.Syntax.Tree.StringPatternSyntax.LeftLiteralToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken?
Vezel.Celerity.Language.Syntax.Tree.StringPatternSyntax.MiddleBinding.get -> Vezel.Celerity.Language.Syntax.Tree.BindingSyntax?
Vezel.Celerity.Language.Syntax.Tree.StringPatternSyntax.Parent.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!
Vezel.Celerity.Language.Syntax.Tree.StringPatternSyntax.RightDotDotToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken?
Vezel.Celerity.Language.Syntax.Tree.StringPatternSyntax.RightLiteralToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken?
Vezel.Celerity.Language.Syntax.Tree.StringTypeSyntax
Vezel.Celerity.Language.Syntax.Tree.StringTypeSyntax.Parent.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!
Vezel.Celerity.Language.Syntax.Tree.StringTypeSyntax.StrKeywordToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
Vezel.Celerity.Language.Syntax.Tree.SubmissionSyntax
Vezel.Celerity.Language.Syntax.Tree.SubmissionSyntax.Parent.get -> Vezel.Celerity.Language.Syntax.Tree.InteractiveDocumentSyntax!
Vezel.Celerity.Language.Syntax.Tree.SyntaxItem
Vezel.Celerity.Language.Syntax.Tree.SyntaxItem.Ancestors() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxItem!>!
Vezel.Celerity.Language.Syntax.Tree.SyntaxItem.AncestorsAndSelf() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxItem!>!
Vezel.Celerity.Language.Syntax.Tree.SyntaxItem.ChildrenAndSelf() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxItem!>!
Vezel.Celerity.Language.Syntax.Tree.SyntaxItem.DescendantsAndSelf() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxItem!>!
Vezel.Celerity.Language.Syntax.Tree.SyntaxItem.GetFullLocation() -> Vezel.Celerity.Language.Text.SourceTextLocation!
Vezel.Celerity.Language.Syntax.Tree.SyntaxItem.GetFullText() -> Vezel.Celerity.Language.Text.SourceText!
Vezel.Celerity.Language.Syntax.Tree.SyntaxItem.GetLocation() -> Vezel.Celerity.Language.Text.SourceTextLocation!
Vezel.Celerity.Language.Syntax.Tree.SyntaxItem.GetText() -> Vezel.Celerity.Language.Text.SourceText!
Vezel.Celerity.Language.Syntax.Tree.SyntaxItem.Parent.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxItem?
Vezel.Celerity.Language.Syntax.Tree.SyntaxItem.Siblings() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxItem!>!
Vezel.Celerity.Language.Syntax.Tree.SyntaxItem.SiblingsAndSelf() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxItem!>!
Vezel.Celerity.Language.Syntax.Tree.SyntaxItem.Tree.get -> Vezel.Celerity.Language.Syntax.SyntaxTree!
Vezel.Celerity.Language.Syntax.Tree.SyntaxItemList<T>
Vezel.Celerity.Language.Syntax.Tree.SyntaxItemList<T>.Count.get -> int
Vezel.Celerity.Language.Syntax.Tree.SyntaxItemList<T>.Enumerator
Vezel.Celerity.Language.Syntax.Tree.SyntaxItemList<T>.Enumerator.Current.get -> T!
Vezel.Celerity.Language.Syntax.Tree.SyntaxItemList<T>.Enumerator.Enumerator() -> void
Vezel.Celerity.Language.Syntax.Tree.SyntaxItemList<T>.Enumerator.MoveNext() -> bool
Vezel.Celerity.Language.Syntax.Tree.SyntaxItemList<T>.FullSpan.get -> Vezel.Celerity.Language.Text.SourceTextSpan
Vezel.Celerity.Language.Syntax.Tree.SyntaxItemList<T>.GetFullLocation() -> Vezel.Celerity.Language.Text.SourceTextLocation!
Vezel.Celerity.Language.Syntax.Tree.SyntaxItemList<T>.GetFullText() -> Vezel.Celerity.Language.Text.SourceText!
Vezel.Celerity.Language.Syntax.Tree.SyntaxItemList<T>.GetLocation() -> Vezel.Celerity.Language.Text.SourceTextLocation!
Vezel.Celerity.Language.Syntax.Tree.SyntaxItemList<T>.GetText() -> Vezel.Celerity.Language.Text.SourceText!
Vezel.Celerity.Language.Syntax.Tree.SyntaxItemList<T>.IsDefault.get -> bool
Vezel.Celerity.Language.Syntax.Tree.SyntaxItemList<T>.IsDefaultOrEmpty.get -> bool
Vezel.Celerity.Language.Syntax.Tree.SyntaxItemList<T>.IsEmpty.get -> bool
Vezel.Celerity.Language.Syntax.Tree.SyntaxItemList<T>.Parent.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxItem!
Vezel.Celerity.Language.Syntax.Tree.SyntaxItemList<T>.Span.get -> Vezel.Celerity.Language.Text.SourceTextSpan
Vezel.Celerity.Language.Syntax.Tree.SyntaxItemList<T>.SyntaxItemList() -> void
Vezel.Celerity.Language.Syntax.Tree.SyntaxItemList<T>.this[int index].get -> T!
Vezel.Celerity.Language.Syntax.Tree.SyntaxItemList<T>.ToFullString() -> string!
Vezel.Celerity.Language.Syntax.Tree.SyntaxItemList<T>.Tree.get -> Vezel.Celerity.Language.Syntax.SyntaxTree!
Vezel.Celerity.Language.Syntax.Tree.SyntaxNode
Vezel.Celerity.Language.Syntax.Tree.SyntaxNode.Ancestors() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!>!
Vezel.Celerity.Language.Syntax.Tree.SyntaxNode.AncestorsAndSelf() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!>!
Vezel.Celerity.Language.Syntax.Tree.SyntaxNode.ChildNodesAndSelf() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!>!
Vezel.Celerity.Language.Syntax.Tree.SyntaxNode.DescendantNodes() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!>!
Vezel.Celerity.Language.Syntax.Tree.SyntaxNode.DescendantNodesAndSelf() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!>!
Vezel.Celerity.Language.Syntax.Tree.SyntaxNode.DescendantTerminals() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxTerminal!>!
Vezel.Celerity.Language.Syntax.Tree.SyntaxNode.DescendantTokens() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!>!
Vezel.Celerity.Language.Syntax.Tree.SyntaxNode.DescendantTrivia() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxTrivia!>!
Vezel.Celerity.Language.Syntax.Tree.SyntaxNode.Parent.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxNode?
Vezel.Celerity.Language.Syntax.Tree.SyntaxTerminal
Vezel.Celerity.Language.Syntax.Tree.SyntaxTerminal.ChildrenAndSelf() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxTerminal!>!
Vezel.Celerity.Language.Syntax.Tree.SyntaxTerminal.DescendantsAndSelf() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxTerminal!>!
Vezel.Celerity.Language.Syntax.Tree.SyntaxTerminal.Text.get -> string!
Vezel.Celerity.Language.Syntax.Tree.SyntaxToken
Vezel.Celerity.Language.Syntax.Tree.SyntaxToken.Ancestors() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!>!
Vezel.Celerity.Language.Syntax.Tree.SyntaxToken.IsEndOfInput.get -> bool
Vezel.Celerity.Language.Syntax.Tree.SyntaxToken.IsMissing.get -> bool
Vezel.Celerity.Language.Syntax.Tree.SyntaxToken.Kind.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind
Vezel.Celerity.Language.Syntax.Tree.SyntaxToken.LeadingTrivia.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxItemList<Vezel.Celerity.Language.Syntax.Tree.SyntaxTrivia!>
Vezel.Celerity.Language.Syntax.Tree.SyntaxToken.Parent.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!
Vezel.Celerity.Language.Syntax.Tree.SyntaxToken.TrailingTrivia.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxItemList<Vezel.Celerity.Language.Syntax.Tree.SyntaxTrivia!>
Vezel.Celerity.Language.Syntax.Tree.SyntaxToken.Value.get -> object?
Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind
Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind.AdditiveOperator = 6 -> Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind
Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind.AgentKeyword = 67 -> Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind
Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind.AndKeyword = 30 -> Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind
Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind.AnyKeyword = 68 -> Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind
Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind.AsKeyword = 31 -> Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind
Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind.AssertKeyword = 32 -> Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind
Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind.At = 21 -> Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind
Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind.AtomKeyword = 69 -> Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind
Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind.AtomLiteral = 90 -> Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind
Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind.BitwiseOperator = 3 -> Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind
Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind.BooleanLiteral = 87 -> Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind
Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind.BoolKeyword = 70 -> Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind
Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind.BreakKeyword = 33 -> Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind
Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind.CatchKeyword = 34 -> Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind
Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind.CloseAngle = 10 -> Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind
Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind.CloseAngleEquals = 11 -> Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind
Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind.CloseBrace = 29 -> Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind
Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind.CloseBracket = 27 -> Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind
Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind.CloseParen = 25 -> Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind
Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind.Colon = 17 -> Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind
Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind.ColonColon = 18 -> Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind
Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind.Comma = 16 -> Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind
Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind.CondKeyword = 35 -> Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind
Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind.ConstKeyword = 36 -> Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind
Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind.DeferKeyword = 37 -> Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind
Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind.DiscardIdentifier = 85 -> Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind
Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind.Dot = 14 -> Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind
Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind.DotDot = 15 -> Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind
Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind.ElseKeyword = 38 -> Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind
Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind.EndOfInput = 1 -> Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind
Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind.Equals = 7 -> Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind
Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind.EqualsEquals = 8 -> Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind
Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind.ErrKeyword = 39 -> Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind
Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind.ExclamationEquals = 9 -> Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind
Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind.ExtKeyword = 40 -> Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind
Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind.FnKeyword = 41 -> Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind
Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind.ForKeyword = 42 -> Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind
Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind.FriendKeyword = 78 -> Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind
Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind.HandleKeyword = 71 -> Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind
Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind.Hash = 22 -> Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind
Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind.IfKeyword = 43 -> Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind
Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind.InKeyword = 44 -> Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind
Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind.IntegerLiteral = 88 -> Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind
Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind.IntKeyword = 72 -> Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind
Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind.LetKeyword = 45 -> Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind
Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind.LowerIdentifier = 84 -> Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind
Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind.MacroKeyword = 79 -> Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind
Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind.MatchKeyword = 46 -> Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind
Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind.MetaKeyword = 47 -> Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind
Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind.MinusCloseAngle = 20 -> Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind
Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind.Missing = 0 -> Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind
Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind.ModKeyword = 48 -> Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind
Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind.MultiplicativeOperator = 5 -> Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind
Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind.MutKeyword = 49 -> Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind
Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind.NextKeyword = 50 -> Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind
Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind.NilLiteral = 86 -> Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind
Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind.NoneKeyword = 73 -> Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind
Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind.NotKeyword = 51 -> Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind
Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind.OpaqueKeyword = 52 -> Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind
Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind.OpenAngle = 12 -> Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind
Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind.OpenAngleEquals = 13 -> Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind
Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind.OpenBrace = 28 -> Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind
Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind.OpenBracket = 26 -> Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind
Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind.OpenParen = 24 -> Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind
Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind.OrKeyword = 53 -> Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind
Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind.PubKeyword = 54 -> Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind
Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind.Question = 23 -> Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind
Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind.QuoteKeyword = 80 -> Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind
Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind.RaiseKeyword = 55 -> Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind
Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind.RealKeyword = 74 -> Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind
Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind.RealLiteral = 89 -> Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind
Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind.RecKeyword = 56 -> Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind
Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind.RecvKeyword = 57 -> Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind
Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind.RefKeyword = 75 -> Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind
Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind.RetKeyword = 58 -> Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind
Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind.Semicolon = 19 -> Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind
Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind.ShiftOperator = 4 -> Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind
Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind.StringLiteral = 91 -> Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind
Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind.StrKeyword = 76 -> Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind
Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind.TailKeyword = 59 -> Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind
Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind.TestKeyword = 60 -> Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind
Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind.ThisKeyword = 61 -> Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind
Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind.TryKeyword = 62 -> Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind
Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind.TypeKeyword = 63 -> Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind
Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind.UnkKeyword = 77 -> Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind
Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind.UnquoteKeyword = 81 -> Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind
Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind.Unrecognized = 2 -> Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind
Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind.UpperIdentifier = 83 -> Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind
Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind.UseKeyword = 64 -> Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind
Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind.WhileKeyword = 65 -> Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind
Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind.WithKeyword = 66 -> Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind
Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind.YieldKeyword = 82 -> Vezel.Celerity.Language.Syntax.Tree.SyntaxTokenKind
Vezel.Celerity.Language.Syntax.Tree.SyntaxTrivia
Vezel.Celerity.Language.Syntax.Tree.SyntaxTrivia.ChildrenAndSelf() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxTrivia!>!
Vezel.Celerity.Language.Syntax.Tree.SyntaxTrivia.DescendantsAndSelf() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxTrivia!>!
Vezel.Celerity.Language.Syntax.Tree.SyntaxTrivia.IsSkippedToken.get -> bool
Vezel.Celerity.Language.Syntax.Tree.SyntaxTrivia.Kind.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxTriviaKind
Vezel.Celerity.Language.Syntax.Tree.SyntaxTrivia.Parent.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
Vezel.Celerity.Language.Syntax.Tree.SyntaxTrivia.Siblings() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxTrivia!>!
Vezel.Celerity.Language.Syntax.Tree.SyntaxTrivia.SiblingsAndSelf() -> System.Collections.Generic.IEnumerable<Vezel.Celerity.Language.Syntax.Tree.SyntaxTrivia!>!
Vezel.Celerity.Language.Syntax.Tree.SyntaxTriviaKind
Vezel.Celerity.Language.Syntax.Tree.SyntaxTriviaKind.Comment = 3 -> Vezel.Celerity.Language.Syntax.Tree.SyntaxTriviaKind
Vezel.Celerity.Language.Syntax.Tree.SyntaxTriviaKind.NewLine = 2 -> Vezel.Celerity.Language.Syntax.Tree.SyntaxTriviaKind
Vezel.Celerity.Language.Syntax.Tree.SyntaxTriviaKind.ShebangLine = 0 -> Vezel.Celerity.Language.Syntax.Tree.SyntaxTriviaKind
Vezel.Celerity.Language.Syntax.Tree.SyntaxTriviaKind.SkippedToken = 4 -> Vezel.Celerity.Language.Syntax.Tree.SyntaxTriviaKind
Vezel.Celerity.Language.Syntax.Tree.SyntaxTriviaKind.WhiteSpace = 1 -> Vezel.Celerity.Language.Syntax.Tree.SyntaxTriviaKind
Vezel.Celerity.Language.Syntax.Tree.TestDeclarationSyntax
Vezel.Celerity.Language.Syntax.Tree.TestDeclarationSyntax.Parent.get -> Vezel.Celerity.Language.Syntax.Tree.ModuleDocumentSyntax!
Vezel.Celerity.Language.Syntax.Tree.TestDeclarationSyntax.TestKeywordToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
Vezel.Celerity.Language.Syntax.Tree.ThisExpressionSyntax
Vezel.Celerity.Language.Syntax.Tree.ThisExpressionSyntax.Parent.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!
Vezel.Celerity.Language.Syntax.Tree.ThisExpressionSyntax.ThisKeywordToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
Vezel.Celerity.Language.Syntax.Tree.TryExpressionSyntax
Vezel.Celerity.Language.Syntax.Tree.TryExpressionSyntax.Arms.get -> Vezel.Celerity.Language.Syntax.Tree.SeparatedSyntaxItemList<Vezel.Celerity.Language.Syntax.Tree.ExpressionPatternArmSyntax!>
Vezel.Celerity.Language.Syntax.Tree.TryExpressionSyntax.CatchKeywordToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
Vezel.Celerity.Language.Syntax.Tree.TryExpressionSyntax.CloseBraceToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
Vezel.Celerity.Language.Syntax.Tree.TryExpressionSyntax.OpenBraceToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
Vezel.Celerity.Language.Syntax.Tree.TryExpressionSyntax.Operand.get -> Vezel.Celerity.Language.Syntax.Tree.ExpressionSyntax!
Vezel.Celerity.Language.Syntax.Tree.TryExpressionSyntax.Parent.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!
Vezel.Celerity.Language.Syntax.Tree.TryExpressionSyntax.TryKeywordToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
Vezel.Celerity.Language.Syntax.Tree.TupleExpressionSyntax
Vezel.Celerity.Language.Syntax.Tree.TupleExpressionSyntax.CloseCloseToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
Vezel.Celerity.Language.Syntax.Tree.TupleExpressionSyntax.Components.get -> Vezel.Celerity.Language.Syntax.Tree.SeparatedSyntaxItemList<Vezel.Celerity.Language.Syntax.Tree.ExpressionSyntax!>
Vezel.Celerity.Language.Syntax.Tree.TupleExpressionSyntax.OpenParenToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
Vezel.Celerity.Language.Syntax.Tree.TupleExpressionSyntax.Parent.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!
Vezel.Celerity.Language.Syntax.Tree.TuplePatternSyntax
Vezel.Celerity.Language.Syntax.Tree.TuplePatternSyntax.CloseParenToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
Vezel.Celerity.Language.Syntax.Tree.TuplePatternSyntax.Components.get -> Vezel.Celerity.Language.Syntax.Tree.SeparatedSyntaxItemList<Vezel.Celerity.Language.Syntax.Tree.PatternSyntax!>
Vezel.Celerity.Language.Syntax.Tree.TuplePatternSyntax.OpenParenToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
Vezel.Celerity.Language.Syntax.Tree.TuplePatternSyntax.Parent.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!
Vezel.Celerity.Language.Syntax.Tree.TupleTypeSyntax
Vezel.Celerity.Language.Syntax.Tree.TupleTypeSyntax.CloseParenToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
Vezel.Celerity.Language.Syntax.Tree.TupleTypeSyntax.Components.get -> Vezel.Celerity.Language.Syntax.Tree.SeparatedSyntaxItemList<Vezel.Celerity.Language.Syntax.Tree.TypeSyntax!>
Vezel.Celerity.Language.Syntax.Tree.TupleTypeSyntax.OpenParenToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
Vezel.Celerity.Language.Syntax.Tree.TupleTypeSyntax.Parent.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!
Vezel.Celerity.Language.Syntax.Tree.TypeAnnotationSyntax
Vezel.Celerity.Language.Syntax.Tree.TypeAnnotationSyntax.ColonToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
Vezel.Celerity.Language.Syntax.Tree.TypeAnnotationSyntax.Parent.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!
Vezel.Celerity.Language.Syntax.Tree.TypeAnnotationSyntax.Type.get -> Vezel.Celerity.Language.Syntax.Tree.TypeSyntax!
Vezel.Celerity.Language.Syntax.Tree.TypeDeclarationSyntax
Vezel.Celerity.Language.Syntax.Tree.TypeDeclarationSyntax.Body.get -> Vezel.Celerity.Language.Syntax.Tree.TypeSyntax!
Vezel.Celerity.Language.Syntax.Tree.TypeDeclarationSyntax.EqualsToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
Vezel.Celerity.Language.Syntax.Tree.TypeDeclarationSyntax.NameToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
Vezel.Celerity.Language.Syntax.Tree.TypeDeclarationSyntax.OpaqueKeywordToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken?
Vezel.Celerity.Language.Syntax.Tree.TypeDeclarationSyntax.ParameterList.get -> Vezel.Celerity.Language.Syntax.Tree.TypeParameterListSyntax?
Vezel.Celerity.Language.Syntax.Tree.TypeDeclarationSyntax.Parent.get -> Vezel.Celerity.Language.Syntax.Tree.ModuleDocumentSyntax!
Vezel.Celerity.Language.Syntax.Tree.TypeDeclarationSyntax.PubKeywordToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken?
Vezel.Celerity.Language.Syntax.Tree.TypeDeclarationSyntax.SemicolonToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
Vezel.Celerity.Language.Syntax.Tree.TypeDeclarationSyntax.TypeKeywordToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
Vezel.Celerity.Language.Syntax.Tree.TypeParameterListSyntax
Vezel.Celerity.Language.Syntax.Tree.TypeParameterListSyntax.CloseParenToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
Vezel.Celerity.Language.Syntax.Tree.TypeParameterListSyntax.OpenParenToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
Vezel.Celerity.Language.Syntax.Tree.TypeParameterListSyntax.Parameters.get -> Vezel.Celerity.Language.Syntax.Tree.SeparatedSyntaxItemList<Vezel.Celerity.Language.Syntax.Tree.TypeParameterSyntax!>
Vezel.Celerity.Language.Syntax.Tree.TypeParameterListSyntax.Parent.get -> Vezel.Celerity.Language.Syntax.Tree.TypeDeclarationSyntax!
Vezel.Celerity.Language.Syntax.Tree.TypeParameterSyntax
Vezel.Celerity.Language.Syntax.Tree.TypeParameterSyntax.Attributes.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxItemList<Vezel.Celerity.Language.Syntax.Tree.AttributeSyntax!>
Vezel.Celerity.Language.Syntax.Tree.TypeParameterSyntax.NameToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
Vezel.Celerity.Language.Syntax.Tree.TypeParameterSyntax.Parent.get -> Vezel.Celerity.Language.Syntax.Tree.TypeParameterListSyntax!
Vezel.Celerity.Language.Syntax.Tree.TypeSyntax
Vezel.Celerity.Language.Syntax.Tree.TypeSyntax.Parent.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!
Vezel.Celerity.Language.Syntax.Tree.UnaryExpressionSyntax
Vezel.Celerity.Language.Syntax.Tree.UnaryExpressionSyntax.Operand.get -> Vezel.Celerity.Language.Syntax.Tree.ExpressionSyntax!
Vezel.Celerity.Language.Syntax.Tree.UnaryExpressionSyntax.OperatorToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
Vezel.Celerity.Language.Syntax.Tree.UnaryExpressionSyntax.Parent.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!
Vezel.Celerity.Language.Syntax.Tree.UnionTypeSyntax
Vezel.Celerity.Language.Syntax.Tree.UnionTypeSyntax.Parent.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!
Vezel.Celerity.Language.Syntax.Tree.UnionTypeSyntax.Types.get -> Vezel.Celerity.Language.Syntax.Tree.SeparatedSyntaxItemList<Vezel.Celerity.Language.Syntax.Tree.TypeSyntax!>
Vezel.Celerity.Language.Syntax.Tree.UnknownTypeSyntax
Vezel.Celerity.Language.Syntax.Tree.UnknownTypeSyntax.Parent.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!
Vezel.Celerity.Language.Syntax.Tree.UnknownTypeSyntax.UnkKeywordToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
Vezel.Celerity.Language.Syntax.Tree.UseDeclarationSyntax
Vezel.Celerity.Language.Syntax.Tree.UseDeclarationSyntax.EqualsToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
Vezel.Celerity.Language.Syntax.Tree.UseDeclarationSyntax.NameToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
Vezel.Celerity.Language.Syntax.Tree.UseDeclarationSyntax.Parent.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!
Vezel.Celerity.Language.Syntax.Tree.UseDeclarationSyntax.Path.get -> Vezel.Celerity.Language.Syntax.Tree.ModulePathSyntax!
Vezel.Celerity.Language.Syntax.Tree.UseDeclarationSyntax.SemicolonToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
Vezel.Celerity.Language.Syntax.Tree.UseDeclarationSyntax.UseKeywordToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
Vezel.Celerity.Language.Syntax.Tree.ValueExpressionSyntax
Vezel.Celerity.Language.Syntax.Tree.ValueExpressionSyntax.Parent.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!
Vezel.Celerity.Language.Syntax.Tree.VariableBindingSyntax
Vezel.Celerity.Language.Syntax.Tree.VariableBindingSyntax.MutKeywordToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken?
Vezel.Celerity.Language.Syntax.Tree.VariableBindingSyntax.Parent.get -> Vezel.Celerity.Language.Syntax.Tree.PatternSyntax!
Vezel.Celerity.Language.Syntax.Tree.VariableTypeConstraintSyntax
Vezel.Celerity.Language.Syntax.Tree.VariableTypeConstraintSyntax.ColonToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
Vezel.Celerity.Language.Syntax.Tree.VariableTypeConstraintSyntax.Parent.get -> Vezel.Celerity.Language.Syntax.Tree.VariableTypeSyntax!
Vezel.Celerity.Language.Syntax.Tree.VariableTypeConstraintSyntax.Type.get -> Vezel.Celerity.Language.Syntax.Tree.TypeSyntax!
Vezel.Celerity.Language.Syntax.Tree.VariableTypeSyntax
Vezel.Celerity.Language.Syntax.Tree.VariableTypeSyntax.Constraint.get -> Vezel.Celerity.Language.Syntax.Tree.VariableTypeConstraintSyntax?
Vezel.Celerity.Language.Syntax.Tree.VariableTypeSyntax.NameToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
Vezel.Celerity.Language.Syntax.Tree.VariableTypeSyntax.Parent.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!
Vezel.Celerity.Language.Syntax.Tree.VariableTypeSyntax.TypeKeywordToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
Vezel.Celerity.Language.Syntax.Tree.WhileExpressionSyntax
Vezel.Celerity.Language.Syntax.Tree.WhileExpressionSyntax.Body.get -> Vezel.Celerity.Language.Syntax.Tree.BlockExpressionSyntax!
Vezel.Celerity.Language.Syntax.Tree.WhileExpressionSyntax.Condition.get -> Vezel.Celerity.Language.Syntax.Tree.ExpressionSyntax!
Vezel.Celerity.Language.Syntax.Tree.WhileExpressionSyntax.Else.get -> Vezel.Celerity.Language.Syntax.Tree.ExpressionElseSyntax?
Vezel.Celerity.Language.Syntax.Tree.WhileExpressionSyntax.Parent.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!
Vezel.Celerity.Language.Syntax.Tree.WhileExpressionSyntax.WhileKeywordToken.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxToken!
Vezel.Celerity.Language.Syntax.Tree.WildcardPatternSyntax
Vezel.Celerity.Language.Syntax.Tree.WildcardPatternSyntax.Binding.get -> Vezel.Celerity.Language.Syntax.Tree.BindingSyntax!
Vezel.Celerity.Language.Syntax.Tree.WildcardPatternSyntax.Parent.get -> Vezel.Celerity.Language.Syntax.Tree.SyntaxNode!
Vezel.Celerity.Language.Text.SourceText
Vezel.Celerity.Language.Text.SourceText.GetLocation(Vezel.Celerity.Language.Text.SourceTextSpan span) -> Vezel.Celerity.Language.Text.SourceTextLocation!
Vezel.Celerity.Language.Text.SourceText.Lines.get -> Vezel.Celerity.Language.Text.SourceTextLineList!
Vezel.Celerity.Language.Text.SourceText.Path.get -> string!
Vezel.Celerity.Language.Text.SourceText.SourceText(string! path) -> void
Vezel.Celerity.Language.Text.SourceTextLine
Vezel.Celerity.Language.Text.SourceTextLine.Equals(Vezel.Celerity.Language.Text.SourceTextLine other) -> bool
Vezel.Celerity.Language.Text.SourceTextLine.Line.get -> int
Vezel.Celerity.Language.Text.SourceTextLine.SourceTextLine() -> void
Vezel.Celerity.Language.Text.SourceTextLine.Span.get -> Vezel.Celerity.Language.Text.SourceTextSpan
Vezel.Celerity.Language.Text.SourceTextLine.Text.get -> Vezel.Celerity.Language.Text.SourceText!
Vezel.Celerity.Language.Text.SourceTextLineList
Vezel.Celerity.Language.Text.SourceTextLineList.Count.get -> int
Vezel.Celerity.Language.Text.SourceTextLineList.Enumerator
Vezel.Celerity.Language.Text.SourceTextLineList.Enumerator.Current.get -> Vezel.Celerity.Language.Text.SourceTextLine
Vezel.Celerity.Language.Text.SourceTextLineList.Enumerator.Enumerator() -> void
Vezel.Celerity.Language.Text.SourceTextLineList.Enumerator.MoveNext() -> bool
Vezel.Celerity.Language.Text.SourceTextLineList.GetEnumerator() -> Vezel.Celerity.Language.Text.SourceTextLineList.Enumerator
Vezel.Celerity.Language.Text.SourceTextLineList.GetLine(int position) -> Vezel.Celerity.Language.Text.SourceTextLine
Vezel.Celerity.Language.Text.SourceTextLineList.GetLinePosition(int position) -> Vezel.Celerity.Language.Text.SourceTextLinePosition
Vezel.Celerity.Language.Text.SourceTextLineList.GetPosition(Vezel.Celerity.Language.Text.SourceTextLinePosition position) -> int
Vezel.Celerity.Language.Text.SourceTextLineList.IndexOf(int position) -> int
Vezel.Celerity.Language.Text.SourceTextLineList.Text.get -> Vezel.Celerity.Language.Text.SourceText!
Vezel.Celerity.Language.Text.SourceTextLineList.this[int index].get -> Vezel.Celerity.Language.Text.SourceTextLine
Vezel.Celerity.Language.Text.SourceTextLinePosition
Vezel.Celerity.Language.Text.SourceTextLinePosition.Character.get -> int
Vezel.Celerity.Language.Text.SourceTextLinePosition.CompareTo(Vezel.Celerity.Language.Text.SourceTextLinePosition other) -> int
Vezel.Celerity.Language.Text.SourceTextLinePosition.Equals(Vezel.Celerity.Language.Text.SourceTextLinePosition other) -> bool
Vezel.Celerity.Language.Text.SourceTextLinePosition.Line.get -> int
Vezel.Celerity.Language.Text.SourceTextLinePosition.SourceTextLinePosition() -> void
Vezel.Celerity.Language.Text.SourceTextLocation
Vezel.Celerity.Language.Text.SourceTextLocation.End.get -> Vezel.Celerity.Language.Text.SourceTextLinePosition
Vezel.Celerity.Language.Text.SourceTextLocation.Equals(Vezel.Celerity.Language.Text.SourceTextLocation? other) -> bool
Vezel.Celerity.Language.Text.SourceTextLocation.Path.get -> string!
Vezel.Celerity.Language.Text.SourceTextLocation.Span.get -> Vezel.Celerity.Language.Text.SourceTextSpan
Vezel.Celerity.Language.Text.SourceTextLocation.Start.get -> Vezel.Celerity.Language.Text.SourceTextLinePosition
Vezel.Celerity.Language.Text.SourceTextSpan
Vezel.Celerity.Language.Text.SourceTextSpan.CompareTo(Vezel.Celerity.Language.Text.SourceTextSpan other) -> int
Vezel.Celerity.Language.Text.SourceTextSpan.Contains(int position) -> bool
Vezel.Celerity.Language.Text.SourceTextSpan.Contains(Vezel.Celerity.Language.Text.SourceTextSpan span) -> bool
Vezel.Celerity.Language.Text.SourceTextSpan.End.get -> int
Vezel.Celerity.Language.Text.SourceTextSpan.Equals(Vezel.Celerity.Language.Text.SourceTextSpan other) -> bool
Vezel.Celerity.Language.Text.SourceTextSpan.IsEmpty.get -> bool
Vezel.Celerity.Language.Text.SourceTextSpan.Length.get -> int
Vezel.Celerity.Language.Text.SourceTextSpan.Overlaps(Vezel.Celerity.Language.Text.SourceTextSpan span) -> bool
Vezel.Celerity.Language.Text.SourceTextSpan.SourceTextSpan() -> void
Vezel.Celerity.Language.Text.SourceTextSpan.Start.get -> int
Vezel.Celerity.Language.Text.StringSourceText
Vezel.Celerity.Language.Text.StringSourceText.StringSourceText(string! path, string! value) -> void
Vezel.Celerity.Language.Text.StringSourceText.Value.get -> string!
Vezel.Celerity.Language.Text.TextFacts
virtual Vezel.Celerity.Language.Semantics.SemanticVisitor.DefaultVisit(Vezel.Celerity.Language.Semantics.Tree.SemanticNode! node) -> void
virtual Vezel.Celerity.Language.Semantics.SemanticVisitor.VisitAdditiveExpression(Vezel.Celerity.Language.Semantics.Tree.AdditiveExpressionSemantics! node) -> void
virtual Vezel.Celerity.Language.Semantics.SemanticVisitor.VisitAggregateExpressionField(Vezel.Celerity.Language.Semantics.Tree.AggregateExpressionFieldSemantics! node) -> void
virtual Vezel.Celerity.Language.Semantics.SemanticVisitor.VisitAggregatePatternField(Vezel.Celerity.Language.Semantics.Tree.AggregatePatternFieldSemantics! node) -> void
virtual Vezel.Celerity.Language.Semantics.SemanticVisitor.VisitArrayExpression(Vezel.Celerity.Language.Semantics.Tree.ArrayExpressionSemantics! node) -> void
virtual Vezel.Celerity.Language.Semantics.SemanticVisitor.VisitArrayPattern(Vezel.Celerity.Language.Semantics.Tree.ArrayPatternSemantics! node) -> void
virtual Vezel.Celerity.Language.Semantics.SemanticVisitor.VisitAssertExpression(Vezel.Celerity.Language.Semantics.Tree.AssertExpressionSemantics! node) -> void
virtual Vezel.Celerity.Language.Semantics.SemanticVisitor.VisitAssignmentExpression(Vezel.Celerity.Language.Semantics.Tree.AssignmentExpressionSemantics! node) -> void
virtual Vezel.Celerity.Language.Semantics.SemanticVisitor.VisitAttribute(Vezel.Celerity.Language.Semantics.Tree.AttributeSemantics! node) -> void
virtual Vezel.Celerity.Language.Semantics.SemanticVisitor.VisitBitwiseExpression(Vezel.Celerity.Language.Semantics.Tree.BitwiseExpressionSemantics! node) -> void
virtual Vezel.Celerity.Language.Semantics.SemanticVisitor.VisitBlockExpression(Vezel.Celerity.Language.Semantics.Tree.BlockExpressionSemantics! node) -> void
virtual Vezel.Celerity.Language.Semantics.SemanticVisitor.VisitBreakExpression(Vezel.Celerity.Language.Semantics.Tree.BreakExpressionSemantics! node) -> void
virtual Vezel.Celerity.Language.Semantics.SemanticVisitor.VisitCallExpression(Vezel.Celerity.Language.Semantics.Tree.CallExpressionSemantics! node) -> void
virtual Vezel.Celerity.Language.Semantics.SemanticVisitor.VisitConditionExpression(Vezel.Celerity.Language.Semantics.Tree.ConditionExpressionSemantics! node) -> void
virtual Vezel.Celerity.Language.Semantics.SemanticVisitor.VisitConditionExpressionArm(Vezel.Celerity.Language.Semantics.Tree.ConditionExpressionArmSemantics! node) -> void
virtual Vezel.Celerity.Language.Semantics.SemanticVisitor.VisitConstantDeclaration(Vezel.Celerity.Language.Semantics.Tree.ConstantDeclarationSemantics! node) -> void
virtual Vezel.Celerity.Language.Semantics.SemanticVisitor.VisitDeclarationSubmission(Vezel.Celerity.Language.Semantics.Tree.DeclarationSubmissionSemantics! node) -> void
virtual Vezel.Celerity.Language.Semantics.SemanticVisitor.VisitDeferStatement(Vezel.Celerity.Language.Semantics.Tree.DeferStatementSemantics! node) -> void
virtual Vezel.Celerity.Language.Semantics.SemanticVisitor.VisitDiscardBinding(Vezel.Celerity.Language.Semantics.Tree.DiscardBindingSemantics! node) -> void
virtual Vezel.Celerity.Language.Semantics.SemanticVisitor.VisitErrorExpression(Vezel.Celerity.Language.Semantics.Tree.ErrorExpressionSemantics! node) -> void
virtual Vezel.Celerity.Language.Semantics.SemanticVisitor.VisitErrorPattern(Vezel.Celerity.Language.Semantics.Tree.ErrorPatternSemantics! node) -> void
virtual Vezel.Celerity.Language.Semantics.SemanticVisitor.VisitExpressionPatternArm(Vezel.Celerity.Language.Semantics.Tree.ExpressionPatternArmSemantics! node) -> void
virtual Vezel.Celerity.Language.Semantics.SemanticVisitor.VisitExpressionStatement(Vezel.Celerity.Language.Semantics.Tree.ExpressionStatementSemantics! node) -> void
virtual Vezel.Celerity.Language.Semantics.SemanticVisitor.VisitFieldExpression(Vezel.Celerity.Language.Semantics.Tree.FieldExpressionSemantics! node) -> void
virtual Vezel.Celerity.Language.Semantics.SemanticVisitor.VisitForExpression(Vezel.Celerity.Language.Semantics.Tree.ForExpressionSemantics! node) -> void
virtual Vezel.Celerity.Language.Semantics.SemanticVisitor.VisitFunctionDeclaration(Vezel.Celerity.Language.Semantics.Tree.FunctionDeclarationSemantics! node) -> void
virtual Vezel.Celerity.Language.Semantics.SemanticVisitor.VisitFunctionParameter(Vezel.Celerity.Language.Semantics.Tree.FunctionParameterSemantics! node) -> void
virtual Vezel.Celerity.Language.Semantics.SemanticVisitor.VisitIdentifierExpression(Vezel.Celerity.Language.Semantics.Tree.IdentifierExpressionSemantics! node) -> void
virtual Vezel.Celerity.Language.Semantics.SemanticVisitor.VisitIfExpression(Vezel.Celerity.Language.Semantics.Tree.IfExpressionSemantics! node) -> void
virtual Vezel.Celerity.Language.Semantics.SemanticVisitor.VisitIndexExpression(Vezel.Celerity.Language.Semantics.Tree.IndexExpressionSemantics! node) -> void
virtual Vezel.Celerity.Language.Semantics.SemanticVisitor.VisitInteractiveDocument(Vezel.Celerity.Language.Semantics.Tree.InteractiveDocumentSemantics! node) -> void
virtual Vezel.Celerity.Language.Semantics.SemanticVisitor.VisitLambdaExpression(Vezel.Celerity.Language.Semantics.Tree.LambdaExpressionSemantics! node) -> void
virtual Vezel.Celerity.Language.Semantics.SemanticVisitor.VisitLambdaParameter(Vezel.Celerity.Language.Semantics.Tree.LambdaParameterSemantics! node) -> void
virtual Vezel.Celerity.Language.Semantics.SemanticVisitor.VisitLetStatement(Vezel.Celerity.Language.Semantics.Tree.LetStatementSemantics! node) -> void
virtual Vezel.Celerity.Language.Semantics.SemanticVisitor.VisitLiteralExpression(Vezel.Celerity.Language.Semantics.Tree.LiteralExpressionSemantics! node) -> void
virtual Vezel.Celerity.Language.Semantics.SemanticVisitor.VisitLiteralPattern(Vezel.Celerity.Language.Semantics.Tree.LiteralPatternSemantics! node) -> void
virtual Vezel.Celerity.Language.Semantics.SemanticVisitor.VisitLogicalExpression(Vezel.Celerity.Language.Semantics.Tree.LogicalExpressionSemantics! node) -> void
virtual Vezel.Celerity.Language.Semantics.SemanticVisitor.VisitMapExpression(Vezel.Celerity.Language.Semantics.Tree.MapExpressionSemantics! node) -> void
virtual Vezel.Celerity.Language.Semantics.SemanticVisitor.VisitMapExpressionPair(Vezel.Celerity.Language.Semantics.Tree.MapExpressionPairSemantics! node) -> void
virtual Vezel.Celerity.Language.Semantics.SemanticVisitor.VisitMapPattern(Vezel.Celerity.Language.Semantics.Tree.MapPatternSemantics! node) -> void
virtual Vezel.Celerity.Language.Semantics.SemanticVisitor.VisitMapPatternPair(Vezel.Celerity.Language.Semantics.Tree.MapPatternPairSemantics! node) -> void
virtual Vezel.Celerity.Language.Semantics.SemanticVisitor.VisitMatchExpression(Vezel.Celerity.Language.Semantics.Tree.MatchExpressionSemantics! node) -> void
virtual Vezel.Celerity.Language.Semantics.SemanticVisitor.VisitMetaExpression(Vezel.Celerity.Language.Semantics.Tree.MetaExpressionSemantics! node) -> void
virtual Vezel.Celerity.Language.Semantics.SemanticVisitor.VisitModuleDocument(Vezel.Celerity.Language.Semantics.Tree.ModuleDocumentSemantics! node) -> void
virtual Vezel.Celerity.Language.Semantics.SemanticVisitor.VisitModuleExpression(Vezel.Celerity.Language.Semantics.Tree.ModuleExpressionSemantics! node) -> void
virtual Vezel.Celerity.Language.Semantics.SemanticVisitor.VisitModulePattern(Vezel.Celerity.Language.Semantics.Tree.ModulePatternSemantics! node) -> void
virtual Vezel.Celerity.Language.Semantics.SemanticVisitor.VisitMultiplicativeExpression(Vezel.Celerity.Language.Semantics.Tree.MultiplicativeExpressionSemantics! node) -> void
virtual Vezel.Celerity.Language.Semantics.SemanticVisitor.VisitNextExpression(Vezel.Celerity.Language.Semantics.Tree.NextExpressionSemantics! node) -> void
virtual Vezel.Celerity.Language.Semantics.SemanticVisitor.VisitParenthesizedExpression(Vezel.Celerity.Language.Semantics.Tree.ParenthesizedExpressionSemantics! node) -> void
virtual Vezel.Celerity.Language.Semantics.SemanticVisitor.VisitRaiseExpression(Vezel.Celerity.Language.Semantics.Tree.RaiseExpressionSemantics! node) -> void
virtual Vezel.Celerity.Language.Semantics.SemanticVisitor.VisitReceiveExpression(Vezel.Celerity.Language.Semantics.Tree.ReceiveExpressionSemantics! node) -> void
virtual Vezel.Celerity.Language.Semantics.SemanticVisitor.VisitReceiveExpressionArm(Vezel.Celerity.Language.Semantics.Tree.ReceiveExpressionArmSemantics! node) -> void
virtual Vezel.Celerity.Language.Semantics.SemanticVisitor.VisitReceiveParameter(Vezel.Celerity.Language.Semantics.Tree.ReceiveParameterSemantics! node) -> void
virtual Vezel.Celerity.Language.Semantics.SemanticVisitor.VisitRecordExpression(Vezel.Celerity.Language.Semantics.Tree.RecordExpressionSemantics! node) -> void
virtual Vezel.Celerity.Language.Semantics.SemanticVisitor.VisitRecordPattern(Vezel.Celerity.Language.Semantics.Tree.RecordPatternSemantics! node) -> void
virtual Vezel.Celerity.Language.Semantics.SemanticVisitor.VisitRelationalExpression(Vezel.Celerity.Language.Semantics.Tree.RelationalExpressionSemantics! node) -> void
virtual Vezel.Celerity.Language.Semantics.SemanticVisitor.VisitReturnExpression(Vezel.Celerity.Language.Semantics.Tree.ReturnExpressionSemantics! node) -> void
virtual Vezel.Celerity.Language.Semantics.SemanticVisitor.VisitSendExpression(Vezel.Celerity.Language.Semantics.Tree.SendExpressionSemantics! node) -> void
virtual Vezel.Celerity.Language.Semantics.SemanticVisitor.VisitSetExpression(Vezel.Celerity.Language.Semantics.Tree.SetExpressionSemantics! node) -> void
virtual Vezel.Celerity.Language.Semantics.SemanticVisitor.VisitSetPattern(Vezel.Celerity.Language.Semantics.Tree.SetPatternSemantics! node) -> void
virtual Vezel.Celerity.Language.Semantics.SemanticVisitor.VisitShiftExpression(Vezel.Celerity.Language.Semantics.Tree.ShiftExpressionSemantics! node) -> void
virtual Vezel.Celerity.Language.Semantics.SemanticVisitor.VisitStatementSubmission(Vezel.Celerity.Language.Semantics.Tree.StatementSubmissionSemantics! node) -> void
virtual Vezel.Celerity.Language.Semantics.SemanticVisitor.VisitStringPattern(Vezel.Celerity.Language.Semantics.Tree.StringPatternSemantics! node) -> void
virtual Vezel.Celerity.Language.Semantics.SemanticVisitor.VisitTestDeclaration(Vezel.Celerity.Language.Semantics.Tree.TestDeclarationSemantics! node) -> void
virtual Vezel.Celerity.Language.Semantics.SemanticVisitor.VisitThisExpression(Vezel.Celerity.Language.Semantics.Tree.ThisExpressionSemantics! node) -> void
virtual Vezel.Celerity.Language.Semantics.SemanticVisitor.VisitTryExpression(Vezel.Celerity.Language.Semantics.Tree.TryExpressionSemantics! node) -> void
virtual Vezel.Celerity.Language.Semantics.SemanticVisitor.VisitTupleExpression(Vezel.Celerity.Language.Semantics.Tree.TupleExpressionSemantics! node) -> void
virtual Vezel.Celerity.Language.Semantics.SemanticVisitor.VisitTuplePattern(Vezel.Celerity.Language.Semantics.Tree.TuplePatternSemantics! node) -> void
virtual Vezel.Celerity.Language.Semantics.SemanticVisitor.VisitUnaryExpression(Vezel.Celerity.Language.Semantics.Tree.UnaryExpressionSemantics! node) -> void
virtual Vezel.Celerity.Language.Semantics.SemanticVisitor.VisitUseDeclaration(Vezel.Celerity.Language.Semantics.Tree.UseDeclarationSemantics! node) -> void
virtual Vezel.Celerity.Language.Semantics.SemanticVisitor.VisitVariableBinding(Vezel.Celerity.Language.Semantics.Tree.VariableBindingSemantics! node) -> void
virtual Vezel.Celerity.Language.Semantics.SemanticVisitor.VisitWhileExpression(Vezel.Celerity.Language.Semantics.Tree.WhileExpressionSemantics! node) -> void
virtual Vezel.Celerity.Language.Semantics.SemanticVisitor.VisitWildcardPattern(Vezel.Celerity.Language.Semantics.Tree.WildcardPatternSemantics! node) -> void
virtual Vezel.Celerity.Language.Semantics.SemanticVisitor<T>.DefaultVisit(Vezel.Celerity.Language.Semantics.Tree.SemanticNode! node) -> T?
virtual Vezel.Celerity.Language.Semantics.SemanticVisitor<T>.VisitAdditiveExpression(Vezel.Celerity.Language.Semantics.Tree.AdditiveExpressionSemantics! node) -> T?
virtual Vezel.Celerity.Language.Semantics.SemanticVisitor<T>.VisitAggregateExpressionField(Vezel.Celerity.Language.Semantics.Tree.AggregateExpressionFieldSemantics! node) -> T?
virtual Vezel.Celerity.Language.Semantics.SemanticVisitor<T>.VisitAggregatePatternField(Vezel.Celerity.Language.Semantics.Tree.AggregatePatternFieldSemantics! node) -> T?
virtual Vezel.Celerity.Language.Semantics.SemanticVisitor<T>.VisitArrayExpression(Vezel.Celerity.Language.Semantics.Tree.ArrayExpressionSemantics! node) -> T?
virtual Vezel.Celerity.Language.Semantics.SemanticVisitor<T>.VisitArrayPattern(Vezel.Celerity.Language.Semantics.Tree.ArrayPatternSemantics! node) -> T?
virtual Vezel.Celerity.Language.Semantics.SemanticVisitor<T>.VisitAssertExpression(Vezel.Celerity.Language.Semantics.Tree.AssertExpressionSemantics! node) -> T?
virtual Vezel.Celerity.Language.Semantics.SemanticVisitor<T>.VisitAssignmentExpression(Vezel.Celerity.Language.Semantics.Tree.AssignmentExpressionSemantics! node) -> T?
virtual Vezel.Celerity.Language.Semantics.SemanticVisitor<T>.VisitAttribute(Vezel.Celerity.Language.Semantics.Tree.AttributeSemantics! node) -> T?
virtual Vezel.Celerity.Language.Semantics.SemanticVisitor<T>.VisitBitwiseExpression(Vezel.Celerity.Language.Semantics.Tree.BitwiseExpressionSemantics! node) -> T?
virtual Vezel.Celerity.Language.Semantics.SemanticVisitor<T>.VisitBlockExpression(Vezel.Celerity.Language.Semantics.Tree.BlockExpressionSemantics! node) -> T?
virtual Vezel.Celerity.Language.Semantics.SemanticVisitor<T>.VisitBreakExpression(Vezel.Celerity.Language.Semantics.Tree.BreakExpressionSemantics! node) -> T?
virtual Vezel.Celerity.Language.Semantics.SemanticVisitor<T>.VisitCallExpression(Vezel.Celerity.Language.Semantics.Tree.CallExpressionSemantics! node) -> T?
virtual Vezel.Celerity.Language.Semantics.SemanticVisitor<T>.VisitConditionExpression(Vezel.Celerity.Language.Semantics.Tree.ConditionExpressionSemantics! node) -> T?
virtual Vezel.Celerity.Language.Semantics.SemanticVisitor<T>.VisitConditionExpressionArm(Vezel.Celerity.Language.Semantics.Tree.ConditionExpressionArmSemantics! node) -> T?
virtual Vezel.Celerity.Language.Semantics.SemanticVisitor<T>.VisitConstantDeclaration(Vezel.Celerity.Language.Semantics.Tree.ConstantDeclarationSemantics! node) -> T?
virtual Vezel.Celerity.Language.Semantics.SemanticVisitor<T>.VisitDeclarationSubmission(Vezel.Celerity.Language.Semantics.Tree.DeclarationSubmissionSemantics! node) -> T?
virtual Vezel.Celerity.Language.Semantics.SemanticVisitor<T>.VisitDeferStatement(Vezel.Celerity.Language.Semantics.Tree.DeferStatementSemantics! node) -> T?
virtual Vezel.Celerity.Language.Semantics.SemanticVisitor<T>.VisitDiscardBinding(Vezel.Celerity.Language.Semantics.Tree.DiscardBindingSemantics! node) -> T?
virtual Vezel.Celerity.Language.Semantics.SemanticVisitor<T>.VisitErrorExpression(Vezel.Celerity.Language.Semantics.Tree.ErrorExpressionSemantics! node) -> T?
virtual Vezel.Celerity.Language.Semantics.SemanticVisitor<T>.VisitErrorPattern(Vezel.Celerity.Language.Semantics.Tree.ErrorPatternSemantics! node) -> T?
virtual Vezel.Celerity.Language.Semantics.SemanticVisitor<T>.VisitExpressionPatternArm(Vezel.Celerity.Language.Semantics.Tree.ExpressionPatternArmSemantics! node) -> T?
virtual Vezel.Celerity.Language.Semantics.SemanticVisitor<T>.VisitExpressionStatement(Vezel.Celerity.Language.Semantics.Tree.ExpressionStatementSemantics! node) -> T?
virtual Vezel.Celerity.Language.Semantics.SemanticVisitor<T>.VisitFieldExpression(Vezel.Celerity.Language.Semantics.Tree.FieldExpressionSemantics! node) -> T?
virtual Vezel.Celerity.Language.Semantics.SemanticVisitor<T>.VisitForExpression(Vezel.Celerity.Language.Semantics.Tree.ForExpressionSemantics! node) -> T?
virtual Vezel.Celerity.Language.Semantics.SemanticVisitor<T>.VisitFunctionDeclaration(Vezel.Celerity.Language.Semantics.Tree.FunctionDeclarationSemantics! node) -> T?
virtual Vezel.Celerity.Language.Semantics.SemanticVisitor<T>.VisitFunctionParameter(Vezel.Celerity.Language.Semantics.Tree.FunctionParameterSemantics! node) -> T?
virtual Vezel.Celerity.Language.Semantics.SemanticVisitor<T>.VisitIdentifierExpression(Vezel.Celerity.Language.Semantics.Tree.IdentifierExpressionSemantics! node) -> T?
virtual Vezel.Celerity.Language.Semantics.SemanticVisitor<T>.VisitIfExpression(Vezel.Celerity.Language.Semantics.Tree.IfExpressionSemantics! node) -> T?
virtual Vezel.Celerity.Language.Semantics.SemanticVisitor<T>.VisitIndexExpression(Vezel.Celerity.Language.Semantics.Tree.IndexExpressionSemantics! node) -> T?
virtual Vezel.Celerity.Language.Semantics.SemanticVisitor<T>.VisitInteractiveDocument(Vezel.Celerity.Language.Semantics.Tree.InteractiveDocumentSemantics! node) -> T?
virtual Vezel.Celerity.Language.Semantics.SemanticVisitor<T>.VisitLambdaExpression(Vezel.Celerity.Language.Semantics.Tree.LambdaExpressionSemantics! node) -> T?
virtual Vezel.Celerity.Language.Semantics.SemanticVisitor<T>.VisitLambdaParameter(Vezel.Celerity.Language.Semantics.Tree.LambdaParameterSemantics! node) -> T?
virtual Vezel.Celerity.Language.Semantics.SemanticVisitor<T>.VisitLetStatement(Vezel.Celerity.Language.Semantics.Tree.LetStatementSemantics! node) -> T?
virtual Vezel.Celerity.Language.Semantics.SemanticVisitor<T>.VisitLiteralExpression(Vezel.Celerity.Language.Semantics.Tree.LiteralExpressionSemantics! node) -> T?
virtual Vezel.Celerity.Language.Semantics.SemanticVisitor<T>.VisitLiteralPattern(Vezel.Celerity.Language.Semantics.Tree.LiteralPatternSemantics! node) -> T?
virtual Vezel.Celerity.Language.Semantics.SemanticVisitor<T>.VisitLogicalExpression(Vezel.Celerity.Language.Semantics.Tree.LogicalExpressionSemantics! node) -> T?
virtual Vezel.Celerity.Language.Semantics.SemanticVisitor<T>.VisitMapExpression(Vezel.Celerity.Language.Semantics.Tree.MapExpressionSemantics! node) -> T?
virtual Vezel.Celerity.Language.Semantics.SemanticVisitor<T>.VisitMapExpressionPair(Vezel.Celerity.Language.Semantics.Tree.MapExpressionPairSemantics! node) -> T?
virtual Vezel.Celerity.Language.Semantics.SemanticVisitor<T>.VisitMapPattern(Vezel.Celerity.Language.Semantics.Tree.MapPatternSemantics! node) -> T?
virtual Vezel.Celerity.Language.Semantics.SemanticVisitor<T>.VisitMapPatternPair(Vezel.Celerity.Language.Semantics.Tree.MapPatternPairSemantics! node) -> T?
virtual Vezel.Celerity.Language.Semantics.SemanticVisitor<T>.VisitMatchExpression(Vezel.Celerity.Language.Semantics.Tree.MatchExpressionSemantics! node) -> T?
virtual Vezel.Celerity.Language.Semantics.SemanticVisitor<T>.VisitMetaExpression(Vezel.Celerity.Language.Semantics.Tree.MetaExpressionSemantics! node) -> T?
virtual Vezel.Celerity.Language.Semantics.SemanticVisitor<T>.VisitModuleDocument(Vezel.Celerity.Language.Semantics.Tree.ModuleDocumentSemantics! node) -> T?
virtual Vezel.Celerity.Language.Semantics.SemanticVisitor<T>.VisitModuleExpression(Vezel.Celerity.Language.Semantics.Tree.ModuleExpressionSemantics! node) -> T?
virtual Vezel.Celerity.Language.Semantics.SemanticVisitor<T>.VisitModulePattern(Vezel.Celerity.Language.Semantics.Tree.ModulePatternSemantics! node) -> T?
virtual Vezel.Celerity.Language.Semantics.SemanticVisitor<T>.VisitMultiplicativeExpression(Vezel.Celerity.Language.Semantics.Tree.MultiplicativeExpressionSemantics! node) -> T?
virtual Vezel.Celerity.Language.Semantics.SemanticVisitor<T>.VisitNextExpression(Vezel.Celerity.Language.Semantics.Tree.NextExpressionSemantics! node) -> T?
virtual Vezel.Celerity.Language.Semantics.SemanticVisitor<T>.VisitParenthesizedExpression(Vezel.Celerity.Language.Semantics.Tree.ParenthesizedExpressionSemantics! node) -> T?
virtual Vezel.Celerity.Language.Semantics.SemanticVisitor<T>.VisitRaiseExpression(Vezel.Celerity.Language.Semantics.Tree.RaiseExpressionSemantics! node) -> T?
virtual Vezel.Celerity.Language.Semantics.SemanticVisitor<T>.VisitReceiveExpression(Vezel.Celerity.Language.Semantics.Tree.ReceiveExpressionSemantics! node) -> T?
virtual Vezel.Celerity.Language.Semantics.SemanticVisitor<T>.VisitReceiveExpressionArm(Vezel.Celerity.Language.Semantics.Tree.ReceiveExpressionArmSemantics! node) -> T?
virtual Vezel.Celerity.Language.Semantics.SemanticVisitor<T>.VisitReceiveParameter(Vezel.Celerity.Language.Semantics.Tree.ReceiveParameterSemantics! node) -> T?
virtual Vezel.Celerity.Language.Semantics.SemanticVisitor<T>.VisitRecordExpression(Vezel.Celerity.Language.Semantics.Tree.RecordExpressionSemantics! node) -> T?
virtual Vezel.Celerity.Language.Semantics.SemanticVisitor<T>.VisitRecordPattern(Vezel.Celerity.Language.Semantics.Tree.RecordPatternSemantics! node) -> T?
virtual Vezel.Celerity.Language.Semantics.SemanticVisitor<T>.VisitRelationalExpression(Vezel.Celerity.Language.Semantics.Tree.RelationalExpressionSemantics! node) -> T?
virtual Vezel.Celerity.Language.Semantics.SemanticVisitor<T>.VisitReturnExpression(Vezel.Celerity.Language.Semantics.Tree.ReturnExpressionSemantics! node) -> T?
virtual Vezel.Celerity.Language.Semantics.SemanticVisitor<T>.VisitSendExpression(Vezel.Celerity.Language.Semantics.Tree.SendExpressionSemantics! node) -> T?
virtual Vezel.Celerity.Language.Semantics.SemanticVisitor<T>.VisitSetExpression(Vezel.Celerity.Language.Semantics.Tree.SetExpressionSemantics! node) -> T?
virtual Vezel.Celerity.Language.Semantics.SemanticVisitor<T>.VisitSetPattern(Vezel.Celerity.Language.Semantics.Tree.SetPatternSemantics! node) -> T?
virtual Vezel.Celerity.Language.Semantics.SemanticVisitor<T>.VisitShiftExpression(Vezel.Celerity.Language.Semantics.Tree.ShiftExpressionSemantics! node) -> T?
virtual Vezel.Celerity.Language.Semantics.SemanticVisitor<T>.VisitStatementSubmission(Vezel.Celerity.Language.Semantics.Tree.StatementSubmissionSemantics! node) -> T?
virtual Vezel.Celerity.Language.Semantics.SemanticVisitor<T>.VisitStringPattern(Vezel.Celerity.Language.Semantics.Tree.StringPatternSemantics! node) -> T?
virtual Vezel.Celerity.Language.Semantics.SemanticVisitor<T>.VisitTestDeclaration(Vezel.Celerity.Language.Semantics.Tree.TestDeclarationSemantics! node) -> T?
virtual Vezel.Celerity.Language.Semantics.SemanticVisitor<T>.VisitThisExpression(Vezel.Celerity.Language.Semantics.Tree.ThisExpressionSemantics! node) -> T?
virtual Vezel.Celerity.Language.Semantics.SemanticVisitor<T>.VisitTryExpression(Vezel.Celerity.Language.Semantics.Tree.TryExpressionSemantics! node) -> T?
virtual Vezel.Celerity.Language.Semantics.SemanticVisitor<T>.VisitTupleExpression(Vezel.Celerity.Language.Semantics.Tree.TupleExpressionSemantics! node) -> T?
virtual Vezel.Celerity.Language.Semantics.SemanticVisitor<T>.VisitTuplePattern(Vezel.Celerity.Language.Semantics.Tree.TuplePatternSemantics! node) -> T?
virtual Vezel.Celerity.Language.Semantics.SemanticVisitor<T>.VisitUnaryExpression(Vezel.Celerity.Language.Semantics.Tree.UnaryExpressionSemantics! node) -> T?
virtual Vezel.Celerity.Language.Semantics.SemanticVisitor<T>.VisitUseDeclaration(Vezel.Celerity.Language.Semantics.Tree.UseDeclarationSemantics! node) -> T?
virtual Vezel.Celerity.Language.Semantics.SemanticVisitor<T>.VisitVariableBinding(Vezel.Celerity.Language.Semantics.Tree.VariableBindingSemantics! node) -> T?
virtual Vezel.Celerity.Language.Semantics.SemanticVisitor<T>.VisitWhileExpression(Vezel.Celerity.Language.Semantics.Tree.WhileExpressionSemantics! node) -> T?
virtual Vezel.Celerity.Language.Semantics.SemanticVisitor<T>.VisitWildcardPattern(Vezel.Celerity.Language.Semantics.Tree.WildcardPatternSemantics! node) -> T?
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor.DefaultVisit(Vezel.Celerity.Language.Syntax.Tree.SyntaxNode! node) -> void
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor.VisitAdditiveExpression(Vezel.Celerity.Language.Syntax.Tree.AdditiveExpressionSyntax! node) -> void
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor.VisitAgentType(Vezel.Celerity.Language.Syntax.Tree.AgentTypeSyntax! node) -> void
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor.VisitAgentTypeMessage(Vezel.Celerity.Language.Syntax.Tree.AgentTypeMessageSyntax! node) -> void
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor.VisitAgentTypeMessageParameter(Vezel.Celerity.Language.Syntax.Tree.AgentTypeMessageParameterSyntax! node) -> void
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor.VisitAgentTypeMessageParameterList(Vezel.Celerity.Language.Syntax.Tree.AgentTypeMessageParameterListSyntax! node) -> void
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor.VisitAgentTypeProtocol(Vezel.Celerity.Language.Syntax.Tree.AgentTypeProtocolSyntax! node) -> void
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor.VisitAggregateExpressionField(Vezel.Celerity.Language.Syntax.Tree.AggregateExpressionFieldSyntax! node) -> void
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor.VisitAggregateExpressionWith(Vezel.Celerity.Language.Syntax.Tree.AggregateExpressionWithSyntax! node) -> void
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor.VisitAggregatePatternField(Vezel.Celerity.Language.Syntax.Tree.AggregatePatternFieldSyntax! node) -> void
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor.VisitAggregateTypeField(Vezel.Celerity.Language.Syntax.Tree.AggregateTypeFieldSyntax! node) -> void
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor.VisitAnyType(Vezel.Celerity.Language.Syntax.Tree.AnyTypeSyntax! node) -> void
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor.VisitArrayExpression(Vezel.Celerity.Language.Syntax.Tree.ArrayExpressionSyntax! node) -> void
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor.VisitArrayPattern(Vezel.Celerity.Language.Syntax.Tree.ArrayPatternSyntax! node) -> void
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor.VisitArrayType(Vezel.Celerity.Language.Syntax.Tree.ArrayTypeSyntax! node) -> void
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor.VisitAssertExpression(Vezel.Celerity.Language.Syntax.Tree.AssertExpressionSyntax! node) -> void
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor.VisitAssignmentExpression(Vezel.Celerity.Language.Syntax.Tree.AssignmentExpressionSyntax! node) -> void
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor.VisitAtomType(Vezel.Celerity.Language.Syntax.Tree.AtomTypeSyntax! node) -> void
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor.VisitAttribute(Vezel.Celerity.Language.Syntax.Tree.AttributeSyntax! node) -> void
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor.VisitBitwiseExpression(Vezel.Celerity.Language.Syntax.Tree.BitwiseExpressionSyntax! node) -> void
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor.VisitBlockExpression(Vezel.Celerity.Language.Syntax.Tree.BlockExpressionSyntax! node) -> void
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor.VisitBooleanType(Vezel.Celerity.Language.Syntax.Tree.BooleanTypeSyntax! node) -> void
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor.VisitBreakExpression(Vezel.Celerity.Language.Syntax.Tree.BreakExpressionSyntax! node) -> void
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor.VisitBreakExpressionResult(Vezel.Celerity.Language.Syntax.Tree.BreakExpressionResultSyntax! node) -> void
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor.VisitCallArgumentList(Vezel.Celerity.Language.Syntax.Tree.CallArgumentListSyntax! node) -> void
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor.VisitCallExpression(Vezel.Celerity.Language.Syntax.Tree.CallExpressionSyntax! node) -> void
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor.VisitConditionExpression(Vezel.Celerity.Language.Syntax.Tree.ConditionExpressionSyntax! node) -> void
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor.VisitConditionExpressionArm(Vezel.Celerity.Language.Syntax.Tree.ConditionExpressionArmSyntax! node) -> void
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor.VisitConstantDeclaration(Vezel.Celerity.Language.Syntax.Tree.ConstantDeclarationSyntax! node) -> void
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor.VisitDeclarationSubmission(Vezel.Celerity.Language.Syntax.Tree.DeclarationSubmissionSyntax! node) -> void
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor.VisitDeferStatement(Vezel.Celerity.Language.Syntax.Tree.DeferStatementSyntax! node) -> void
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor.VisitDiscardBinding(Vezel.Celerity.Language.Syntax.Tree.DiscardBindingSyntax! node) -> void
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor.VisitErrorExpression(Vezel.Celerity.Language.Syntax.Tree.ErrorExpressionSyntax! node) -> void
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor.VisitErrorPattern(Vezel.Celerity.Language.Syntax.Tree.ErrorPatternSyntax! node) -> void
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor.VisitErrorType(Vezel.Celerity.Language.Syntax.Tree.ErrorTypeSyntax! node) -> void
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor.VisitExpressionArmGuard(Vezel.Celerity.Language.Syntax.Tree.ExpressionArmGuardSyntax! node) -> void
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor.VisitExpressionElse(Vezel.Celerity.Language.Syntax.Tree.ExpressionElseSyntax! node) -> void
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor.VisitExpressionPatternArm(Vezel.Celerity.Language.Syntax.Tree.ExpressionPatternArmSyntax! node) -> void
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor.VisitExpressionStatement(Vezel.Celerity.Language.Syntax.Tree.ExpressionStatementSyntax! node) -> void
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor.VisitFieldExpression(Vezel.Celerity.Language.Syntax.Tree.FieldExpressionSyntax! node) -> void
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor.VisitForExpression(Vezel.Celerity.Language.Syntax.Tree.ForExpressionSyntax! node) -> void
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor.VisitFunctionDeclaration(Vezel.Celerity.Language.Syntax.Tree.FunctionDeclarationSyntax! node) -> void
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor.VisitFunctionParameter(Vezel.Celerity.Language.Syntax.Tree.FunctionParameterSyntax! node) -> void
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor.VisitFunctionParameterList(Vezel.Celerity.Language.Syntax.Tree.FunctionParameterListSyntax! node) -> void
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor.VisitFunctionType(Vezel.Celerity.Language.Syntax.Tree.FunctionTypeSyntax! node) -> void
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor.VisitFunctionTypeParameter(Vezel.Celerity.Language.Syntax.Tree.FunctionTypeParameterSyntax! node) -> void
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor.VisitFunctionTypeParameterList(Vezel.Celerity.Language.Syntax.Tree.FunctionTypeParameterListSyntax! node) -> void
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor.VisitFunctionTypeSignature(Vezel.Celerity.Language.Syntax.Tree.FunctionTypeSignatureSyntax! node) -> void
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor.VisitHandleType(Vezel.Celerity.Language.Syntax.Tree.HandleTypeSyntax! node) -> void
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor.VisitIdentifierExpression(Vezel.Celerity.Language.Syntax.Tree.IdentifierExpressionSyntax! node) -> void
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor.VisitIfExpression(Vezel.Celerity.Language.Syntax.Tree.IfExpressionSyntax! node) -> void
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor.VisitIndexArgumentList(Vezel.Celerity.Language.Syntax.Tree.IndexArgumentListSyntax! node) -> void
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor.VisitIndexExpression(Vezel.Celerity.Language.Syntax.Tree.IndexExpressionSyntax! node) -> void
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor.VisitIntegerType(Vezel.Celerity.Language.Syntax.Tree.IntegerTypeSyntax! node) -> void
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor.VisitIntegerTypeRange(Vezel.Celerity.Language.Syntax.Tree.IntegerTypeRangeSyntax! node) -> void
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor.VisitIntegerTypeRangeBound(Vezel.Celerity.Language.Syntax.Tree.IntegerTypeRangeBoundSyntax! node) -> void
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor.VisitInteractiveDocument(Vezel.Celerity.Language.Syntax.Tree.InteractiveDocumentSyntax! node) -> void
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor.VisitLambdaExpression(Vezel.Celerity.Language.Syntax.Tree.LambdaExpressionSyntax! node) -> void
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor.VisitLambdaParameter(Vezel.Celerity.Language.Syntax.Tree.LambdaParameterSyntax! node) -> void
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor.VisitLambdaParameterList(Vezel.Celerity.Language.Syntax.Tree.LambdaParameterListSyntax! node) -> void
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor.VisitLetStatement(Vezel.Celerity.Language.Syntax.Tree.LetStatementSyntax! node) -> void
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor.VisitLiteralExpression(Vezel.Celerity.Language.Syntax.Tree.LiteralExpressionSyntax! node) -> void
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor.VisitLiteralPattern(Vezel.Celerity.Language.Syntax.Tree.LiteralPatternSyntax! node) -> void
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor.VisitLiteralType(Vezel.Celerity.Language.Syntax.Tree.LiteralTypeSyntax! node) -> void
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor.VisitLogicalExpression(Vezel.Celerity.Language.Syntax.Tree.LogicalExpressionSyntax! node) -> void
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor.VisitMapExpression(Vezel.Celerity.Language.Syntax.Tree.MapExpressionSyntax! node) -> void
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor.VisitMapExpressionPair(Vezel.Celerity.Language.Syntax.Tree.MapExpressionPairSyntax! node) -> void
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor.VisitMapPattern(Vezel.Celerity.Language.Syntax.Tree.MapPatternSyntax! node) -> void
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor.VisitMapPatternPair(Vezel.Celerity.Language.Syntax.Tree.MapPatternPairSyntax! node) -> void
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor.VisitMapType(Vezel.Celerity.Language.Syntax.Tree.MapTypeSyntax! node) -> void
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor.VisitMatchExpression(Vezel.Celerity.Language.Syntax.Tree.MatchExpressionSyntax! node) -> void
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor.VisitMetaExpression(Vezel.Celerity.Language.Syntax.Tree.MetaExpressionSyntax! node) -> void
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor.VisitModuleDocument(Vezel.Celerity.Language.Syntax.Tree.ModuleDocumentSyntax! node) -> void
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor.VisitModuleExpression(Vezel.Celerity.Language.Syntax.Tree.ModuleExpressionSyntax! node) -> void
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor.VisitModulePath(Vezel.Celerity.Language.Syntax.Tree.ModulePathSyntax! node) -> void
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor.VisitModulePattern(Vezel.Celerity.Language.Syntax.Tree.ModulePatternSyntax! node) -> void
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor.VisitModuleType(Vezel.Celerity.Language.Syntax.Tree.ModuleTypeSyntax! node) -> void
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor.VisitMultiplicativeExpression(Vezel.Celerity.Language.Syntax.Tree.MultiplicativeExpressionSyntax! node) -> void
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor.VisitNextExpression(Vezel.Celerity.Language.Syntax.Tree.NextExpressionSyntax! node) -> void
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor.VisitNominalType(Vezel.Celerity.Language.Syntax.Tree.NominalTypeSyntax! node) -> void
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor.VisitNominalTypeArgumentList(Vezel.Celerity.Language.Syntax.Tree.NominalTypeArgumentListSyntax! node) -> void
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor.VisitNominalTypePath(Vezel.Celerity.Language.Syntax.Tree.NominalTypePathSyntax! node) -> void
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor.VisitNoneReturnType(Vezel.Celerity.Language.Syntax.Tree.NoneReturnTypeSyntax! node) -> void
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor.VisitParenthesizedExpression(Vezel.Celerity.Language.Syntax.Tree.ParenthesizedExpressionSyntax! node) -> void
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor.VisitPatternAlias(Vezel.Celerity.Language.Syntax.Tree.PatternAliasSyntax! node) -> void
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor.VisitRaiseExpression(Vezel.Celerity.Language.Syntax.Tree.RaiseExpressionSyntax! node) -> void
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor.VisitRealType(Vezel.Celerity.Language.Syntax.Tree.RealTypeSyntax! node) -> void
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor.VisitReceiveExpression(Vezel.Celerity.Language.Syntax.Tree.ReceiveExpressionSyntax! node) -> void
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor.VisitReceiveExpressionArm(Vezel.Celerity.Language.Syntax.Tree.ReceiveExpressionArmSyntax! node) -> void
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor.VisitReceiveParameter(Vezel.Celerity.Language.Syntax.Tree.ReceiveParameterSyntax! node) -> void
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor.VisitReceiveParameterList(Vezel.Celerity.Language.Syntax.Tree.ReceiveParameterListSyntax! node) -> void
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor.VisitRecordExpression(Vezel.Celerity.Language.Syntax.Tree.RecordExpressionSyntax! node) -> void
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor.VisitRecordExpressionMeta(Vezel.Celerity.Language.Syntax.Tree.RecordExpressionMetaSyntax! node) -> void
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor.VisitRecordPattern(Vezel.Celerity.Language.Syntax.Tree.RecordPatternSyntax! node) -> void
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor.VisitRecordType(Vezel.Celerity.Language.Syntax.Tree.RecordTypeSyntax! node) -> void
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor.VisitRecordTypeMeta(Vezel.Celerity.Language.Syntax.Tree.RecordTypeMetaSyntax! node) -> void
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor.VisitReferenceType(Vezel.Celerity.Language.Syntax.Tree.ReferenceTypeSyntax! node) -> void
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor.VisitRegularReturnType(Vezel.Celerity.Language.Syntax.Tree.RegularReturnTypeSyntax! node) -> void
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor.VisitRelationalExpression(Vezel.Celerity.Language.Syntax.Tree.RelationalExpressionSyntax! node) -> void
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor.VisitReturnExpression(Vezel.Celerity.Language.Syntax.Tree.ReturnExpressionSyntax! node) -> void
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor.VisitReturnTypeAnnotation(Vezel.Celerity.Language.Syntax.Tree.ReturnTypeAnnotationSyntax! node) -> void
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor.VisitReturnTypeAnnotationRaise(Vezel.Celerity.Language.Syntax.Tree.ReturnTypeAnnotationRaiseSyntax! node) -> void
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor.VisitSendArgumentList(Vezel.Celerity.Language.Syntax.Tree.SendArgumentListSyntax! node) -> void
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor.VisitSendExpression(Vezel.Celerity.Language.Syntax.Tree.SendExpressionSyntax! node) -> void
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor.VisitSetExpression(Vezel.Celerity.Language.Syntax.Tree.SetExpressionSyntax! node) -> void
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor.VisitSetPattern(Vezel.Celerity.Language.Syntax.Tree.SetPatternSyntax! node) -> void
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor.VisitSetType(Vezel.Celerity.Language.Syntax.Tree.SetTypeSyntax! node) -> void
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor.VisitShiftExpression(Vezel.Celerity.Language.Syntax.Tree.ShiftExpressionSyntax! node) -> void
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor.VisitStatementSubmission(Vezel.Celerity.Language.Syntax.Tree.StatementSubmissionSyntax! node) -> void
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor.VisitStringPattern(Vezel.Celerity.Language.Syntax.Tree.StringPatternSyntax! node) -> void
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor.VisitStringType(Vezel.Celerity.Language.Syntax.Tree.StringTypeSyntax! node) -> void
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor.VisitTestDeclaration(Vezel.Celerity.Language.Syntax.Tree.TestDeclarationSyntax! node) -> void
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor.VisitThisExpression(Vezel.Celerity.Language.Syntax.Tree.ThisExpressionSyntax! node) -> void
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor.VisitTryExpression(Vezel.Celerity.Language.Syntax.Tree.TryExpressionSyntax! node) -> void
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor.VisitTupleExpression(Vezel.Celerity.Language.Syntax.Tree.TupleExpressionSyntax! node) -> void
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor.VisitTuplePattern(Vezel.Celerity.Language.Syntax.Tree.TuplePatternSyntax! node) -> void
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor.VisitTupleType(Vezel.Celerity.Language.Syntax.Tree.TupleTypeSyntax! node) -> void
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor.VisitTypeAnnotation(Vezel.Celerity.Language.Syntax.Tree.TypeAnnotationSyntax! node) -> void
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor.VisitTypeDeclaration(Vezel.Celerity.Language.Syntax.Tree.TypeDeclarationSyntax! node) -> void
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor.VisitTypeParameter(Vezel.Celerity.Language.Syntax.Tree.TypeParameterSyntax! node) -> void
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor.VisitTypeParameterList(Vezel.Celerity.Language.Syntax.Tree.TypeParameterListSyntax! node) -> void
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor.VisitUnaryExpression(Vezel.Celerity.Language.Syntax.Tree.UnaryExpressionSyntax! node) -> void
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor.VisitUnionType(Vezel.Celerity.Language.Syntax.Tree.UnionTypeSyntax! node) -> void
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor.VisitUnknownType(Vezel.Celerity.Language.Syntax.Tree.UnknownTypeSyntax! node) -> void
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor.VisitUseDeclaration(Vezel.Celerity.Language.Syntax.Tree.UseDeclarationSyntax! node) -> void
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor.VisitVariableBinding(Vezel.Celerity.Language.Syntax.Tree.VariableBindingSyntax! node) -> void
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor.VisitVariableType(Vezel.Celerity.Language.Syntax.Tree.VariableTypeSyntax! node) -> void
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor.VisitVariableTypeConstraint(Vezel.Celerity.Language.Syntax.Tree.VariableTypeConstraintSyntax! node) -> void
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor.VisitWhileExpression(Vezel.Celerity.Language.Syntax.Tree.WhileExpressionSyntax! node) -> void
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor.VisitWildcardPattern(Vezel.Celerity.Language.Syntax.Tree.WildcardPatternSyntax! node) -> void
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor<T>.DefaultVisit(Vezel.Celerity.Language.Syntax.Tree.SyntaxNode! node) -> T?
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor<T>.VisitAdditiveExpression(Vezel.Celerity.Language.Syntax.Tree.AdditiveExpressionSyntax! node) -> T?
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor<T>.VisitAgentType(Vezel.Celerity.Language.Syntax.Tree.AgentTypeSyntax! node) -> T?
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor<T>.VisitAgentTypeMessage(Vezel.Celerity.Language.Syntax.Tree.AgentTypeMessageSyntax! node) -> T?
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor<T>.VisitAgentTypeMessageParameter(Vezel.Celerity.Language.Syntax.Tree.AgentTypeMessageParameterSyntax! node) -> T?
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor<T>.VisitAgentTypeMessageParameterList(Vezel.Celerity.Language.Syntax.Tree.AgentTypeMessageParameterListSyntax! node) -> T?
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor<T>.VisitAgentTypeProtocol(Vezel.Celerity.Language.Syntax.Tree.AgentTypeProtocolSyntax! node) -> T?
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor<T>.VisitAggregateExpressionField(Vezel.Celerity.Language.Syntax.Tree.AggregateExpressionFieldSyntax! node) -> T?
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor<T>.VisitAggregateExpressionWith(Vezel.Celerity.Language.Syntax.Tree.AggregateExpressionWithSyntax! node) -> T?
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor<T>.VisitAggregatePatternField(Vezel.Celerity.Language.Syntax.Tree.AggregatePatternFieldSyntax! node) -> T?
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor<T>.VisitAggregateTypeField(Vezel.Celerity.Language.Syntax.Tree.AggregateTypeFieldSyntax! node) -> T?
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor<T>.VisitAnyType(Vezel.Celerity.Language.Syntax.Tree.AnyTypeSyntax! node) -> T?
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor<T>.VisitArrayExpression(Vezel.Celerity.Language.Syntax.Tree.ArrayExpressionSyntax! node) -> T?
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor<T>.VisitArrayPattern(Vezel.Celerity.Language.Syntax.Tree.ArrayPatternSyntax! node) -> T?
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor<T>.VisitArrayType(Vezel.Celerity.Language.Syntax.Tree.ArrayTypeSyntax! node) -> T?
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor<T>.VisitAssertExpression(Vezel.Celerity.Language.Syntax.Tree.AssertExpressionSyntax! node) -> T?
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor<T>.VisitAssignmentExpression(Vezel.Celerity.Language.Syntax.Tree.AssignmentExpressionSyntax! node) -> T?
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor<T>.VisitAtomType(Vezel.Celerity.Language.Syntax.Tree.AtomTypeSyntax! node) -> T?
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor<T>.VisitAttribute(Vezel.Celerity.Language.Syntax.Tree.AttributeSyntax! node) -> T?
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor<T>.VisitBitwiseExpression(Vezel.Celerity.Language.Syntax.Tree.BitwiseExpressionSyntax! node) -> T?
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor<T>.VisitBlockExpression(Vezel.Celerity.Language.Syntax.Tree.BlockExpressionSyntax! node) -> T?
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor<T>.VisitBooleanType(Vezel.Celerity.Language.Syntax.Tree.BooleanTypeSyntax! node) -> T?
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor<T>.VisitBreakExpression(Vezel.Celerity.Language.Syntax.Tree.BreakExpressionSyntax! node) -> T?
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor<T>.VisitBreakExpressionResult(Vezel.Celerity.Language.Syntax.Tree.BreakExpressionResultSyntax! node) -> T?
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor<T>.VisitCallArgumentList(Vezel.Celerity.Language.Syntax.Tree.CallArgumentListSyntax! node) -> T?
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor<T>.VisitCallExpression(Vezel.Celerity.Language.Syntax.Tree.CallExpressionSyntax! node) -> T?
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor<T>.VisitConditionExpression(Vezel.Celerity.Language.Syntax.Tree.ConditionExpressionSyntax! node) -> T?
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor<T>.VisitConditionExpressionArm(Vezel.Celerity.Language.Syntax.Tree.ConditionExpressionArmSyntax! node) -> T?
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor<T>.VisitConstantDeclaration(Vezel.Celerity.Language.Syntax.Tree.ConstantDeclarationSyntax! node) -> T?
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor<T>.VisitDeclarationSubmission(Vezel.Celerity.Language.Syntax.Tree.DeclarationSubmissionSyntax! node) -> T?
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor<T>.VisitDeferStatement(Vezel.Celerity.Language.Syntax.Tree.DeferStatementSyntax! node) -> T?
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor<T>.VisitDiscardBinding(Vezel.Celerity.Language.Syntax.Tree.DiscardBindingSyntax! node) -> T?
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor<T>.VisitErrorExpression(Vezel.Celerity.Language.Syntax.Tree.ErrorExpressionSyntax! node) -> T?
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor<T>.VisitErrorPattern(Vezel.Celerity.Language.Syntax.Tree.ErrorPatternSyntax! node) -> T?
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor<T>.VisitErrorType(Vezel.Celerity.Language.Syntax.Tree.ErrorTypeSyntax! node) -> T?
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor<T>.VisitExpressionArmGuard(Vezel.Celerity.Language.Syntax.Tree.ExpressionArmGuardSyntax! node) -> T?
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor<T>.VisitExpressionElse(Vezel.Celerity.Language.Syntax.Tree.ExpressionElseSyntax! node) -> T?
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor<T>.VisitExpressionPatternArm(Vezel.Celerity.Language.Syntax.Tree.ExpressionPatternArmSyntax! node) -> T?
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor<T>.VisitExpressionStatement(Vezel.Celerity.Language.Syntax.Tree.ExpressionStatementSyntax! node) -> T?
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor<T>.VisitFieldExpression(Vezel.Celerity.Language.Syntax.Tree.FieldExpressionSyntax! node) -> T?
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor<T>.VisitForExpression(Vezel.Celerity.Language.Syntax.Tree.ForExpressionSyntax! node) -> T?
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor<T>.VisitFunctionDeclaration(Vezel.Celerity.Language.Syntax.Tree.FunctionDeclarationSyntax! node) -> T?
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor<T>.VisitFunctionParameter(Vezel.Celerity.Language.Syntax.Tree.FunctionParameterSyntax! node) -> T?
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor<T>.VisitFunctionParameterList(Vezel.Celerity.Language.Syntax.Tree.FunctionParameterListSyntax! node) -> T?
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor<T>.VisitFunctionType(Vezel.Celerity.Language.Syntax.Tree.FunctionTypeSyntax! node) -> T?
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor<T>.VisitFunctionTypeParameter(Vezel.Celerity.Language.Syntax.Tree.FunctionTypeParameterSyntax! node) -> T?
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor<T>.VisitFunctionTypeParameterList(Vezel.Celerity.Language.Syntax.Tree.FunctionTypeParameterListSyntax! node) -> T?
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor<T>.VisitFunctionTypeSignature(Vezel.Celerity.Language.Syntax.Tree.FunctionTypeSignatureSyntax! node) -> T?
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor<T>.VisitHandleType(Vezel.Celerity.Language.Syntax.Tree.HandleTypeSyntax! node) -> T?
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor<T>.VisitIdentifierExpression(Vezel.Celerity.Language.Syntax.Tree.IdentifierExpressionSyntax! node) -> T?
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor<T>.VisitIfExpression(Vezel.Celerity.Language.Syntax.Tree.IfExpressionSyntax! node) -> T?
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor<T>.VisitIndexArgumentList(Vezel.Celerity.Language.Syntax.Tree.IndexArgumentListSyntax! node) -> T?
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor<T>.VisitIndexExpression(Vezel.Celerity.Language.Syntax.Tree.IndexExpressionSyntax! node) -> T?
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor<T>.VisitIntegerType(Vezel.Celerity.Language.Syntax.Tree.IntegerTypeSyntax! node) -> T?
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor<T>.VisitIntegerTypeRange(Vezel.Celerity.Language.Syntax.Tree.IntegerTypeRangeSyntax! node) -> T?
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor<T>.VisitIntegerTypeRangeBound(Vezel.Celerity.Language.Syntax.Tree.IntegerTypeRangeBoundSyntax! node) -> T?
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor<T>.VisitInteractiveDocument(Vezel.Celerity.Language.Syntax.Tree.InteractiveDocumentSyntax! node) -> T?
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor<T>.VisitLambdaExpression(Vezel.Celerity.Language.Syntax.Tree.LambdaExpressionSyntax! node) -> T?
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor<T>.VisitLambdaParameter(Vezel.Celerity.Language.Syntax.Tree.LambdaParameterSyntax! node) -> T?
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor<T>.VisitLambdaParameterList(Vezel.Celerity.Language.Syntax.Tree.LambdaParameterListSyntax! node) -> T?
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor<T>.VisitLetStatement(Vezel.Celerity.Language.Syntax.Tree.LetStatementSyntax! node) -> T?
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor<T>.VisitLiteralExpression(Vezel.Celerity.Language.Syntax.Tree.LiteralExpressionSyntax! node) -> T?
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor<T>.VisitLiteralPattern(Vezel.Celerity.Language.Syntax.Tree.LiteralPatternSyntax! node) -> T?
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor<T>.VisitLiteralType(Vezel.Celerity.Language.Syntax.Tree.LiteralTypeSyntax! node) -> T?
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor<T>.VisitLogicalExpression(Vezel.Celerity.Language.Syntax.Tree.LogicalExpressionSyntax! node) -> T?
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor<T>.VisitMapExpression(Vezel.Celerity.Language.Syntax.Tree.MapExpressionSyntax! node) -> T?
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor<T>.VisitMapExpressionPair(Vezel.Celerity.Language.Syntax.Tree.MapExpressionPairSyntax! node) -> T?
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor<T>.VisitMapPattern(Vezel.Celerity.Language.Syntax.Tree.MapPatternSyntax! node) -> T?
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor<T>.VisitMapPatternPair(Vezel.Celerity.Language.Syntax.Tree.MapPatternPairSyntax! node) -> T?
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor<T>.VisitMapType(Vezel.Celerity.Language.Syntax.Tree.MapTypeSyntax! node) -> T?
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor<T>.VisitMatchExpression(Vezel.Celerity.Language.Syntax.Tree.MatchExpressionSyntax! node) -> T?
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor<T>.VisitMetaExpression(Vezel.Celerity.Language.Syntax.Tree.MetaExpressionSyntax! node) -> T?
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor<T>.VisitModuleDocument(Vezel.Celerity.Language.Syntax.Tree.ModuleDocumentSyntax! node) -> T?
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor<T>.VisitModuleExpression(Vezel.Celerity.Language.Syntax.Tree.ModuleExpressionSyntax! node) -> T?
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor<T>.VisitModulePath(Vezel.Celerity.Language.Syntax.Tree.ModulePathSyntax! node) -> T?
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor<T>.VisitModulePattern(Vezel.Celerity.Language.Syntax.Tree.ModulePatternSyntax! node) -> T?
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor<T>.VisitModuleType(Vezel.Celerity.Language.Syntax.Tree.ModuleTypeSyntax! node) -> T?
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor<T>.VisitMultiplicativeExpression(Vezel.Celerity.Language.Syntax.Tree.MultiplicativeExpressionSyntax! node) -> T?
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor<T>.VisitNextExpression(Vezel.Celerity.Language.Syntax.Tree.NextExpressionSyntax! node) -> T?
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor<T>.VisitNominalType(Vezel.Celerity.Language.Syntax.Tree.NominalTypeSyntax! node) -> T?
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor<T>.VisitNominalTypeArgumentList(Vezel.Celerity.Language.Syntax.Tree.NominalTypeArgumentListSyntax! node) -> T?
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor<T>.VisitNominalTypePath(Vezel.Celerity.Language.Syntax.Tree.NominalTypePathSyntax! node) -> T?
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor<T>.VisitNoneReturnType(Vezel.Celerity.Language.Syntax.Tree.NoneReturnTypeSyntax! node) -> T?
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor<T>.VisitParenthesizedExpression(Vezel.Celerity.Language.Syntax.Tree.ParenthesizedExpressionSyntax! node) -> T?
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor<T>.VisitPatternAlias(Vezel.Celerity.Language.Syntax.Tree.PatternAliasSyntax! node) -> T?
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor<T>.VisitRaiseExpression(Vezel.Celerity.Language.Syntax.Tree.RaiseExpressionSyntax! node) -> T?
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor<T>.VisitRealType(Vezel.Celerity.Language.Syntax.Tree.RealTypeSyntax! node) -> T?
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor<T>.VisitReceiveExpression(Vezel.Celerity.Language.Syntax.Tree.ReceiveExpressionSyntax! node) -> T?
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor<T>.VisitReceiveExpressionArm(Vezel.Celerity.Language.Syntax.Tree.ReceiveExpressionArmSyntax! node) -> T?
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor<T>.VisitReceiveParameter(Vezel.Celerity.Language.Syntax.Tree.ReceiveParameterSyntax! node) -> T?
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor<T>.VisitReceiveParameterList(Vezel.Celerity.Language.Syntax.Tree.ReceiveParameterListSyntax! node) -> T?
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor<T>.VisitRecordExpression(Vezel.Celerity.Language.Syntax.Tree.RecordExpressionSyntax! node) -> T?
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor<T>.VisitRecordExpressionMeta(Vezel.Celerity.Language.Syntax.Tree.RecordExpressionMetaSyntax! node) -> T?
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor<T>.VisitRecordPattern(Vezel.Celerity.Language.Syntax.Tree.RecordPatternSyntax! node) -> T?
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor<T>.VisitRecordType(Vezel.Celerity.Language.Syntax.Tree.RecordTypeSyntax! node) -> T?
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor<T>.VisitRecordTypeMeta(Vezel.Celerity.Language.Syntax.Tree.RecordTypeMetaSyntax! node) -> T?
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor<T>.VisitReferenceType(Vezel.Celerity.Language.Syntax.Tree.ReferenceTypeSyntax! node) -> T?
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor<T>.VisitRegularReturnType(Vezel.Celerity.Language.Syntax.Tree.RegularReturnTypeSyntax! node) -> T?
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor<T>.VisitRelationalExpression(Vezel.Celerity.Language.Syntax.Tree.RelationalExpressionSyntax! node) -> T?
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor<T>.VisitReturnExpression(Vezel.Celerity.Language.Syntax.Tree.ReturnExpressionSyntax! node) -> T?
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor<T>.VisitReturnTypeAnnotation(Vezel.Celerity.Language.Syntax.Tree.ReturnTypeAnnotationSyntax! node) -> T?
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor<T>.VisitReturnTypeAnnotationRaise(Vezel.Celerity.Language.Syntax.Tree.ReturnTypeAnnotationRaiseSyntax! node) -> T?
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor<T>.VisitSendArgumentList(Vezel.Celerity.Language.Syntax.Tree.SendArgumentListSyntax! node) -> T?
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor<T>.VisitSendExpression(Vezel.Celerity.Language.Syntax.Tree.SendExpressionSyntax! node) -> T?
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor<T>.VisitSetExpression(Vezel.Celerity.Language.Syntax.Tree.SetExpressionSyntax! node) -> T?
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor<T>.VisitSetPattern(Vezel.Celerity.Language.Syntax.Tree.SetPatternSyntax! node) -> T?
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor<T>.VisitSetType(Vezel.Celerity.Language.Syntax.Tree.SetTypeSyntax! node) -> T?
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor<T>.VisitShiftExpression(Vezel.Celerity.Language.Syntax.Tree.ShiftExpressionSyntax! node) -> T?
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor<T>.VisitStatementSubmission(Vezel.Celerity.Language.Syntax.Tree.StatementSubmissionSyntax! node) -> T?
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor<T>.VisitStringPattern(Vezel.Celerity.Language.Syntax.Tree.StringPatternSyntax! node) -> T?
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor<T>.VisitStringType(Vezel.Celerity.Language.Syntax.Tree.StringTypeSyntax! node) -> T?
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor<T>.VisitTestDeclaration(Vezel.Celerity.Language.Syntax.Tree.TestDeclarationSyntax! node) -> T?
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor<T>.VisitThisExpression(Vezel.Celerity.Language.Syntax.Tree.ThisExpressionSyntax! node) -> T?
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor<T>.VisitTryExpression(Vezel.Celerity.Language.Syntax.Tree.TryExpressionSyntax! node) -> T?
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor<T>.VisitTupleExpression(Vezel.Celerity.Language.Syntax.Tree.TupleExpressionSyntax! node) -> T?
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor<T>.VisitTuplePattern(Vezel.Celerity.Language.Syntax.Tree.TuplePatternSyntax! node) -> T?
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor<T>.VisitTupleType(Vezel.Celerity.Language.Syntax.Tree.TupleTypeSyntax! node) -> T?
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor<T>.VisitTypeAnnotation(Vezel.Celerity.Language.Syntax.Tree.TypeAnnotationSyntax! node) -> T?
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor<T>.VisitTypeDeclaration(Vezel.Celerity.Language.Syntax.Tree.TypeDeclarationSyntax! node) -> T?
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor<T>.VisitTypeParameter(Vezel.Celerity.Language.Syntax.Tree.TypeParameterSyntax! node) -> T?
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor<T>.VisitTypeParameterList(Vezel.Celerity.Language.Syntax.Tree.TypeParameterListSyntax! node) -> T?
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor<T>.VisitUnaryExpression(Vezel.Celerity.Language.Syntax.Tree.UnaryExpressionSyntax! node) -> T?
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor<T>.VisitUnionType(Vezel.Celerity.Language.Syntax.Tree.UnionTypeSyntax! node) -> T?
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor<T>.VisitUnknownType(Vezel.Celerity.Language.Syntax.Tree.UnknownTypeSyntax! node) -> T?
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor<T>.VisitUseDeclaration(Vezel.Celerity.Language.Syntax.Tree.UseDeclarationSyntax! node) -> T?
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor<T>.VisitVariableBinding(Vezel.Celerity.Language.Syntax.Tree.VariableBindingSyntax! node) -> T?
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor<T>.VisitVariableType(Vezel.Celerity.Language.Syntax.Tree.VariableTypeSyntax! node) -> T?
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor<T>.VisitVariableTypeConstraint(Vezel.Celerity.Language.Syntax.Tree.VariableTypeConstraintSyntax! node) -> T?
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor<T>.VisitWhileExpression(Vezel.Celerity.Language.Syntax.Tree.WhileExpressionSyntax! node) -> T?
virtual Vezel.Celerity.Language.Syntax.SyntaxVisitor<T>.VisitWildcardPattern(Vezel.Celerity.Language.Syntax.Tree.WildcardPatternSyntax! node) -> T?
virtual Vezel.Celerity.Language.Syntax.Tree.SyntaxItem.ToFullString() -> string!
~Vezel.Celerity.Language.Semantics.Tree.SemanticNodeList<TSemantics, TSyntax>.GetEnumerator() -> Vezel.Celerity.Language.Semantics.Tree.SemanticNodeList<TSemantics, TSyntax>.Enumerator
~Vezel.Celerity.Language.Semantics.Tree.SeparatedSemanticNodeList<TSemantics, TSyntax>.GetEnumerator() -> Vezel.Celerity.Language.Semantics.Tree.SeparatedSemanticNodeList<TSemantics, TSyntax>.Enumerator
~Vezel.Celerity.Language.Syntax.Tree.SeparatedSyntaxItemList<T>.GetEnumerator() -> Vezel.Celerity.Language.Syntax.Tree.SeparatedSyntaxItemList<T>.Enumerator
~Vezel.Celerity.Language.Syntax.Tree.SyntaxItemList<T>.GetEnumerator() -> Vezel.Celerity.Language.Syntax.Tree.SyntaxItemList<T>.Enumerator
